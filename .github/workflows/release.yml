name: Release to Azure

on:
  push:
    branches:
      - master
      - production
      - test
      - demo1
      - demo2
      - demo3

defaults:
  run:
    working-directory: prime-router

jobs:
  pre_job:
    name: "Set Build Environment"
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.build_vars.outputs.env_name }}
      version: ${{ steps.build_vars.outputs.version }}
      has_router_change: ${{ steps.build_vars.outputs.has_router_change }}
      has_react_change: ${{ steps.build_vars.outputs.has_react_change }}
    steps:
      - name: Check out changes
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Build vars
        id: build_vars
        uses: ./.github/actions/build-vars

  build_release:
    name: "Release: Build Router"
    needs:
      - pre_job
    if: needs.pre_job.outputs.has_router_change == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check out changes
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Build backend
        uses: ./.github/actions/build-backend
        with:
          version: ${{ needs.pre_job.outputs.version }}

  build_frontend_react_release:
    name: "Release: Build Frontend (React)"
    needs:
      - pre_job
    if: needs.pre_job.outputs.has_react_change == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend-react
    steps:
      - name: Check out changes
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Build frontend
        uses: ./.github/actions/build-frontend
        with:
          env-name: ${{ needs.pre_job.outputs.env_name }}
          appinsights-staging-key: ${{ secrets.APPINSIGHTS_STAGING_KEY }}
          appinsights-prod-key: ${{ secrets.APPINSIGHTS_PROD_KEY }}
          version: ${{ needs.pre_job.outputs.version }}

  deploy_infrastructure:
    name: "Deploy Infrastructure: ${{ needs.pre_job.outputs.env_name }}"
    needs:
      - pre_job
      - build_release
      - build_frontend_react_release
    if: |
      needs.pre_job.outputs.env_name == 'demo1' ||
      needs.pre_job.outputs.env_name == 'demo2' ||
      needs.pre_job.outputs.env_name == 'demo3'
    environment: ${{ needs.pre_job.outputs.env_name }}
    concurrency: ${{ needs.pre_job.outputs.env_name }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: operations/app/terraform/vars/demo
    steps:
      - name: Check out changes
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Connect to VPN and login to Azure
        uses: ./.github/actions/vpn-azure
        with:
          env-name: ${{ needs.pre_job.outputs.env_name }}
          tls-key: ${{ secrets.TLS_KEY }}
          ca-cert: ${{ secrets.CA_CRT}}
          user-crt: ${{ secrets.USER_CRT }}
          user-key: ${{ secrets.USER_KEY }}
          sp-creds: ${{ secrets.SERVICE_PRINCIPAL_CREDS }}
          tf-auth: true

      - name: Get runner ip
        id: runner_ip
        uses: ./.github/actions/runner-ip

      - name: Terraform - init
        run: |
          echo "runner ip: ${{ steps.runner_ip.outputs.ip-address }}"
          terraform init \
          -reconfigure \
          -var-file=${{ needs.pre_job.outputs.env_name }}/env.tfvars.json \
          -var='terraform_caller_ip_address=["162.224.209.174", "24.163.118.70", "75.191.122.59", "108.48.23.191", "${{ steps.runner_ip.outputs.ip-address }}"]' \
          -backend-config=${{ needs.pre_job.outputs.env_name }}/env.tfbackend
        shell: bash

      - name: Terraform - validate
        run: |
          terraform validate
        shell: bash

      - name: Terraform - apply
        run: |
          for i in {1..3}; do \
          terraform apply \
          -target=module.init \
          -var-file=${{ needs.pre_job.outputs.env_name }}/env.tfvars.json \
          -var='terraform_caller_ip_address=["162.224.209.174", "24.163.118.70", "75.191.122.59", "108.48.23.191", "${{ steps.runner_ip.outputs.ip-address }}"]' \
          -auto-approve; \
          sleep 60; \
          done

          for i in {1..3}; do \
          terraform apply \
          -var-file=${{ needs.pre_job.outputs.env_name }}/env.tfvars.json \
          -var='terraform_caller_ip_address=["162.224.209.174", "24.163.118.70", "75.191.122.59", "108.48.23.191", "${{ steps.runner_ip.outputs.ip-address }}"]' \
          -auto-approve; \
          sleep 60; \
          done
        shell: bash

  deploy_release:
    name: "Deploy Release: ${{ needs.pre_job.outputs.env_name }}"
    needs:
      - pre_job
      - build_release
      - build_frontend_react_release
      - deploy_infrastructure
    if: |
      always() && 
      (needs.pre_job.outputs.has_router_change == 'true' ||
      needs.pre_job.outputs.has_react_change == 'true')
    environment: ${{ needs.pre_job.outputs.env_name }}
    concurrency: ${{ needs.pre_job.outputs.env_name }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out changes
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b

      - name: Connect to VPN and login to Azure
        uses: ./.github/actions/vpn-azure
        with:
          env-name: ${{ needs.pre_job.outputs.env_name }}
          tls-key: ${{ secrets.TLS_KEY }}
          ca-cert: ${{ secrets.CA_CRT}}
          user-crt: ${{ secrets.USER_CRT }}
          user-key: ${{ secrets.USER_KEY }}
          sp-creds: ${{ secrets.SERVICE_PRINCIPAL_CREDS }}

      - name: Deploy backend
        if: needs.pre_job.outputs.has_router_change == 'true'
        uses: ./.github/actions/deploy-backend
        with:
          env-name: ${{ needs.pre_job.outputs.env_name }}
          dct-root-pass: ${{ secrets.DCT_ROOT_PASS }}
          dct-repo-pass: ${{ secrets.DCT_REPO_PASS }}
          version: ${{ needs.pre_job.outputs.version }}

      - name: Deploy frontend
        if: needs.pre_job.outputs.has_react_change == 'true'
        uses: ./.github/actions/deploy-frontend
        with:
          env-name: ${{ needs.pre_job.outputs.env_name }}
          version: ${{ needs.pre_job.outputs.version }}
