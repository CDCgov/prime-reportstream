name: Check Key Vault Certificates Expiration

on:
  push: 
    branches:
      - feature/check-keyvauly-cert-expiration
    
jobs:
  check-certificates:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Changes
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f

      - name: Get Runner IP
        run: echo "::set-output name=runner_ip::$(curl https://ifconfig.me)"
        id: runner_ip

      - name: Connect to VPN & Login into Azure
        uses: ./.github/actions/vpn-azure
        with:
          tls-key: ${{ secrets.TLS_KEY }}
          ca-cert: ${{ secrets.CA_CRT}}
          user-crt: ${{ secrets.USER_CRT }}
          user-key: ${{ secrets.USER_KEY }}
          sp-creds: ${{ secrets.SERVICE_PRINCIPAL_CREDS }}

      - name: Add Runner IP to Key Vault Firewall
        uses: azure/cli@v1
        with:
          inlineScript: |
            az keyvault network-rule add --name pdhstaging-keyvault --ip-address ${{ steps.runner_ip.outputs.runner_ip }}

      - name: Check Key Vault Certificates
        id: check-certs
        run: |
          certificates=$(az keyvault certificate list --vault-name pdhstaging-keyvault --query "[?attributes.expires<=\`$(date +%Y-%m-%dT%H:%MZ --date='+30 days')\`].{name:name, expiration:attributes.expires}" -o json)
          if [[ -z "$certificates" ]]; then
            echo "No certificates are expiring within the next 30 days."
          else
            echo "The following certificates are expiring within the next 30 days:"
            echo "$certificates"
            echo "::set-output name=certificates::$certificates"
            echo "::set-env name=CERTIFICATES::$(echo "${{ steps.check-certs.outputs.certificates }}" | jq -r '.[] | "\(.name) (\(.expiration))"')"
          fi

      - name: Send Slack notification
        run: |
          certificates="${{ steps.check-certs.outputs.certificates }}"
          message="The following certificates are expiring within the next 30 days:\n$(
            echo "${certificates}" | jq -r '.[] | "\(.name) (\(.expiration))"'
          )"
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"${message}\"}" <SLACK_WEBHOOK_URL>



      # - name: Get Certificates Expiration
      #   run: |
      #     az keyvault certificate list --vault-name pdhstaging-keyvault --query "[].{name:name, expires:attributes.expires}" --output table

      # - name: Get Near Expiry Certificates
      #   id: cert-expiration
      #   run: |
      #     expiry_date=$(date -d "+300 days" -I)
      #     expiry_certificates=$(az keyvault certificate list --vault-name pdhstaging-keyvault --query "[?attributes.expires<=\`$near_expiry_date\`].name" -o tsv)
      #     echo "::set-output name=expiring_certs::$expiry_certificates" 
      #     expiry_days=$(( ( $(date -d “$expiry_date” +%s) - $(date +%s) ) / 86400 )) >> $GITHUB_ENV
      #     echo "::set-output name=expiring_days::$expiry_days"
          
      #     ${{ steps.cert-expiration.outputs.expiring_days }}

      # - name: Send Slack Notification
      #   if: ${{ steps.cert-expiration.outputs.expiring_days }} <= 300
      #   id: slack
      #   uses: slackapi/slack-github-action@v1.23.0
      #   with:
      #     payload: '{"text": "The following certificates ${{ steps.cert-expiration.outputs.expiring_certs }} will expire within the ${{ steps.cert-expiration.outputs.expiring_days }} days."}'
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Remove Runner IP to Key Vault Firewall
        run: az keyvault network-rule remove --name pdhstaging-keyvault --ip-address $runner_ip
