name: Build Hub

on: 
  pull_request:
    branches:
      - master
    paths:
      - "prime-router/**"

env:
  # These are for CI and not credentials of any system
  DB_USER: prime
  DB_PASSWORD: changeIT!

jobs:
  pre_job:
    name: Pre Job
    runs-on: ubuntu-latest
    outputs:
      has_router_change: ${{ steps.build_vars.outputs.has_router_change }}
    steps:
      - name: "Check out changes"
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - name: Build vars
        id: build_vars
        uses: ./.github/actions/build-vars

  build_router:
    name: Build Router
    runs-on: ubuntu-latest
    needs: pre_job
    if: ${{ needs.pre_job.outputs.has_router_change == 'true' }}
    defaults:
      run:
        working-directory: prime-router

    steps:
      - name: "Check out changes"
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9

      # Appears not to be needed on GitHub (but needed when running act [https://github.com/nektos/act] locally)
      # - name: Install docker-compose
      #   run: apt-get update && apt-get --yes install docker-compose
      - name: Set up JDK 11
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'

      - uses: gradle/wrapper-validation-action@8d49e559aae34d3e0eb16cde532684bc9702762b

      - name: Spin up build containers
        run: docker-compose -f docker-compose.postgres.yml up -d

      - name: Build Prime Router Package
        run: ./gradlew package -Pshowtests
        
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@f0b5d2433f350eff587831d4ad22cb15aab75866
        # Per https://github.com/EnricoMi/publish-unit-test-result-action#support-fork-repositories-and-dependabot-branches
        if: >
          always() &&
          github.event.sender.login != 'dependabot[bot]' &&
          ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository )
        with:
          # This path is from the root of the repo as needed by the plugin
          files: prime-router/build/test-results/test/**/*.xml

      - name: Spin up vault
        timeout-minutes: 1
        run: |
          mkdir .vault/env
          touch .vault/env/.env.local
          docker-compose -f docker-compose.yml up -d vault
          while [ ! -s .vault/env/.env.local ]; do sleep 1; done
          echo "loaded env vars"

      - name: Spin up containers
        id: spin_containers
        run: |
          docker-compose -f docker-compose.yml up -d prime_dev sftp azurite
          
      - name: Give some time for the container to start
        run: |
          echo "sleeping 30"
          sleep 30
          echo "wake up"
      
      - name: Load the configuration
        run: |
         ./gradlew reloadTables
         ./gradlew reloadSettings
        
      # Integrations tests require the metadata catalog
      - name: Run Integration Tests
        run: ./gradlew testIntegration -Pshowtests

      - name: Publish Integration Test Results
        uses: EnricoMi/publish-unit-test-result-action@f0b5d2433f350eff587831d4ad22cb15aab75866
        # Per https://github.com/EnricoMi/publish-unit-test-result-action#support-fork-repositories-and-dependabot-branches
        if: >
          always() &&
          github.event.sender.login != 'dependabot[bot]' &&
          ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository )
        with:
          # This path is from the root of the repo as needed by the plugin
          files: prime-router/build/test-results/testIntegration/**/*.xml
          check_name: "Integration Test Results"

      - name: Correct sftp perms
        run: docker-compose exec -T sftp chmod 777 /home/foo/upload

      - name: Smoke tests
        run: |
          export $(xargs < .vault/env/.env.local)
          ./prime create-credential --type=UserPass --persist=DEFAULT-SFTP --user foo --pass pass
          ./gradlew testSmoke
          
      - name: Dump docker logs
        if: always()
        uses: jwalton/gh-docker-logs@59c9656cd3cb7542525f3dce7ae2f44c0ff85d66
        with:
          images: 'prime-router_prime_dev,vault'

      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f .gradle/caches/modules-2/modules-2.lock
          rm -f .gradle/caches/modules-2/gc.properties

      - name: Generate New Schema Docs
        run: |
          # Clean the docs before regenerating
          rm -rf docs/schema_documentation/*
          ./gradlew generatedocs

      - name: Check for Uncommited Schema Docs
        id: check_changes
        continue-on-error: true
        run: |
          CHANGED_FILES=$(git status --short docs)
          if [[ -n "$CHANGED_FILES" ]]; then
            echo "Updated documentation:"
            git diff docs

            # Escape line breaks so they can be used in step output.
            # See: https://github.community/t/set-output-truncates-multiline-strings/16852
            FILES_ESCAPED="$CHANGED_FILES"
            FILES_ESCAPED="${FILES_ESCAPED//'%'/'%25'}"
            FILES_ESCAPED="${FILES_ESCAPED//$'\n'/'%0A'}"
            FILES_ESCAPED="${FILES_ESCAPED//$'\r'/'%0D'}"
            echo "files=$FILES_ESCAPED" >> $GITHUB_OUTPUT

            # End with an error
            false
          fi

      - name: Add Schema doc diff as PR comment if there are changes
        if: ${{ steps.check_changes.outcome == 'failure' }}
        uses: peter-evans/create-or-update-comment@c6c9a1a66007646a28c153e2a8580a5bad27bcfa
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.number }}
          body: |
            The changes you’ve made modify the documentation, but you haven’t included new generated documentation in your commits!

            Please run `./gradlew generatedocs` to generate updated documentation, then commit the results.

            Expected changes in files:

            ```sh
            ${{ steps.check_changes.outputs.files }}
            ```

      - name: Fail if missing Schema docs are found
        if: ${{ steps.check_changes.outcome == 'failure' }}
        run: |
          false

  docker_build_test:
    name: Docker Build, CodeQl analysis and SonarCloud
    runs-on: ubuntu-latest
    needs: pre_job
    if: ${{ needs.pre_job.outputs.has_router_change == 'true' }}
    defaults:
      run:
        working-directory: prime-router
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]

    steps:
      - name: "Check out changes"
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9

      - name: Initialize CodeQL
        uses: github/codeql-action/init@4fddc51e4f3b5e5e9022f35c3464736cc10e1e98
        with:
          languages: ${{ matrix.language }}

      - name: Set up JDK 11
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'

      - uses: gradle/wrapper-validation-action@8d49e559aae34d3e0eb16cde532684bc9702762b

      - name: Spin up build containers
        run: docker-compose -f docker-compose.postgres.yml up -d

      - name: Build Prime Router Package
        run: ./gradlew package -x fatjar

      - name: Perform Java CodeQL Analysis
        uses: github/codeql-action/analyze@4fddc51e4f3b5e5e9022f35c3464736cc10e1e98
        
      - name: "Run SonarCloud Scan"
        uses: sonarsource/sonarcloud-github-action@db501078e936e4b4c8773d1bb949ba9ddb7b6b6a
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.coverage.exclusions=prime-router/src/test/**,prime-router/src/testIntegration/**,prime-router/src/main/kotlin/cli/tests/**
            -Dsonar.cpd.exclusions=prime-router/src/test/**,prime-router/src/testIntegration/**,prime-router/src/main/kotlin/cli/tests/**
            -Dsonar.sources=prime-router/src,frontend-react/src
            -Dsonar.projectKey=CDCgov_prime-data-hub
            -Dsonar.organization=cdcgov
            -Dsonar.java.libraries=prime-router/build/libs/*.jar,prime-router/build/**/*.jar
            -Dsonar.coverage.jacoco.xmlReportPaths=prime-router/build/reports/jacoco/test/jacocoTestReport.xml

      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag cdcgov/reportstream:latest
