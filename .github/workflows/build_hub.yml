name: Router

on:
  pull_request:
    branches:
      - master
      - production
  push:
    branches:
      - master

env:
  # These are for CI and not credentials of any system
  DB_USER: prime
  DB_PASSWORD: changeIT!

jobs:
  pre_job:
    name: Pre Job
    runs-on: ubuntu-latest
    outputs:
      has_router_change: ${{ steps.skip_check.outputs.router }}
    steps:
      - name: "Check out changes"
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: skip_check
        with:
          list-files: csv
          filters: |
            router:
              - 'prime-router/**'
              - '.github/workflows/build_hub.yml'

  build_router:
    name: Build Router
    needs: pre_job
    if: ${{ needs.pre_job.outputs.has_router_change == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: prime-router

    steps:
      - name: "Check out changes"
        uses: actions/checkout@v2

      # Appears not to be needed on GitHub (but needed when running act [https://github.com/nektos/act] locally)
      # - name: Install docker-compose
      #   run: apt-get update && apt-get --yes install docker-compose

      - name: Build Prime Router Package
        run: bash ./build.sh -- gradle clean package -x fatjar -Pshowtests
        
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        # Per https://github.com/EnricoMi/publish-unit-test-result-action#support-fork-repositories-and-dependabot-branches
        if: >
          always() &&
          github.event.sender.login != 'dependabot[bot]' &&
          ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository )
        with:
          # This path is from the root of the repo as needed by the plugin
          files: prime-router/build/test-results/test/**/*.xml

      - name: Run Integration Tests
        run: bash ./build.sh -- gradle testIntegration -Pshowtests

      - name: Publish Integration Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        # Per https://github.com/EnricoMi/publish-unit-test-result-action#support-fork-repositories-and-dependabot-branches
        if: >
          always() &&
          github.event.sender.login != 'dependabot[bot]' &&
          ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository )
        with:
          # This path is from the root of the repo as needed by the plugin
          files: prime-router/build/test-results/testIntegration/**/*.xml
          check_name: "Integration Test Results"

  smoke_tests:
    name: Smoke Tests
    needs: pre_job
    if: ${{ needs.pre_job.outputs.has_router_change == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: prime-router

    steps:
      - name: "Check out changes"
        uses: actions/checkout@v2

      # Appears not to be needed on GitHub (but needed when running act [https://github.com/nektos/act] locally)
      # - name: Install docker-compose
      #   run: apt-get update && apt-get --yes install docker-compose

      - name: Build Prime Router Package
        run: bash ./cleanslate.sh

      - name: Run Smoke Tests
        run: bash ./build.sh -- gradle testSmoke


  docker_build_test:
    name: Testing Docker Build
    needs: pre_job
    if: ${{ needs.pre_job.outputs.has_router_change == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: prime-router

    steps:
      - name: "Check out changes"
        uses: actions/checkout@v2

      # Appears not to be needed on GitHub (but needed when running act [https://github.com/nektos/act] locally)
      # - name: Install docker-compose
      #   run: apt-get update && apt-get --yes install docker-compose

      - name: Build Prime Router Package
        run: bash ./build.sh -- gradle clean package -x fatjar

      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag cdcgov/reportstream:latest
          
  linting:
    name: Check Linting
    needs: pre_job
    if: ${{ needs.pre_job.outputs.has_router_change == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: prime-router

    steps:
      - name: "Check out changes"
        uses: actions/checkout@v2

      - name: Run Linting Check
        run: bash ./build.sh -- gradle ktlintCheck

  docs:
    name: Check Docs
    needs: pre_job
    if: ${{ needs.pre_job.outputs.has_router_change == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: prime-router

    steps:
      - name: "Check out changes"
        uses: actions/checkout@v2

      - name: Generate New Docs
        run: |
          # Clean the docs before regenerating
          rm -rf docs/schema_documentation/*
          bash ./build.sh -- gradle generatedocs

      - name: Check for Uncommited Docs
        id: check_changes
        continue-on-error: true
        run: |
          CHANGED_FILES=$(git status --short docs)
          if [[ -n "$CHANGED_FILES" ]]; then
            echo "Updated documentation:"
            git diff docs

            # Escape line breaks so they can be used in step output.
            # See: https://github.community/t/set-output-truncates-multiline-strings/16852
            FILES_ESCAPED="$CHANGED_FILES"
            FILES_ESCAPED="${FILES_ESCAPED//'%'/'%25'}"
            FILES_ESCAPED="${FILES_ESCAPED//$'\n'/'%0A'}"
            FILES_ESCAPED="${FILES_ESCAPED//$'\r'/'%0D'}"
            echo "::set-output name=files::$FILES_ESCAPED"

            # End with an error
            false
          fi

      - name: Add diff as PR comment
        if: ${{ steps.check_changes.outcome == 'failure' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.number }}
          body: |
            The changes you’ve made modify the documentation, but you haven’t included new generated documentation in your commits!

            Please run `./gradlew generatedocs` to generate updated documentation, then commit the results.

            Expected changes in files:

            ```sh
            ${{ steps.check_changes.outputs.files }}
            ```

      - name: Fail if there were changes
        if: ${{ steps.check_changes.outcome == 'failure' }}
        run: |
          false