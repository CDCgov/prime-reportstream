name: Azure Function Deployment

on:
  push:
    branches:
      - feature/65-Add-check-fa-for-monitoring-tasktable

jobs:
  deploy:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     FA: [pdhtest-admin-functionapp, pdhstaging-admin-functionapp, pdhprod-admin-functionapp] 
    #     RG: [prime-data-hub-test, prime-data-hub-staging, prime-data-hub-prod]

    steps:
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Get runner ip
        id: runner_ip
        uses: ./.github/actions/runner-ip

      - name: Connect to VPN & Login into Azure 
        uses: ./.github/actions/vpn-azure
        with:
          tls-key: ${{ secrets.TLS_KEY }}
          ca-cert: ${{ secrets.CA_CRT}}
          user-crt: ${{ secrets.USER_CRT }}
          user-key: ${{ secrets.USER_KEY }}
          sp-creds: ${{ secrets.SERVICE_PRINCIPAL_CREDS }}

      - name: Connect to PostgreSQL & Run query
        run: |
          query="SELECT COUNT(*) FROM ABC WHERE timestamp_column < NOW() - INTERVAL '10 minutes'"
          connection_string=$(az postgres server show --resource-group prime-data-hub-staging --name ${{ secrets.POSTGRES_HOST }} --query "fullyQualifiedDomainName" -o tsv)
          connection_string="postgresql://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@$connection_string:5432?sslmode=require"
          query_result=$(psql "$connection_string" -t -c "$query")
          echo "::set-output name=query_result::$query_result"

      - name: Slack Notification    
        if: steps.check_data.outputs.query_result != "0"
        #if: ${{ steps.format_out.outputs.LIST  != '' }}        
        uses: ./.github/actions/notifications
        with:
          method: slack
          title: Found data older than 10 minutes in the public.task table
          message: |
            ${{ steps.format_out.outputs.LIST }}
          icon-emoji: ':bell:'
          channel: pagerduty-alert-dump
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          color: warning


      # - name: Run Python function
      #   run: |
      #     output=$(az functionapp function show --resource-group prime-data-hub-staging --name pdhstaging-admin-functionapp --function-name TaskTableChecks --query "defaultHostName" -o tsv)
      #     output=$(curl "https://$output/api/<python_function>?code=<function_key>&<arguments>")
      #     echo "::set-output name=my_output::$output"

      # - name: Run Query
      #   run: |
      #     az functionapp vnet-integration add -n pdhstaging-admin-functionapp -g prime-data-hub-staging --vnet  pdhstaging-East-vnet --subnet  public
      #     az functionapp identity assign -n pdhstaging-admin-functionapp -g prime-data-hub-staging
      #     az postgres server update --resource-group prime-data-hub-staging --name pdhstaging-pgsql --public-network-access Enabled
      #     psql "postgresql://${{ secrets.POSTGRES_USER }}@${{ secrets.POSTGRES_HOST }}:5432/prime_data_hub"
      #     az functionapp config appsettings set -n pdhstaging-admin-functionapp -g prime-data-hub-staging --settings "QUERY=SELECT * FROM public.task WHERE NOW() - INTERVAL '10 minutes' > ANY (SELECT * FROM public.task); | jq -r ".[0].value" >> results.json
      #     az functionapp identity remove -n pdhstaging-admin-functionapp -g prime-data-hub-staging

      # - name: Format output
      #   id: format_out
      #   run: |
      #     EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
      #     echo "LIST<<$EOF" >> $GITHUB_OUTPUT
      #     cat results.json >> $GITHUB_OUTPUT
      #     echo "$EOF" >> $GITHUB_OUTPUT

      # - name: Slack Notification    
      #   if: steps.check_data.outputs.query_result != "0"
      #   #if: ${{ steps.format_out.outputs.LIST  != '' }}        
      #   uses: ./.github/actions/notifications
      #   with:
      #     method: slack
      #     title: Found data older than 10 minutes in the public.task table
      #     message: |
      #       ${{ steps.format_out.outputs.LIST }}
      #     icon-emoji: ':bell:'
      #     channel: pagerduty-alert-dump
      #     webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
      #     color: warning

      # - name: Remove GHA runnerIP addresses from Function App network
      #   run: |
      #     az functionapp vnet-integration remove -n pdhstaging-admin-functionapp -g prime-data-hub-staging --vnet  pdhstaging-East-vnet --subnet public --ip-addresses ${{ steps.runner_ip.outputs.ip-address }}

        