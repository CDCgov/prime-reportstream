name: Azure Function Deployment

on:
  push:
    branches:
      - feature/65-Add-check-fa-for-monitoring-tasktable

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        FA: [pdhtest-admin-functionapp, pdhstaging-admin-functionapp, pdhprod-admin-functionapp] 
        RG: [prime-data-hub-test, prime-data-hub-staging, prime-data-hub-prod]

    steps:
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Connect to VPN & Login into Azure  
        uses: ./.github/actions/vpn-azure
        with:
          tls-key: ${{ secrets.TLS_KEY }}
          ca-cert: ${{ secrets.CA_CRT}}
          user-crt: ${{ secrets.USER_CRT }}
          user-key: ${{ secrets.USER_KEY }}
          sp-creds: ${{ secrets.SERVICE_PRINCIPAL_CREDS }}

      - name: Query PostgreSQL table
        id: table_data_check
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          python ../../operations/app/functions/admin/TaskTableChecks/task_table_check.py

      
      # - name: Query Azure Cosmos DB table
      #   id: table_data_check
      #   run: |
      #     query_result=$(az cosmosdb table list --account-name your_cosmosdb_account_name --resource-group your_resource_group --database-name your_database_name --name your_table_name --query "[?timestamp < \`$(date -u -d '-10 minutes' +'%Y-%m-%dT%H:%M:%SZ')\`]")
      #     if [ -n "$query_result" ]; then
      #       echo "::set-output name=data_found::true"
      #     else
      #       echo "::set-output name=data_found::false"
      #     fi


      - name: Slack Notification    
        if: steps.table_data_check.outputs.data_found == 'true'         
        uses: ./.github/actions/notifications
        with:
          method: slack
          title: Found data older than 10 minutes in the public.task table
          message: |
            ${{ steps.format_out.outputs.LIST }}
          icon-emoji: ':bell:'
          channel: pagerduty-alert-dump
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          color: warning


        #   
        # run: |
        #   curl -X POST -H 'Content-type: application/json' --data '{"text":"Azure Function deployed successfully! API URL: ${{ env.AZURE_FUNCTION_API_URL }}"}' ${{ secrets.SLACK_WEBHOOK_URL }}
        
        