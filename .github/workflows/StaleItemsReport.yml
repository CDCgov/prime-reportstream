name: Alert Stale Items from GitHub

on:
  workflow_dispatch:
  push: 
    branches:
      - josiahsiegel/update/stale_branch_formatting
  schedule:
    - cron: "13 1 1 * *"

jobs:
  alert_stale_items:
    name: Alert on Stale items in github
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Changes
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b
        with:
          fetch-depth: 0

      - name: Get Stale items
        shell: pwsh
        run: |
          ./.github/scripts/stale_items_report/StaleItems.ps1

      - name: Decode Stale Items Markdown
        shell: pwsh
        run: |
          $pullRequestsMarkdown = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($env:STALE_PULL_REQUEST_LIST))
          $branchesMarkdown = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($env:STALE_BRANCH_LIST))
          $issuesMarkdown = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($env:STALE_ISSUE_LIST))
          echo $pullRequestsMarkdown > stale_pull_requests.md
          echo $branchesMarkdown > stale_branches.md
          echo $issuesMarkdown > stale_issues.md

          echo "## Stale Pull Requests`n$pullRequestsMarkdown`n`n## Stale Branches`n$branchesMarkdown`n`n## Stale Issues`n$issuesMarkdown" >> $env:GITHUB_STEP_SUMMARY

      - name: Get Stale items
        id: stale_out
        shell: bash
        run: |
          message=$(cat stale_pull_requests.md)
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "MULTI_PR_RESPONSE<<$EOF" >> $GITHUB_OUTPUT
          echo -e "$message" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

          message=$(cat stale_branches.md)
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "MULTI_BRANCH_RESPONSE<<$EOF" >> $GITHUB_OUTPUT
          echo -e "$message" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

          message=$(cat stale_issues.md)
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "MULTI_ISSUE_RESPONSE<<$EOF" >> $GITHUB_OUTPUT
          echo -e "$message" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - name: Slack Notification
        if: steps.stale_out.outputs.MULTI_PR_RESPONSE != ''
        uses: ./.github/actions/notifications
        with:
          method: slack
          title: Stale Pull Requests
          message: |
            ${{ steps.stale_out.outputs.MULTI_PR_RESPONSE }}
          icon-emoji: ':bell:'
          channel: temp_branch_dump
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          color: warning

      - name: Slack Notification
        if: steps.stale_out.outputs.MULTI_BRANCH_RESPONSE != ''
        uses: ./.github/actions/notifications
        with:
          method: slack
          title: Stale Branches
          message: |
            [GitHub Link](https://github.com/CDCgov/prime-reportstream/branches/stale)
            ${{ steps.stale_out.outputs.MULTI_BRANCH_RESPONSE }}
          icon-emoji: ':bell:'
          channel: temp_branch_dump
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          color: warning

      - name: Slack Notification
        if: steps.stale_out.outputs.MULTI_ISSUE_RESPONSE != ''
        uses: ./.github/actions/notifications
        with:
          method: slack
          title: Stale Issues
          message: |
            ${{ steps.stale_out.outputs.MULTI_ISSUE_RESPONSE }}
          icon-emoji: ':bell:'
          channel: temp_branch_dump
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          color: warning

      # - name: Get Stale prs
      #   id: PullRequests
      #   shell: pwsh
      #   run: |
      #     ./.github/scripts/stale_items_report/StalePullRequests.ps1

      # - name: Decode Stale Pull Requests Markdown
      #   id: PullRequestsShow
      #   shell: bash
      #   run: |
      #     echo "${{ env.STALE_PULL_REQUESTS_MARKDOWN }}" | base64 --decode > stale_pull_requests.md
      #     cat stale_pull_requests.md >> $GITHUB_STEP_SUMMARY
        
      # - name: Get Stale branches
      #   id: Branches
      #   shell: pwsh
      #   run: |
      #     ./.github/scripts/stale_items_report/Stale_Branches.ps1

      # - name: Decode Stale Branches Markdown
      #   id: BranchesShow
      #   shell: bash
      #   run: |
      #     echo "${{ env.STALE_BRANCHES_MARKDOWN }}" | base64 --decode > stale_branches.md
      #     cat stale_branches.md >> $GITHUB_STEP_SUMMARY

      # - name: Get Stale Issues
      #   id: Issues
      #   shell: pwsh
      #   run: |
      #     ./.github/scripts/stale_items_report/StaleIssues.ps1

      # - name: Decode Stale Issues Markdown
      #   id: IssuesShow
      #   shell: bash
      #   run: |
      #     echo "${{ env.STALE_ISSUES_MARKDOWN }}" | base64 --decode > stale_issues.md
      #     cat stale_issues.md >> $GITHUB_STEP_SUMMARY

      # - uses: MeilCli/slack-upload-file@44b8c5399b7fc13ac6220637a38b8df1634c3560
      #   id: message
      #   continue-on-error: true
      #   with:
      #     slack_token: ${{ secrets.SLACK_TOKEN }}
      #     channel_id: 'C04UBN6R9EF'
      #     file_path: 'PullRequests.txt'
      #     initial_comment: 'Stale pull requests report'

      # - uses: MeilCli/slack-upload-file@44b8c5399b7fc13ac6220637a38b8df1634c3560
      #   id: Branchesmessage
      #   continue-on-error: true
      #   with:
      #     slack_token: ${{ secrets.SLACK_TOKEN }}
      #     channel_id: 'C04UBN6R9EF'
      #     file_path: 'Branches.txt'
      #     initial_comment: 'Stale branches report'

      # - uses: MeilCli/slack-upload-file@44b8c5399b7fc13ac6220637a38b8df1634c3560
      #   id: Issuesmessage
      #   continue-on-error: true
      #   with:
      #     slack_token: ${{ secrets.SLACK_TOKEN }}
      #     channel_id: 'C04UBN6R9EF'
      #     file_path: 'StaleIssues.txt'
      #     initial_comment: 'Stale Issues report'

     
