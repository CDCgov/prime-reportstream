name: Scan Public Logs

on: 
  workflow_dispatch:
    inputs:
      repos:
        description: 'Repos to scan:'
        required: true
        default: '[\"josiahsiegel\/runleaks\",\"josiahsiegel\/AzViz-action\"]'
        type: string
  schedule:
    - cron: "0 3 * * *"
  push:

jobs:
  pre_job:
    name: "Set Build Environment"
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ env.REPOS }}
    steps:
      - name: Set workflow_dispatch matrix
        if: github.event_name == 'workflow_dispatch'
        run: echo "REPOS=${{ github.event.inputs.repos }}" >> $GITHUB_ENV

      - name: Fetch random repo name
        if: github.event_name == 'schedule' || github.event_name == 'push'
        uses: JosiahSiegel/randomrepo@v1.1
        id: random
        with:
          github-token: ${{ secrets.MY_TOKEN }}

      - name: Set schedule matrix
        if: github.event_name == 'schedule' || github.event_name == 'push'
        run: |
          format_string=$(echo "[\"${{ steps.random.outputs.repo }}\"]" | sed 's/\//\\\//g')
          echo "REPOS='$format_string'"
          echo "REPOS=$format_string" >> $GITHUB_ENV

  scan_public_logs:
    runs-on: ubuntu-latest
    name: Scan public logs
    needs:
       - pre_job
    strategy:
      matrix:
        repo: ${{ fromJson(needs.pre_job.outputs.repos) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Scan run logs - ${{ matrix.repo }}
        uses: ./
        id: scan
        with:
          github-token: ${{ secrets.MY_TOKEN }}
          repo:  ${{ matrix.repo }}
          run-limit: 100
          min-days-old: 1
          max-days-old: 3
          exclusions-path: ".github/runleaks/exclusions.txt"
          fail-on-leak: true
