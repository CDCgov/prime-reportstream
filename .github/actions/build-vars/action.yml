# action.yml
name: 'Build Variables'
description: 'Variables shared by build workflows'
outputs:
  env_name:
    value: ${{ steps.build_result.outputs.env_name }}
    description: 'Test, staging, or prod'
  version:
    value: ${{ steps.version_result.outputs.version }}
    description: 'Tag name'
  has_router_change:
    value: ${{ steps.backend_change_result.outputs.has_router_change }}
    description: 'For non-prod, do not build if no changes'
  has_react_change:
    value: ${{ steps.frontend_change_result.outputs.has_react_change }}
    description: 'For non-prod, do not build if no changes'
  has_terraform_change:
    value: ${{ steps.filter.outputs.terraform }}
    description: 'Check if terraform changes. true or false'
  prerelease:
    value: ${{ steps.prerelease_result.outputs.prerelease }}
    description: 'GitHub release or pre-release'

runs:
  using: "composite"
  steps:

    - name: Set Build Environment - DEMO1
      id: build_demo1
      if: |
        (github.event_name != 'pull_request' && github.ref_name == 'demo1') ||
        (github.event_name == 'pull_request' && github.base_ref == 'demo1')
      shell: bash
      run: echo "::set-output name=env_name::demo1"

    - name: Set Build Environment - DEMO2
      id: build_demo2
      if: |
        (github.event_name != 'pull_request' && github.ref_name == 'demo2') ||
        (github.event_name == 'pull_request' && github.base_ref == 'demo2')
      shell: bash
      run: echo "::set-output name=env_name::demo2"

    - name: Set Build Environment - DEMO3
      id: build_demo3
      if: |
        (github.event_name != 'pull_request' && github.ref_name == 'demo3') ||
        (github.event_name == 'pull_request' && github.base_ref == 'demo3')
      shell: bash
      run: echo "::set-output name=env_name::demo3"

    - name: Set Build Environment - TEST
      id: build_test
      if: |
        (github.event_name != 'pull_request' && github.ref_name == 'test') ||
        (github.event_name == 'pull_request' && github.base_ref == 'test')
      shell: bash
      run: echo "::set-output name=env_name::test"

    - name: Set Build Environment - STAGING
      id: build_staging
      if: |
        (github.event_name != 'pull_request' && github.ref_name == 'master') ||
        (github.event_name == 'pull_request' && github.base_ref == 'master')
      shell: bash
      run: |
        echo "::set-output name=env_name::staging"
        echo "::set-output name=prerelease::true"
        echo "::set-output name=version::v-pre-release"

    - name: Set Build Environment - PROD
      id: build_prod
      if: |
        (github.event_name != 'pull_request' && github.ref_name == 'production') ||
        (github.event_name == 'pull_request' && github.base_ref == 'production')
      shell: bash
      run: |
        echo "::set-output name=env_name::prod"
        echo "::set-output name=prerelease::false"
        echo "::set-output name=version::v-$(date +%Y.%m.%d-%H%M%S)"

    - name: Set Build Environment - RESULT
      id: build_result
      shell: bash
      run: |
        echo "::set-output name=env_name::\
        ${{ steps.build_demo1.outputs.env_name }}\
        ${{ steps.build_demo2.outputs.env_name }}\
        ${{ steps.build_demo3.outputs.env_name }}\
        ${{ steps.build_test.outputs.env_name }}\
        ${{ steps.build_staging.outputs.env_name }}\
        ${{ steps.build_prod.outputs.env_name }}"

    - name: Set if prerelease - RESULT
      id: prerelease_result
      shell: bash
      run: |
        echo "::set-output name=prerelease::\
        ${{ steps.build_staging.outputs.prerelease }}\
        ${{ steps.build_prod.outputs.prerelease }}"

    - name: Set tag version - RESULT
      id: version_result
      shell: bash
      run: |
        echo "::set-output name=version::\
        ${{ steps.build_staging.outputs.version }}\
        ${{ steps.build_prod.outputs.version }}"

    - uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50
      if: github.event_name != 'schedule'
      id: filter
      with:
        list-files: csv
        filters: |
          router:
            - 'prime-router/**'
            - 'operations/**'
            - '.github/actions/build-backend/action.yml'
            - '.github/actions/deploy-backend/action.yml'
            - '.github/workflows/build_hub.yml'
          frontend_react:
            - 'frontend-react/**'
            - 'operations/**'
            - '.github/actions/build-frontend/action.yml'
            - '.github/actions/deploy-frontend/action.yml'
          terraform:
            - 'operations/app/terraform/**'
            - '.github/workflows/validate_terraform.yml'
            - '.github/workflows/deploy_terraform.yml'

    - name: Force backend change if prod
      if: github.event_name != 'schedule'
      id: backend_change_result
      shell: bash
      run: |
        if [[ \
        '${{ steps.build_result.outputs.env_name }}' == 'prod' || \
        '${{ steps.build_result.outputs.env_name }}' == 'test' || \
        '${{ steps.build_result.outputs.env_name }}' == 'demo1' || \
        '${{ steps.build_result.outputs.env_name }}' == 'demo2' || \
        '${{ steps.build_result.outputs.env_name }}' == 'demo3' \
        ]]; then
          echo "::set-output name=has_router_change::true"
        else
          echo "::set-output name=has_router_change::${{ steps.filter.outputs.router }}"
        fi

    - name: Front frontend change if prod
      if: github.event_name != 'schedule'
      id: frontend_change_result
      shell: bash
      run: |
        if [[ \
        '${{ steps.build_result.outputs.env_name }}' == 'prod' || \
        '${{ steps.build_result.outputs.env_name }}' == 'test' || \
        '${{ steps.build_result.outputs.env_name }}' == 'demo1' || \
        '${{ steps.build_result.outputs.env_name }}' == 'demo2' || \
        '${{ steps.build_result.outputs.env_name }}' == 'demo3' \
        ]]; then
          echo "::set-output name=has_react_change::true"
        else
          echo "::set-output name=has_react_change::${{ steps.filter.outputs.frontend_react }}"
        fi
