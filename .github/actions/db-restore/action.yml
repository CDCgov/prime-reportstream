name: db-restore
description: Restore postgres database from file after Azure recreation
inputs:
  pass:
    required: true
  host:
    required: true
  port:
    required: true
  user:
    required: true
  database:
    required: true
  file-path:
    required: true
  resource-group:
    required: true
  options:
    description: 'Additional pg_restore options'
    required: false

runs:
  using: 'composite'
  steps:
    # Drop existing connections, drop/create db, and restore from backup file
    - uses: nick-fields/retry@943e742917ac94714d2f408a0e8320f2d1fcafcd
      with:
        timeout_minutes: 500
        max_attempts: 3
        retry_wait_seconds: 10
        command: |
          sudo PGPASSWORD=${{ inputs.pass }} \
          PGSSLMODE=require \
          psql -h ${{ inputs.host }}.postgres.database.azure.com -U ${{ inputs.user }}@${{ inputs.host }} -d postgres \
            -c "SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = '${{ inputs.database }}' AND pid <> pg_backend_pid()"
          az postgres db delete -g ${{ inputs.resource-group }} -s ${{ inputs.host }} -n ${{ inputs.database }} --yes
          az postgres db create -g ${{ inputs.resource-group }} -s ${{ inputs.host }} -n ${{ inputs.database }} \
            --charset "UTF8" --collation "English_United States.1252"
          sleep 15;
          sudo PGPASSWORD=${{ inputs.pass }} \
          PGSSLMODE=require \
          pg_restore ${{ inputs.options }} -h ${{ inputs.host }}.postgres.database.azure.com -U ${{ inputs.user }}@${{ inputs.host }} \
            -d ${{ inputs.database }} ${{ inputs.file-path }}
        shell: bash
