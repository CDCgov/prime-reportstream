# action.yml
name: "Build Backend"
description: "Build backend router"
inputs:
  version:
    description: "Version tag"
    required: true
  upload-build:
    default: true
  run-integration-tests:
    default: false
  run-qc:
    default: false
  github-token:
    default: false
  sp-creds:
    description: "Azure Service Principal creds"

runs:
  using: "composite"
  steps:
    # These are for CI and not credentials of any system
    - name: Set Environment Variables
      working-directory: prime-router
      shell: bash
      run: |
        echo >> $GITHUB_ENV DB_USER='prime'
        echo >> $GITHUB_ENV DB_PASSWORD='changeIT!'

    - name: Remove unnecessary software
      shell: bash
      run: |
        sudo rm -rf /usr/local/lib/android

    - name: Set up JDK 17
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        java-version: "17"
        distribution: "temurin"
        cache: "gradle"

    - uses: gradle/actions/wrapper-validation@d9c87d481d55275bb5441eef3fe0e46805f9ef70

    - name: Lint
      if: inputs.run-integration-tests == 'true'
      run: ./gradlew :prime-router:ktlintCheck
      shell: bash

    - name: Spin up build containers
      working-directory: prime-router
      shell: bash
      run: docker compose -f docker-compose.postgres.yml up -d

    - name: Build Prime Router Package
      uses: ./.github/actions/retry
      with:
        timeout_minutes: 30
        max_attempts: 2
        retry_wait_seconds: 30
        command: |
          ./gradlew :prime-router:package -x fatjar -Pshowtests
        shell: bash

    - name: Tar router files
      if: inputs.upload-build == 'true'
      working-directory: prime-router
      shell: bash
      run: tar -czvf prime-router-build.tar.gz build

    - name: Login into Azure
      if: inputs.run-integration-tests == 'true' && inputs.sp-creds
      uses: ./.github/actions/vpn-azure
      with:
        sp-creds: ${{ inputs.sp-creds }}

    # Allow runner IP for storage testing
    - name: Get runner ip
      if: inputs.run-integration-tests == 'true' && inputs.sp-creds
      id: runner_ip
      uses: ./.github/actions/runner-ip

    - name: Validate translation schemas
      if: inputs.run-integration-tests == 'true' && inputs.sp-creds
      uses: ./.github/actions/retry
      with:
        timeout_minutes: 5
        max_attempts: 2
        retry_wait_seconds: 30
        command: |
          az storage account network-rule add -g prime-data-hub-staging --account-name pdhstagingstorageaccount \
          --ip-address ${{ steps.runner_ip.outputs.ip-address }} --output none;
          sleep 10;
          cd prime-router
          bsc=$(az storage account show-connection-string --name pdhstagingstorageaccount --resource-group prime-data-hub-staging \
          --subscription 7d1e3999-6577-4cd5-b296-f518e5c8e677 -o tsv)
          ./prime validateSchemas --schema-type="HL7" --blob-store-connect="$bsc" --blob-store-container="metadata"
          ./prime validateSchemas --schema-type="FHIR" --blob-store-connect="$bsc" --blob-store-container="metadata"
          az storage account network-rule remove -g prime-data-hub-staging --account-name pdhstagingstorageaccount \
          --ip-address ${{ steps.runner_ip.outputs.ip-address }} --output none;
        shell: bash

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action/linux@567cc7f8dcea3eba5da355f6ebc95663310d8a07
      if: >
        always() &&
        github.event.sender.login != 'dependabot[bot]' &&
        ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository )
      with:
        # This path is from the root of the repo as needed by the plugin
        files: prime-router/build/test-results/test/**/*.xml

    - name: Spin up vault
      if: inputs.run-integration-tests == 'true'
      working-directory: prime-router
      run: |
        mkdir .vault/env
        touch .vault/env/.env.local
        docker compose -f docker-compose.yml up -d vault
        while [ ! -s .vault/env/.env.local ]; do sleep 1; done
        echo "loaded env vars"
      shell: bash

    - name: Spin up containers
      if: inputs.run-integration-tests == 'true'
      working-directory: prime-router
      id: spin_containers
      run: docker compose -f docker-compose.yml up -d prime_dev sftp azurite azurite-stage
      shell: bash

      # Important to give enough time here in order to avoid a race described in https://github.com/CDCgov/prime-reportstream/issues/13961#issuecomment-2065217386
    - name: Give some time for the container to start
      if: inputs.run-integration-tests == 'true'
      working-directory: prime-router
      run: |
        echo "sleeping 90"
        sleep 90
        echo "wake up"
      shell: bash

    - name: Load the configuration
      if: inputs.run-integration-tests == 'true'
      run: |
        ./gradlew :prime-router:reloadTables
        ./gradlew :prime-router:reloadSettings
      shell: bash

    # Integrations tests require the metadata catalog
    - name: Run Integration Tests
      if: inputs.run-integration-tests == 'true'
      run: ./gradlew :prime-router:testIntegration -Pshowtests
      shell: bash

    - name: Publish Integration Test Results
      uses: EnricoMi/publish-unit-test-result-action/linux@567cc7f8dcea3eba5da355f6ebc95663310d8a07
      if: >
        always() &&
        github.event.sender.login != 'dependabot[bot]' &&
        ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository ) &&
        inputs.run-integration-tests == 'true'
      with:
        # This path is from the root of the repo as needed by the plugin
        files: prime-router/build/test-results/testIntegration/**/*.xml
        check_name: "Integration Test Results"

    - name: Correct sftp perms
      if: inputs.run-integration-tests == 'true'
      working-directory: prime-router
      run: docker compose exec -T sftp chmod 777 /home/foo/upload
      shell: bash

    - name: Smoke tests
      if: inputs.run-integration-tests == 'true'
      uses: ./.github/actions/retry
      with:
        timeout_minutes: 30
        max_attempts: 2
        retry_wait_seconds: 30
        command: |
          ./gradlew :prime-router:reloadCredentials
          ./gradlew :prime-router:testSmoke
        shell: bash

    - name: Dump docker logs
      if: always() && inputs.run-integration-tests == 'true'
      uses: jwalton/gh-docker-logs@2741064ab9d7af54b0b1ffb6076cf64c16f0220e

    - name: Cleanup Gradle Cache
      if: inputs.run-integration-tests == 'true'
      working-directory: prime-router
      run: |
        rm -f .gradle/caches/modules-2/modules-2.lock
        rm -f .gradle/caches/modules-2/gc.properties
      shell: bash

    - name: Upload Artifact
      if: inputs.upload-build == 'true'
      uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029
      with:
        name: prime-router-build-${{ inputs.version }}
        path: prime-router/prime-router-build.tar.gz
        retention-days: 3

    - name: Build Docker Image
      if: inputs.run-qc == 'true'
      working-directory: prime-router
      run: docker build . --file Dockerfile --tag cdcgov/reportstream:latest
      shell: bash
