# action.yml
name: Az Cost
description: Run Azure Cost CLI
inputs:
  rg:
    description: Specify resource group name
  days_ago:
    description: How many days to fetch data for
    default: 5
  total_format:
    description: Choose total aggregation level (daily or summary)
outputs:
  result:
    value: ${{ steps.run_azure_cost.outputs.RESULT }}

runs:
  using: composite
  steps:
    - name: Install .NET
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y dotnet-sdk-8.0 dotnet-runtime-8.0

    - name: Install azure-cost-cli
      shell: bash
      run: |
        dotnet new tool-manifest
        dotnet tool install azure-cost-cli

    - name: Run azure-cost-cli for daily totals
      if: inputs.total_format == 'daily'
      id: run_azure_cost_daily
      shell: bash
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "RESULT<<$EOF" >> $GITHUB_OUTPUT
        dotnet azure-cost accumulatedCost -g ${{ inputs.rg }} -t custom --from $(date --date='${{ inputs.days_ago }} days ago' '+%m/%d/%Y') --to $(date --date='1 days ago' '+%m/%d/%Y') -o csv >> $GITHUB_OUTPUT
        echo "$EOF" >> $GITHUB_OUTPUT

    - name: Run azure-cost-cli for total
      if: inputs.total_format == 'summary'
      id: run_azure_cost_summary
      shell: bash
      run: |
        cost_json=$(dotnet azure-cost accumulatedCost -g ${{ inputs.rg }} -t custom --from $(date --date='${{ inputs.days_ago }} days ago' '+%m/%d/%Y') --to $(date --date='1 days ago' '+%m/%d/%Y') -o json | jq '.ByResourceGroup[0].Cost*100 | round/100')
        echo "RESULT=$cost_json" >> $GITHUB_OUTPUT

    - name: Run azure-cost-cli
      id: run_azure_cost
      shell: bash
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "RESULT<<$EOF" >> $GITHUB_OUTPUT
        echo -e "${{ steps.run_azure_cost_daily.outputs.RESULT }}${{ steps.run_azure_cost_summary.outputs.RESULT }}" >> $GITHUB_OUTPUT
        echo "$EOF" >> $GITHUB_OUTPUT