trigger:
  - main # Collaboration branch
  #- develop # Development branch
  #- feature/* # Feature branches

pool:
  name: 'Default'

variables:
  #- group: azure-service-connections # Use variable groups for sensitive values
  - name: ServiceConnection
    value: 'demo-rg'
  - name: keyVaultName
    value: 'kv-42e-demo-primary'
  - name: sourceDataFactoryName
    value: 'df-42e-demo-primary'
  - name: deployDataFactoryName
    value: 'df-42e-demo-secondary'
  - name: deploymentResourceGroupName
    value: 'demo'

stages:
- stage: Build
  displayName: Build stage
  jobs:
    - job: Build
      displayName: Build job
      pool:
        name: 'Default'
      steps:
        - task: UseNode@1
          inputs:
            version: '18.x'
          displayName: 'Install Node.js'

        - task: Npm@1
          inputs:
            command: 'install'
            workingDir: '$(Build.Repository.LocalPath)/.devops'
            verbose: true
          displayName: 'Install npm package'

        - task: Npm@1
          inputs:
            command: 'custom'
            workingDir: '$(Build.Repository.LocalPath)/.devops'
            customCommand: 'run build export $(Build.Repository.LocalPath)/adf/$(SourceDataFactoryName) /subscriptions/ff5f335c-3727-493e-9dc0-0aad424b456d/resourceGroups/demo/providers/Microsoft.DataFactory/factories/$(SourceDataFactoryName) "ArmTemplate"'
          displayName: 'Validate and Generate ARM template'

        - publish: '$(Build.Repository.LocalPath)/.devops/ArmTemplate/'
          displayName: 'Publish ARM templates'
          artifact: drop

- stage: Deploy
  displayName: Deploy to Environment
  jobs:
    - deployment: DeployDev
      displayName: Deploy to Development
      condition: succeeded()
      #and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop')) # Conditional execution for development branch
      environment: Development
      pool:
        name: 'Default'
      strategy:
        runOnce:
          deploy:
            steps:
            - template: adf-release-tasks.yml
              parameters:
                environment: 'Development'
                azureSubscription: '$(ServiceConnection)'
                keyVaultName: $(KeyVaultName)
                sourceDataFactoryName: $(sourceDataFactoryName)
                deployDataFactoryName: $(deployDataFactoryName)
                deploymentResourceGroupName: $(deploymentResourceGroupName)
                
#    - deployment: DeployProd
#      displayName: Deploy to Production
#      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main')) # Conditional execution for main branch
#      environment: Production
#      pool:
#        name: 'Default'

