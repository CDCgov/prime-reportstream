# action.yml
name: 'Demo Environment'
description: 'Provision and deploy a demo environment'
inputs:
  env-name:
    required: true
    description: "Environment name"
  destroy:
    description: "Destroy demo env. true or false"
    default: false

runs:
  using: "composite"
  steps:

    - name: Get runner ip
      id: runner_ip
      uses: ./.github/actions/runner-ip

    - name: Terraform - init
      working-directory: operations/app/terraform/vars/demo
      run: |
        terraform init \
        -reconfigure \
        -var-file=${{ inputs.env-name }}/env.tfvars.json \
        -var='terraform_caller_ip_address=["162.224.209.174", "24.163.118.70", "75.191.122.59", "108.48.23.191", "${{ steps.runner_ip.outputs.ip-address }}"]' \
        -backend-config=${{ inputs.env-name }}/env.tfbackend
      shell: bash

    - name: Terraform - destroy
      if: inputs.destroy == 'true'
      uses: nick-fields/retry@b4fa57557dda8c2f30bcb2d19372cc3237190f7f
      with:
        timeout_seconds: 600
        max_attempts: 3
        retry_wait_seconds: 180
        command: |
          for i in {1..3}; do \
          terraform -chdir=operations/app/terraform/vars/demo destroy \
          -var-file=${{ inputs.env-name }}/env.tfvars.json \
          -target=module.app_service_plan \
          -target=module.application_insights \
          -target=module.container_registry \
          -target=module.database \
          -target=module.function_app \
          -target=module.log_analytics_workspace \
          -target=module.sftp_container \
          -target=module.storage \
          -refresh=false \
          -auto-approve; 2>&1; \
          sleep 60; \
          done
        shell: bash

    - name: Terraform - validate
      if: inputs.destroy == 'false'
      working-directory: operations/app/terraform/vars/demo
      run: terraform validate
      shell: bash

    - name: Terraform - apply
      if: inputs.destroy == 'false'
      uses: nick-fields/retry@b4fa57557dda8c2f30bcb2d19372cc3237190f7f
      with:
        timeout_seconds: 600
        max_attempts: 3
        retry_wait_seconds: 180
        command: |
          for i in {1..3}; do \
          terraform -chdir=operations/app/terraform/vars/demo apply \
          -target=module.init \
          -var-file=${{ inputs.env-name }}/env.tfvars.json \
          -var='terraform_caller_ip_address=["162.224.209.174", "24.163.118.70", "75.191.122.59", "108.48.23.191", "${{ steps.runner_ip.outputs.ip-address }}"]' \
          -auto-approve; \
          sleep 60; \
          done

          for i in {1..3}; do \
          terraform -chdir=operations/app/terraform/vars/demo apply \
          -var-file=${{ inputs.env-name }}/env.tfvars.json \
          -var='terraform_caller_ip_address=["162.224.209.174", "24.163.118.70", "75.191.122.59", "108.48.23.191", "${{ steps.runner_ip.outputs.ip-address }}"]' \
          -auto-approve; \
          sleep 120; \
          done
        shell: bash
