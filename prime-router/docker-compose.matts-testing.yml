---
# Multi-Architecture Secure Environment for Prime Router
# Uses hardened Wolfi-based images with security improvements
# Supports both Apple Silicon (ARM64) and AMD64 architectures
services:
  # Custom PostgreSQL 16.6 - Wolfi-based
  rs-postgresql:
    container_name: rs-postgresql
    image: rs-postgresql:latest
    pull_policy: never
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - rs-network
    command: ["-D", "/var/lib/postgresql/data", "-c", "listen_addresses=*", "-c", "port=5432"]
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=changeIT!
      - POSTGRES_DB=prime_data_hub
      - POSTGRES_HOST_AUTH_METHOD=md5
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    volumes:
      - rs-postgresql-data:/var/lib/postgresql/data
      - ./operations/postgres-init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /run
      - /run/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prime -d prime_data_hub || pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # HashiCorp Vault - Latest
  rs-vault:
    container_name: rs-vault
    image: hashicorp/vault:latest
    platform: linux/amd64
    ports:
      - "8200:8200"
    networks:
      - rs-network
    cap_add:
      - IPC_LOCK
    volumes:
      - .vault/config:/vault/config
      - .vault/env:/vault/env
      - rs-vault-data:/vault/file
    entrypoint: [ "/bin/sh", "-c" ]
    command: "/vault/config/vault-init.sh"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    # A simpler and more robust healthcheck:
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:8200/v1/sys/health"]
      interval: 15s
      timeout: 5s
      retries: 5

  # Azure Storage Azurite - Latest
  rs-azurite:
    container_name: rs-azurite
    image: mcr.microsoft.com/azure-storage/azurite:3.35.0
    platform: linux/amd64
    ports:
      - "127.0.0.1:10000:10000"
      - "127.0.0.1:10001:10001"
      - "127.0.0.1:10002:10002"
    networks:
      - rs-network
    command: azurite --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost 0.0.0.0 --loose --skipApiVersionCheck
    volumes:
      - rs-azurite-data:/data
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:10000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SFTP Server - Custom Wolfi-based (security-hardened, CI-identical configuration)
  rs-sftp:
    build:
      context: ../operations/utils/sftp
      dockerfile: Dockerfile
    container_name: rs-sftp
    platform: linux/amd64
    ports:
      - "127.0.0.1:2222:22"
    volumes:
      - rs-sftp-data:/home/foo/upload
      # CI-identical SFTP configuration files
      - ../.environment/sftp-conf/users.conf:/etc/sftp/users.conf:ro
      - ../.environment/sftp-conf/ssh_host_ed25519_key:/etc/ssh/ssh_host_ed25519_key
      - ../.environment/sftp-conf/ssh_host_rsa_key:/etc/ssh/ssh_host_rsa_key
      # SSH keys for additional users (bar, fizz)
      - ../.environment/sftp-conf/ssh_dev_rsa_key.pem.pub:/home/bar/.ssh/keys/ssh_dev_rsa_key.pem.pub:ro
      - ../.environment/sftp-conf/ignore-putty-file-old-openssh.pub:/home/fizz/.ssh/keys/ignore-putty-file-old-openssh.pub:ro
      # Initialization script
      - ../.environment/sftp-conf/init.sh:/etc/sftp.d/init.sh:ro
    networks:
      - rs-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp
      - /run
      - /var/log
    healthcheck:
      test: ["CMD-SHELL", "ss -tuln | grep :22 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prime Router API - Hardened Container
  rs-prime-router-api:
    container_name: rs-prime-router-api
    image: rs-prime-router-api:latest
    platform: linux/amd64
    ports:
      - "127.0.0.1:7071:80"
    environment:
      - POSTGRES_URL=jdbc:postgresql://rs-postgresql:5432/prime_data_hub
      - POSTGRES_USER=prime
      - POSTGRES_PASSWORD=changeIT!
      - VAULT_API_ADDR=http://rs-vault:8200
      - AzureWebJobsStorage=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://rs-azurite:10000/devstoreaccount1;QueueEndpoint=http://rs-azurite:10001/devstoreaccount1;TableEndpoint=http://rs-azurite:10002/devstoreaccount1
      - PartnerStorage=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://rs-azurite:10000/devstoreaccount1;QueueEndpoint=http://rs-azurite:10001/devstoreaccount1
      - AzureWebJobsScriptRoot=/home/site/wwwroot
      - AzureFunctionsJobHost__Logging__Console__IsEnabled=true
      # CI-matching authentication environment variables
      - PRIME_ENVIRONMENT=local
      - RS_OKTA_baseUrl=reportstream.oktapreview.com
      - RS_OKTA_clientId=0oa8uvan2i07YXJLk1d7
      - RS_OKTA_redirect=http://localhost:7071/api/download
      - FHIR_ENGINE_TEST_PIPELINE=enabled
      # Azure Functions local development authentication bypass
      - AzureWebJobsDisableHomepage=true
      - AZURE_FUNCTIONS_ENVIRONMENT=Development
      - AzureFunctionsJobHost__host__authLevel=anonymous
      # Set default function key for local development
      - AzureWebJobsStorage__functionKeys__default=local-dev-key-12345
    depends_on:
      - rs-postgresql
      - rs-vault
      - rs-azurite
    networks:
      - rs-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    # Health check handled by validation script from host perspective

  # SOAP Webservice - Testing endpoint for SOAP integration
  rs-soap-webservice:
    container_name: rs-soap-webservice
    image: castlemock/castlemock
    ports:
      - "127.0.0.1:8087:8080"
    networks:
      - rs-network
    volumes:
      - ../.environment/soap_service:/root/.castlemock
      - ../.environment/soap_service:/castlemock/castlemock
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # REST Webservice - Testing endpoint for OAuth and report posting
  rs-rest-webservice:
    container_name: rs-rest-webservice
    image: mockoon/cli
    command:
      - --data=/root/data.json
    ports:
      - "127.0.0.1:3001:3001"
    networks:
      - rs-network
    volumes:
      - ../.environment/rest_service:/root
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

# Isolated network for secure communication
networks:
  rs-network:
    driver: bridge
    name: rs-prime-router-network
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/16

# Persistent volumes for data retention
volumes:
  rs-postgresql-data:
    driver: local
    name: rs-postgresql-data
  rs-vault-data:
    driver: local
    name: rs-vault-data
  rs-azurite-data:
    driver: local  
    name: rs-azurite-data
  rs-sftp-data:
    driver: local
    name: rs-sftp-data