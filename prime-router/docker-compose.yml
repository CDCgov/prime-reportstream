# This docker compose is intended to setup a developer
version: "3.3"
services:
  # This container runs our Azure function code.
  prime_dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        INSECURE_SSL: "${PRIME_DATA_HUB_INSECURE_SSL}"
    volumes: # Attach the PWD into the image
      - type: bind
        source: ./build
        target: /prime-data-hub-router
    entrypoint: [/prime-data-hub-router/start_func.sh]
    env_file:
      # On first run of docker-compose, create this file, it will get populated, but docker-compose doesn't allow optional env_file
      # Example: touch .vault/env/.env.local
      # https://github.com/docker/compose/pull/3955
      - ./.vault/env/.env.local
    environment:
      # this storage account key is not a secret. It just looks like one.
      - AzureWebJobsStorage=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;
      - PartnerStorage=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;
      - POSTGRES_USER=prime
      - POSTGRES_PASSWORD=changeIT!
      # postgresql comes from the build environment; it is accessible because we are connected to the build network (see "networks")
      - POSTGRES_URL=jdbc:postgresql://postgresql:5432/prime_data_hub
      - PRIME_ENVIRONMENT=local
      - REDOX_SECRET=some_secret
      # - SENDGRID_API_KEY=
      - OKTA_baseUrl=hhs-prime.okta.com
      - OKTA_clientId=0oa6fm8j4G1xfrthd4h6
      - OKTA_redirect=http://localhost:7071/api/download
      - VAULT_API_ADDR=http://vault:8200
    depends_on:
      - azurite
      - vault
    ports:
      - 7071:7071 # default function port
      - 5005:5005 # Java debug port
    networks:
      - prime-router_build

  # Azurite is the Azure storage emulator for local development
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:3.12.0
    # uncomment the line below to skip x-ms-version checks
    # command: azurite --skipApiVersionCheck --blobHost 0.0.0.0 --queueHost 0.0.0.0
    volumes:
      # map to Azurite data objects to the build directory
      - ./build/azurite:/data
    ports:
      - 10000:10000
      - 10001:10001
    networks:
      - prime-router_build

  #local SFTP server as a receive point
  sftp:
    image: atmoz/sftp
    ports:
        - "2222:22"
    volumes:
      - ./build/sftp:/home/foo/upload
    command: foo:pass:1001::upload
    networks:
      - prime-router_build

  redox:
    image: mockserver/mockserver:mockserver-5.11.1
    ports:
      - 1080:1080
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json
    volumes:
      - type: bind
        source: ./src/test/redox
        target: /config
    networks:
      - prime-router_build

  settings:
    build: settings/.
    command: "--wait=20 --check-last-modified prime_dev /settings/organizations.yml"
    depends_on:
      - prime_dev
    volumes:
      - type: bind
        source: ./settings
        target: /settings
    networks:
      - prime-router_build

  # Secrets management
  vault:
    image: vault
    cap_add:
      # Allows protected memory
      - IPC_LOCK
    volumes:
      # Contains script for bootstrapping the Docker container
      - .vault/config:/vault/config
      # Location to store the vault keys
      - .vault/env:/vault/env
      # Vault database persisted as a Docker volume
      - vault:/vault/file
    ports:
      # Vault API
      - 8200:8200
    # Override the command with our custom init script
    command: "/vault/config/init.sh"
    networks:
      - prime-router_build

  web_receiver:
    image: nginx:latest
    ports:
      - "8090:80"
    volumes:
      - "../frontend/dist:/usr/share/nginx/html"
    depends_on:
      - prime_dev
    command: "'nginx' '-g' 'daemon off;'"
    entrypoint: "/docker-entrypoint.sh"
    networks:
      - prime-router_build

volumes:
  # For storing a local encrypted secrets database
  vault:

networks:
  prime-router_build:
