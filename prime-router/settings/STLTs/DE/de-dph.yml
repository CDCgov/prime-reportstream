---
- name: "de-dph"
  description: "Delaware Division of Public Health"
  jurisdiction: "STATE"
  stateCode: "DE"
  countyName: null
  filters:
    - topic: "covid-19"
      jurisdictionalFilter:
        - "orEquals(ordering_facility_state, DE, patient_state, DE)"
      qualityFilter:
        - "doesNotMatch(processing_mode_code,T,D)"
        - "hasAtLeastOneOf(order_test_date,specimen_collection_date_time,test_result_date)"
        - "hasAtLeastOneOf(patient_street,patient_zip_code,patient_phone_number,patient_email)"
        - "hasValidDataFor(message_id,equipment_model_name,specimen_type,test_result,patient_last_name,patient_first_name,patient_dob,ordering_provider_id)"
        - "isValidCLIA(testing_lab_clia)"
      routingFilter: null
      processingModeFilter: null
      conditionFilter: null
      mappedConditionFilter: null
  featureFlags: null
  keys: null
  senders: []
  receivers:
    - name: "full-elr"
      organizationName: "de-dph"
      topic: "full-elr"
      customerStatus: "testing"
      translation:
        schemaName: "classpath:/metadata/hl7_mapping/receivers/STLTs/DE/DE-receiver-transform.yml"
        useTestProcessingMode: false
        useBatchHeaders: true
        receivingApplicationName: null
        receivingApplicationOID: null
        receivingFacilityName: null
        receivingFacilityOID: null
        messageProfileId: null
        replaceValue: {}
        replaceValueAwithB: {}
        reportingFacilityName: null
        reportingFacilityId: null
        reportingFacilityIdType: null
        suppressQstForAoe: false
        suppressHl7Fields: null
        suppressAoe: false
        defaultAoeToUnknown: false
        replaceUnicodeWithAscii: false
        useBlankInsteadOfUnknown: null
        truncateHDNamespaceIds: true
        truncateHl7Fields: null
        usePid14ForPatientEmail: false
        convertTimestampToDateTime: null
        cliaForOutOfStateTesting: null
        cliaForSender: {}
        phoneNumberFormatting: "STANDARD"
        suppressNonNPI: false
        processingModeCode: null
        replaceDiiWithOid: null
        applyOTCDefault: false
        useOrderingFacilityName: "STANDARD"
        valueSetOverrides: {}
        nameFormat: "STANDARD"
        receivingOrganization: null
        convertPositiveDateTimeOffsetToNegative: false
        stripInvalidCharsRegex: null
        convertDateTimesToReceiverLocalTime: false
        useHighPrecisionHeaderDateTimeFormat: false
        type: "HL7"
        truncationConfig:
          truncateHDNamespaceIds: true
          truncateHl7Fields: []
          customLengthHl7Fields: {}
      jurisdictionalFilter:
        - "(Bundle.entry.resource.ofType(ServiceRequest)[0].requester.resolve().organization.resolve().address.state\
      \ = 'DE') or (Bundle.entry.resource.ofType(Patient).address.state = 'DE')"
      qualityFilter:
        - "Bundle.entry.resource.ofType(DiagnosticReport).result.resolve().where(method.empty()\
      \ or value.coding.code.empty()).count() = 0"
        - "Bundle.entry.resource.ofType(DiagnosticReport).where(basedOn.resolve().extension('https://reportstream.cdc.gov/fhir/StructureDefinition/effective-date').empty()\
      \ and specimen.resolve().collection.collected.empty() and effective.empty()\
      \ and issued.empty() and result.resolve().effective.empty()).count() = 0"
        - "Bundle.entry.resource.ofType(Patient).where(address.line[0].empty() and address.postalCode.empty()\
      \ and telecom.where(system = 'phone').value.empty() and telecom.where(system\
      \ = 'email').value.empty()).count() = 0"
        - "Bundle.entry.resource.ofType(Patient).where(name.family.empty() or name.given.empty()\
      \ or birthDate.empty()).count() = 0"
        - "Bundle.entry.resource.ofType(Practitioner).identifier[0].empty().not()"
        - "Bundle.entry.resource.ofType(Organization).identifier.where(type.coding.code = 'CLIA' or system = 'CLIA').where(value.getIdType() != 'CLIA').count() = 0"
        - "Bundle.entry.resource.ofType(Specimen).where(type.empty()).count() = 0"
        - "Bundle.identifier.value.empty().not()"
      routingFilter:
        - "((Bundle.entry.resource.ofType(Specimen).collection.collectedPeriod.exists()\
      \ or Bundle.entry.resource.ofType(Specimen).collection.collected.exists()) or\
      \ (Bundle.entry.resource.ofType(ServiceRequest).occurrence.exists() or Bundle.entry.resource.ofType(Observation).effective.exists()))"
        - "Bundle.entry.resource.ofType(Patient).birthDate.exists()"
        - "Bundle.entry.resource.ofType(Patient).name.family.exists()"
        - "Bundle.entry.resource.ofType(Patient).name.given.count() > 0"
        - "Bundle.entry.resource.ofType(Patient).where(address.line[0].empty() and address.postalCode.empty()\
      \ and telecom.where(system = 'phone').value.empty() and telecom.where(system\
      \ = 'email').value.empty()).count() = 0"
        - "Bundle.entry.resource.ofType(Specimen).where(type.empty()).count() = 0"
        - "Bundle.identifier.value.exists()"
      processingModeFilter: []
      reverseTheQualityFilter: false
      conditionFilter:
        - "%resource.code.coding.extension('https://reportstream.cdc.gov/fhir/StructureDefinition/condition-code').value.where(code\
        \  in ('840539006'|'55735004'|'6142004')).exists() and %resource.interpretation.coding.code\
        \ = 'A'"
      mappedConditionFilter: []
      deidentify: false
      deidentifiedValue: ""
      timing:
        operation: "MERGE"
        numberPerDay: 1440
        initialTime: "09:30"
        timeZone: "EASTERN"
        maxReportCount: 100
        whenEmpty:
          action: "NONE"
          onlyOncePerDay: false
      description: ""
      transport:
        host: "sftp"
        port: "22"
        filePath: "./upload"
        credentialName: "DEFAULT-SFTP"
        type: "SFTP"
      externalName: "Primary Feed"
      enrichmentSchemaNames: []
      timeZone: null
      dateTimeFormat: "OFFSET"