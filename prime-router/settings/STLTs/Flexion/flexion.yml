# Flexion settings in staging
#
# To load the settings locally, run:
# ./prime multiple-settings set --input ./settings/STLTs/Flexion/flexion.yml
#
# To load the settings in staging, run:
# ./prime login --env staging
# ./prime multiple-settings set --env staging --input ./settings/STLTs/Flexion/flexion.yml
#
# To add the sender keys in staging:
#  ./prime organization addkey --env staging --public-key /path/to/public/key.pem --scope "flexion.*.report" --orgName flexion --kid flexion.simulated-hospital --doit
#  ./prime organization addkey --env staging --public-key /path/to/public/key.pem --scope "flexion.*.report" --orgName flexion --kid flexion.etor-service-sender --doit
#  ./prime organization addkey --env staging --public-key /path/to/public/key.pem --scope "flexion.*.report" --orgName flexion --kid flexion.simulated-lab --doit
#
# To submit an order or result to flexion.simulated-lab or flexion.simulated-hospital, in staging:
# Note: replace the TOKEN with the auth JWT and the path to the FHIR message to send 
# curl -H 'Authorization: Bearer TOKEN' -H 'Client: flexion.etor-service-sender' -H 'Content-Type: application/fhir+ndjson' --data-binary '@/path/to/message.fhir' 'https://staging.prime.cdc.gov/api/waters'
#
# To submit an order from flexion.simulated-hospital, in staging:
# curl -H 'Authorization: Bearer TOKEN' -H 'Client: flexion.simulated-hospital' -H 'Content-Type: application/hl7-v2' --data-binary '@/path/to/order.hl7' 'https://staging.prime.cdc.gov/api/waters'
#
# To submit a result from flexion.simulated-lab, in staging:
# curl -H 'Authorization: Bearer TOKEN' -H 'Client: flexion.simulated-lab' -H 'Content-Type: application/hl7-v2' --data-binary '@/path/to/result.hl7' 'https://staging.prime.cdc.gov/api/waters'
---
- name: "flexion"
  description: "Flexion, Inc."
  jurisdiction: "FEDERAL"
  senders:
    # ETOR Service Sender - Sending FHIR orders and results from TI
    - name: "etor-service-sender"
      organizationName: "flexion"
      topic: "etor-ti"
      customerStatus: "active"
      format: "FHIR"
      schemaName: "classpath:/metadata/fhir_transforms/senders/Flexion/etor-sender-transform.yml"
    # *** Settings used for testing below ***
    # Simulated Hospital Sender - Sending HL7 orders
    - name: "simulated-hospital"
      organizationName: "flexion"
      topic: "etor-ti"
      customerStatus: "active"
      format: "HL7"
    # Simulated State Public Health Lab Sender - Sending HL7 results
    - name: "simulated-lab"
      organizationName: "flexion"
      topic: "etor-ti"
      customerStatus: "active"
      format: "HL7"
    # Sender used for automated tests in staging
    - name: "automated-staging-test-sender"
      organizationName: "flexion"
      topic: "etor-ti"
      customerStatus: "active"
      format: "HL7"
  receivers:
    # ETOR Service Receiver for orders - Routes ORM_O01 and OML_O21 FHIR orders to TI orders endpoint
    - name: "etor-service-receiver-orders"
      organizationName: "flexion"
      topic: "etor-ti"
      customerStatus: "active"
      jurisdictionalFilter:
        - "(Bundle.entry.resource.ofType(MessageHeader).event.code = 'O01') or (Bundle.entry.resource.ofType(MessageHeader).event.code = 'O21')"  # ORM_O01 or OML_O21
        - "Bundle.entry.resource.ofType(MessageHeader).meta.tag.exists(system = 'http://localcodes.org/ETOR').not()"  # required to avoid looping issue
      qualityFilter:
        - "true"
      timing:
        operation: "MERGE"
        numberPerDay: 1440 # Every minute
        initialTime: "00:00"
      translation:
        type: "FHIR"
        useBatching: false
      transport:
        type: "REST"
        authType: "two-legged"
        authTokenUrl: "https://cdcti-stg-api.azurewebsites.net/v1/auth/token"
        reportUrl: "https://cdcti-stg-api.azurewebsites.net/v1/etor/orders"
        # Uncomment below for local Trusted-Intermediary server
        # authTokenUrl: "http://host.docker.internal:8080/v1/auth/token"
        # reportUrl: "http://host.docker.internal:8080/v1/etor/orders"
        tlsKeystore: null
        parameters:
          scope: "report-stream"
          client_assertion: "client_secret"
        headers:
          Content-Type: "text/fhir+ndjson"
          RecordId: "header.reportFile.reportId"
          senderLabName: "CDC PRIME REPORTSTREAM" #name-of-the-lab-the-sending-user-belongs-to
          sourceLabName: "CDC PRIME REPORTSTREAM" #name-of-the-lab-that-originally-sent-this-hl7-message-to-OSDH
        authHeaders:
          Content-Type: "application/x-www-form-urlencoded"
          Host: "cdcti-stg-api.azurewebsites.net"
    # ETOR Service Receiver for results - Routes ORU_R01 FHIR results to TI results endpoint
    - name: "etor-service-receiver-results"
      externalName: "ETOR Service Receiver Channel from ReportStream for results - Receiving ORU_R01 FHIR results"
      organizationName: "flexion"
      topic: "etor-ti"
      customerStatus: "active"
      jurisdictionalFilter:
        - "Bundle.entry.resource.ofType(MessageHeader).event.code = 'R01'"  # ORU_R01
        - "Bundle.entry.resource.ofType(MessageHeader).meta.tag.exists(system = 'http://localcodes.org/ETOR').not()"  # required to avoid looping issue
      qualityFilter:
        - "true"
      timing:
        operation: "MERGE"
        numberPerDay: 1440 # Every minute
        initialTime: "00:00"
      translation:
        type: "FHIR"
        useBatching: false
      transport:
        type: "REST"
        authType: "two-legged"
        authTokenUrl: "https://cdcti-stg-api.azurewebsites.net/v1/auth/token"
        reportUrl: "https://cdcti-stg-api.azurewebsites.net/v1/etor/results"
        # Uncomment below for local Trusted-Intermediary server
        # authTokenUrl: "http://host.docker.internal:8080/v1/auth/token"
        # reportUrl: "http://host.docker.internal:8080/v1/etor/results"
        tlsKeystore: null
        parameters:
          scope: "report-stream"
          client_assertion: "client_secret"
        headers:
          Content-Type: "text/fhir+ndjson"
          RecordId: "header.reportFile.reportId"
        authHeaders:
          Content-Type: "application/x-www-form-urlencoded"
          Host: "cdcti-stg-api.azurewebsites.net"
    # *** Settings used for testing below ***
    # Simulated Hospital Receiver: converts ORU_R01 from FHIR to HL7 and routes the message to the SFTP folder
    - name: "simulated-hospital"
      organizationName: "flexion"
      topic: "etor-ti"
      customerStatus: "active"
      jurisdictionalFilter:
        - "Bundle.entry.resource.ofType(MessageHeader).event.code = 'R01'"  # ORU_R01
        - "Bundle.entry.resource.ofType(MessageHeader).meta.tag.where(system = 'http://localcodes.org/ETOR').code = 'ETOR'"  # required to avoid looping issue
        - "Bundle.entry.resource.ofType(MessageHeader).destination.receiver.resolve().identifier.where(extension.value = 'HD.2,HD.3').value = 'simulated-hospital-id'"  # receiver routing filter (MSH-6.2)
      qualityFilter:
        - "true"
      timing:
        operation: "MERGE"
        numberPerDay: 1440 # Every minute
        initialTime: "00:00"
      translation:
        type: "HL7"
        schemaName: "classpath:/metadata/hl7_mapping/ORU_R01/ORU_R01-base.yml"
        useTestProcessingMode: false
        useBatchHeaders: false
      transport:
        type: "SFTP"
        host: "172.17.6.20" # use "sftp" if running locally
        port: 22
        filePath: "./upload"
        credentialName: null # use "DEFAULT-SFTP" if running locally
    # Simulated State Public Health Lab Receiver: converts OML_O21 from FHIR to HL7 and routes the message to the SFTP folder
    - name: "simulated-lab"
      organizationName: "flexion"
      topic: "etor-ti"
      customerStatus: "active"
      jurisdictionalFilter:
        - "Bundle.entry.resource.ofType(MessageHeader).event.code = 'O21'"  # OML_O21
        - "Bundle.entry.resource.ofType(MessageHeader).meta.tag.where(system = 'http://localcodes.org/ETOR').code = 'ETOR'"  # required to avoid looping issue
        - "Bundle.entry.resource.ofType(MessageHeader).destination.receiver.resolve().identifier.where(extension.value = 'HD.2,HD.3').value = 'simulated-lab-id'"  # receiver routing filter (MSH-6.2)
      qualityFilter:
        - "true"
      timing:
        operation: "MERGE"
        numberPerDay: 1440 # Every minute
        initialTime: "00:00"
      translation:
        type: "HL7"
        schemaName: "classpath:/metadata/hl7_mapping/receivers/Flexion/etor-oml-receiver-transform.yml"
        useTestProcessingMode: false
        useBatchHeaders: false
      transport:
        type: "SFTP"
        host: "172.17.6.20" # use "sftp" if running locally
        port: 22
        filePath: "./upload"
        credentialName: null # use "DEFAULT-SFTP" if running locally
    - name: "automated-staging-test-receiver-orders"
      organizationName: "flexion"
      topic: "etor-ti"
      customerStatus: "active"
      jurisdictionalFilter:
        - "(Bundle.entry.resource.ofType(MessageHeader).event.code = 'O01') or (Bundle.entry.resource.ofType(MessageHeader).event.code = 'O21')"  # ORM_O01 or OML_O21
        - "Bundle.entry.resource.ofType(MessageHeader).meta.tag.where(system = 'http://localcodes.org/ETOR').code = 'ETOR'"  # required to avoid looping issue
        - "Bundle.entry.resource.ofType(MessageHeader).destination.receiver.resolve().identifier.where(extension.value = 'HD.2,HD.3').value = 'automated-staging-test-receiver-id'"  # receiver routing filter (MSH-6.2)
      qualityFilter:
        - "true"
      timing:
        operation: "MERGE"
        numberPerDay: 1440 # Every minute
        initialTime: "00:00"
      translation:
        type: "HL7"
        schemaName: "classpath:/metadata/hl7_mapping/receivers/Flexion/etor-oml-receiver-transform.yml"
        useTestProcessingMode: false
        useBatchHeaders: false
      transport:
        type: "BLOBSTORE"
        storageName: "cdctiautomated"
        containerName: "automated"
    - name: "automated-staging-test-receiver-results"
      organizationName: "flexion"
      topic: "etor-ti"
      customerStatus: "active"
      jurisdictionalFilter:
        - "Bundle.entry.resource.ofType(MessageHeader).event.code = 'R01'"  # ORU_R01
        - "Bundle.entry.resource.ofType(MessageHeader).meta.tag.where(system = 'http://localcodes.org/ETOR').code = 'ETOR'"  # required to avoid looping issue
        - "(Bundle.entry.resource.ofType(MessageHeader).destination.receiver.resolve().identifier.where(extension.value = 'HD.2,HD.3').value = 'automated-staging-test-receiver-id')
          or (Bundle.identifier.value.contains('AUTOMATEDTEST-'))"  # receiver routing filter (MSH-6.2 or MSH-10)
      qualityFilter:
        - "true"
      timing:
        operation: "MERGE"
        numberPerDay: 1440 # Every minute
        initialTime: "00:00"
      translation:
        type: "HL7"
        schemaName: "classpath:/metadata/hl7_mapping/ORU_R01/ORU_R01-base.yml"
        useTestProcessingMode: false
        useBatchHeaders: false
      transport:
        type: "BLOBSTORE"
        storageName: "cdctiautomated"
        containerName: "automated"
