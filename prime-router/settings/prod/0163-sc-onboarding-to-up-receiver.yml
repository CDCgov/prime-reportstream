# To submit this to localhost, run:
#
# ./prime multiple-settings set --env prod --input ./settings/prod/0163-sc-onboarding-to-up-receiver.yml
---
- name: "sc-phd"
  description: "South Carolina Public Health Department"
  jurisdiction: "STATE"
  stateCode: "SC"
  countyName: null
  filters: []
  featureFlags: null
  keys: null
  senders: []
  receivers:
    - name: "full-elr"
      organizationName: "sc-phd"
      topic: "full-elr"
      customerStatus: "inactive"
      translation: !<HL7>
        schemaName: "classpath:/metadata/hl7_mapping/receivers/STLTs/SC/SC-receiver-transform"
        useTestProcessingMode: false
        useBatchHeaders: true
        receivingApplicationName: null
        receivingApplicationOID: null
        receivingFacilityName: null
        receivingFacilityOID: null
        messageProfileId: null
        replaceValue: {}
        replaceValueAwithB: {}
        reportingFacilityName: null
        reportingFacilityId: null
        reportingFacilityIdType: null
        suppressQstForAoe: false
        suppressHl7Fields: null
        suppressAoe: false
        defaultAoeToUnknown: false
        replaceUnicodeWithAscii: false
        useBlankInsteadOfUnknown: null
        truncateHDNamespaceIds: false
        truncateHl7Fields: null
        usePid14ForPatientEmail: false
        convertTimestampToDateTime: null
        cliaForOutOfStateTesting: null
        cliaForSender: {}
        phoneNumberFormatting: "STANDARD"
        suppressNonNPI: false
        processingModeCode: null
        replaceDiiWithOid: null
        applyOTCDefault: false
        useOrderingFacilityName: "STANDARD"
        valueSetOverrides: {}
        nameFormat: "STANDARD"
        receivingOrganization: null
        convertPositiveDateTimeOffsetToNegative: false
        stripInvalidCharsRegex: null
        convertDateTimesToReceiverLocalTime: false
        useHighPrecisionHeaderDateTimeFormat: false
        type: "HL7"
        truncationConfig:
          truncateHDNamespaceIds: false
          truncateHl7Fields: []
          customLengthHl7Fields: {}
      jurisdictionalFilter:
        - "(Bundle.entry.resource.ofType(ServiceRequest)[0].requester.resolve().organization.resolve().address.state = 'SC') or (Bundle.entry.resource.ofType(Patient).address.state = 'SC')"
      qualityFilter:
        - "Bundle.entry.resource.ofType(MessageHeader).id.exists()"
        - "Bundle.entry.resource.ofType(Patient).birthDate.exists()"
        - "Bundle.entry.resource.ofType(Patient).name.family.exists()"
        - "Bundle.entry.resource.ofType(Patient).name.given.count() > 0"
        - "Bundle.entry.resource.ofType(Specimen).type.exists()"
        - "(Bundle.entry.resource.ofType(Patient).address.line.exists() or Bundle.entry.resource.ofType(Patient).address.postalCode.exists() or Bundle.entry.resource.ofType(Patient).telecom.exists())"
        - "((Bundle.entry.resource.ofType(Specimen).collection.collectedPeriod.exists() or Bundle.entry.resource.ofType(Specimen).collection.collected.exists()) or Bundle.entry.resource.ofType(serviceRequest).occurrence.exists() or Bundle.entry.resource.ofType(Observation).effective.exists())"
      routingFilter: []
      processingModeFilter: []
      reverseTheQualityFilter: false
      conditionFilter: []
      mappedConditionFilter: []
      deidentify: false
      deidentifiedValue: ""
      timing:
        operation: "MERGE"
        numberPerDay: 12
        initialTime: "01:09"
        timeZone: "EASTERN"
        maxReportCount: 100
        whenEmpty:
          action: "NONE"
          onlyOncePerDay: false
      description: ""
      transport: []
      externalName: null
      enrichmentSchemaNames: []
      timeZone: null
      dateTimeFormat: "OFFSET"