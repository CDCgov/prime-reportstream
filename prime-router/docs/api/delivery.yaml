paths:
  /v1/receivers/{receiverName}/deliveries:
    post:
      operationId: postV1ReceiversDeliveries
      summary: Returns a list of reports that have been delivered to the receiver
      description: Returns a list of reports that have been delivered to the receiver
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - in: path
          name: receiverName
          schema:
            type: string
          required: true
          description: The full name of the receiver to fetch submitters for
      requestBody:
        description: The search parameters for the request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryApiSearch'
      responses:
        '200':
          description: The results from running the search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryApiSearchResults'
        '401':
          description: Unauthorized        
        '400':
          $ref: 'components/responses.yaml#/BadRequest'
        '404':
          description: The receiver could not be found
        default:
          $ref: 'components/responses.yaml#/BadRequest'

  /waters/report/{reportId}/delivery/etorMetadata:
    get:
      operationId: getWatersReportDeliveryEtorMetadata
      summary: Retrieves ETOR metadata for a recipient's report
      description: Fetches the ETOR intermediary's metadata given the recipient's report ID.
      parameters:
        - name: reportId
          in: path
          required: true
          description: The unique identifier of the report.
          schema:
            type: string
      responses:
        '200':
          description: Successful retrieval of ETOR metadata.
          content:
            application/json:
              schema:
                $ref: 'components/fhir.yaml#/components/schemas/OperationOutcome'
        '400':
          $ref: 'components/responses.yaml#/BadRequest'
        '404':
          description: lookup Id not found
        '500':
          description: Internal server error.
        default:
          $ref: 'components/responses.yaml#/BadRequest'

  /v1/receivers/{receiverFullName}/deliveries/submitters/search:
    post:
      operationId: postV1ReceiversDeliveriesSubmittersSearch
      summary: Return a list of all the providers, facilities and senders that have sent results to a receiver
      description: Return a list of all the providers, facilities and senders that have sent results to a receiver
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - in: path
          name: receiverFullName
          schema:
            type: string
          required: true
          description: The full name of the receiver to fetch submitters for
      requestBody:
        description: The search parameters for the request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitterApiSearch'
      responses:
        '200':
          description: The results from running the search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitterApiSearchResults'
        '401':
          description: Unauthorized        
        '400':
          $ref: 'components/responses.yaml#/BadRequest'
        '404':
          description: The receiver could not be found
        default:
          $ref: 'components/responses.yaml#/BadRequest'

  /waters/org/{organization}/deliveries:
    get:
      operationId: getWatersOrgDeliveries
      summary: Get available reports for all org STLTs
      description: Retrieve a list of reports available for download by a STLT
      parameters:
        - name: organization
          in: path
          description: receiver whose deliveries we want to see
          required: true
          schema:
            type: string
        - name: reportId
          in: query
          description: the reportId within the deliveries of the organization and client
          schema:
            type: string
        - name: fileName
          in: query
          description: the fileName within the deliveries of the organization and client
          schema:
            type: string
        - name: receivingOrgSvcStatus
          in: query
          description: "Customer status of the service used by the organization. Can append the parameter multiple times for more than one status."
          example: "ACTIVE"
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - TESTING
        - $ref: 'components/sort_and_filter.yaml#/sortDir'
        - $ref: 'components/sort_and_filter.yaml#/sortCol'
        - $ref: 'components/sort_and_filter.yaml#/cursor'
        - $ref: 'components/sort_and_filter.yaml#/since'
        - $ref: 'components/sort_and_filter.yaml#/until'
        - $ref: 'components/sort_and_filter.yaml#/pagesize'
      responses:
        '200':
          description: a list of AvailableReport objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deliveries'
        '400':
          $ref: 'components/responses.yaml#/BadRequest'
        '401':
          description: unauthorized
        '404':
          description: organization does not exist
        default:
          $ref: 'components/responses.yaml#/BadRequest'

  /waters/org/{organization}.{client}/deliveries:
    get:
      operationId: getWatersOrgClientDeliveries
      summary: Get available reports for a STLT
      description: Retrieve a list of reports available for download by a STLT
      parameters:
        - name: organization
          in: path
          description: receiver whose deliveries we want to see
          required: true
          schema:
            type: string
        - name: client
          in: path
          description: client of the receiver to get deliveries for
          required: true
          schema:
            type: string
        - name: reportId
          in: query
          description: the reportId within the deliveries of the organization and client
          schema:
            type: string
        - name: fileName
          in: query
          description: the fileName within the deliveries of the organization and client
          schema:
            type: string
        - name: receivingOrgSvcStatus
          in: query
          description: "Customer status of the service used by the organization. Can append the parameter multiple times for more than one status."
          example: "ACTIVE"
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - TESTING
        - $ref: 'components/sort_and_filter.yaml#/sortDir'
        - $ref: 'components/sort_and_filter.yaml#/sortCol'
        - $ref: 'components/sort_and_filter.yaml#/cursor'
        - $ref: 'components/sort_and_filter.yaml#/since'
        - $ref: 'components/sort_and_filter.yaml#/until'
        - $ref: 'components/sort_and_filter.yaml#/pagesize'
      responses:
        '200':
          description: a list of AvailableReport objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deliveries'
        '400':
          $ref: 'components/responses.yaml#/BadRequest'
        '401':
          description: unauthorized
        '404':
          description: organization does not exist
        default:
          $ref: 'components/responses.yaml#/BadRequest'

  /waters/report/{id}/delivery:
    get:
      operationId: getWatersReportDelivery
      summary: Get expanded details for a single report
      description: Retrieve the details for a report, including easily fetched relations
      parameters:
        - name: id
          in: path
          description: ActionID or ReportId of report whose details we want to see
          required: true
          schema:
            type: string
            format: uuid or int
      responses:
        '200':
          description: a report detail object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
        '400':
          $ref: 'components/responses.yaml#/BadRequest'
        '401':
          description: unauthorized
        '404':
          description: report does not exist
        default:
          $ref: 'components/responses.yaml#/BadRequest'

  /waters/report/{id}/facilities:
    get:
      operationId: getWatersReportFacilities
      summary: Get facilities for a single report
      description: Retrieve the list of facilities for a report
      parameters:
        - name: id
          in: path
          description: ActionID or ReportId of report whose facilities we want to see
          required: true
          schema:
            type: string
            format: uuid or int
        - $ref: 'components/sort_and_filter.yaml#/sortDir'
        - $ref: 'components/sort_and_filter.yaml#/sortCol'
          enum: [ NAME, CITY, STATE, CLIA, POSITIVE, TOTAL ]
      responses:
        '200':
          description: an array of facilities in the report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesList'
        '400':
          $ref: 'components/responses.yaml#/BadRequest'
        '401':
          description: unauthorized
        '404':
          description: report does not exist
        default:
          $ref: 'components/responses.yaml#/BadRequest'

components:
  schemas:
    DeliveryApiSearch:
      type: object
      properties:
        sort:
          description: The sorting to apply to the results, defaults to sorting by created_at, DESC
          type: object
          properties:
            direction:
              description: The order to apply the sort property
              type: string
              enum:
                - DESC
                - ASC
            'property':
              description: The property to sort by
              type: string
              enum:
                - ordering_provider
                - ordering_facility
                - submitter
                - report_id
                - created_at
                - expiration_date
                - number_of_tests
                - sort_id
        pagination:
          type: object
          description: The pagination to apply to the search
          properties:
            page:
              type: integer
              description: Which page of results to fetch
            limit:
              type: integer
              description: The number of results to return per page
        filters:
          type: array
          items:
            type: object
            properties:
              filterName:
                description: The name of the filter to apply to the results
                type: string
                enum:
                  - SINCE
                  - UNTIL
              value:
                description: |
                  The value for the filter to apply; depending on the
                  > filter type the value will be parsed to the data type that underlying filter expects
                  > i.e. the SINCE filter will parse it to an LocalDateTime
                type: string

    SubmitterApiSearch:
      type: object
      properties:
        sort:
          description: The sorting to apply to the results, defaults to sorting by created_at, DESC
          type: object
          properties:
            direction:
              description: The order to apply the sort property
              type: string
              enum:
                - DESC
                - ASC
            'property':
              description: The property to sort by
              type: string
              enum:
                - id
                - name
                - first_report_date
                - test_result_count
                - type
        pagination:
          type: object
          description: The pagination to apply to the search
          properties:
            page:
              type: integer
              description: Which page of results to fetch
            limit:
              type: integer
              description: The number of results to return per page
        filters:
          type: array
          items:
            type: object
            properties:
              filterName:
                description: The name of the filter to apply to the results
                type: string
                enum:
                  - SINCE
                  - UNTIL
              value:
                description: |
                  The value for the filter to apply; depending on the
                  > filter type the value will be parsed to the data type that underlying filter expects
                  > i.e. the SINCE filter will parse it to an LocalDateTime
                type: string

    DeliveryApiSearchResults:
      type: object
      description: Results from running a search for submitters to a specific receiver
      properties:
        meta:
          type: object
          properties:
            'type':
              type: string
              enum:
                - submitter
            totalCount:
              type: integer
              description: The total of number of results before applying the filters
            totalFilteredCount:
              type: integer
              description: The total number of results after applying the filters
            totalPages:
              type: integer
              description: The number of pages for the results
            nextPage:
              type: integer
              description: the next page of results
            previousPage:
              type: integer
              description: the previous page of results
        data:
          type: array
          items:
            type: object
            properties:
              orderingProvider:
                type: string
                description: The ordering provider in the report
              orderingFacility:
                type: string
                description: The ordering facility in the report
              submitter:
                type: string
                description: The sender of the data that was in the report
              createdAt:
                type: string
                format: date-time
                description: When the report was sent
              expirationDate:
                type: string
                format: date-time
                description: When the report will no longer be available
              testResultCount:
                type: string
                description: The total number of reports sent by the submitter
              reportId:
                type: string
                format: uuid
                description: The ID for the sent report

    SubmitterApiSearchResults:
      type: object
      description: Results from running a search for submitters to a specific receiver
      properties:
        meta:
          type: object
          properties:
            'type':
              type: string
              enum:
                - submitter
            totalCount:
              type: integer
              description: The total of number of results before applying the filters
            totalFilteredCount:
              type: integer
              description: The total number of results after applying the filters
            totalPages:
              type: integer
              description: The number of pages for the results
            nextPage:
              type: integer
              description: the next page of results
            previousPage:
              type: integer
              description: the previous page of results
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: The id of the submitter
              name:
                type: string
                description: The name of the submitter
              firstReportDate:
                type: string
                format: date-time
                description: The date the first of the first report sent by the submitter
              testResultCount:
                type: string
                description: The total number of reports sent by the submitter
              'type':
                type: string
                description: The submitter type
                enum:
                  - SUBMITTER
                  - PROVIDER
                  - FACILITY
              location:
                type: string
                description: The location for the submitter

    Deliveries:
      type: array
      items:
        $ref: '#/components/schemas/Delivery'

    Delivery:
      type: object
      properties:
        deliveryId:
          description: the action_id from this report's action log entry
          type: integer
        sent:
          description: when this report was sent
          type: string
          format: date-time
        expires:
          description: expiration date for the report file
          type: string
          format: date-time
        receivingOrg:
          description: the name of the organization receiving the report
          type: string
        receivingOrgSvc:
          description: service used by the organization
          type: string
        reportId:
          description: the uuid for this report
          type: string
          format: uuid
        topic:
          description: the schema topic (e.g. COVID-19, Flu)
          type: string
        reportItemCount:
          description: number of tests in the report
          type: integer
        fileName:
          description: the filename for the delivered report
          type: string
        fileType:
          description: format in which the report was originally sent
          type: string
          enum: [ INTERNAL, CSV, CSV_SINGLE, HL7, HL7_BATCH, FHIR ]

    FacilitiesList:
      type: array
      items:
        $ref: '#/components/schemas/DeliveryFacility'

    DeliveryFacility:
      type: object
      properties:
        reportId:
          description: the uuid for the referenced report
          type: string
          format: uuid
        facility:
          description: the full name of the facility
          type: string
        location:
          description: city and state of the facility
          type: string
        CLIA:
          description: The CLIA number (10-digit alphanumeric) of the facility
          type: string
        positive:
          description: the result (conclusion) of the test. 0 = negative (good usually)
          type: integer
        total:
          description: number of facilities included in the object
          type: integer