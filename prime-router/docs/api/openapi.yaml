openapi: 3.1.0
info:
  title: Prime ReportStream
  description: A router of public health data
  contact:
    name: USDS at Centers for Disease Control and Prevention
    url: https://reportstream.cdc.gov
    email: reportstream@cdc.gov
  version: 0.2.0-oas3
  license:
    name: Creative Commons Zero v1.0 Universal
    url: https://github.com/CDCgov/prime-reportstream/blob/master/LICENSE
servers:
  - url: http://localhost:7071/api/
    description: Local Server (Local Development Use)
  - url: https://staging.prime.cdc.gov/api/
    description: Staging Server
  - url: https://prime.cdc.gov/api
    description: Production server (uses live data)
externalDocs:
  description: ReportStream API Programmer Guide
  url: https://staging.reportstream.cdc.gov/resources/api/getting-started
security:
  - OAuth2: []
  - PreviewOAuth2: []
  - ServerToServer: []
tags:
  - name: Account
  - name: ActivityDefinition
  - name: AdministrableProductDefinition
  - name: AdverseEvent
  - name: AllergyIntolerance
  - name: Appointment
  - name: AppointmentResponse
  - name: AuditEvent
  - name: Basic
  - name: BiologicallyDerivedProduct
  - name: BodyStructure
  - name: CapabilityStatement
  - name: CarePlan
  - name: CareTeam
  - name: CatalogEntry
  - name: ChargeItem
  - name: ChargeItemDefinition
  - name: Citation
  - name: Claim
  - name: ClaimResponse
  - name: ClinicalImpression
  - name: ClinicalUseDefinition
  - name: CodeSystem
  - name: Communication
  - name: CommunicationRequest
  - name: CompartmentDefinition
  - name: Composition
  - name: ConceptMap
  - name: Condition
  - name: Consent
  - name: Contract
  - name: Coverage
  - name: CoverageEligibilityRequest
  - name: CoverageEligibilityResponse
  - name: DetectedIssue
  - name: Device
  - name: RiskAssessment
  - name: Group
  - name: Provenance
  - name: Invoice
  - name: DiagnosticReport
  - name: ExplanationOfBenefit
  - name: DocumentManifest
  - name: Specimen
  - name: List
  - name: DocumentReference
  - name: Media
  - name: Flag
  - name: QuestionnaireResponse
  - name: ServiceRequest
  - name: DeviceUseStatement
  - name: SupplyRequest
  - name: RequestGroup
  - name: Schedule
  - name: Observation
  - name: MedicationAdministration
  - name: DeviceRequest
  - name: MessageHeader
  - name: DeviceDefinition
  - name: DeviceMetric
  - name: Encounter
  - name: NutritionOrder
  - name: Procedure
  - name: MedicationRequest
  - name: VisionPrescription
  - name: Endpoint
  - name: EnrollmentRequest
  - name: EnrollmentResponse
  - name: EpisodeOfCare
  - name: EventDefinition
  - name: Evidence
  - name: EvidenceReport
  - name: EvidenceVariable
  - name: ExampleScenario
  - name: FamilyMemberHistory
  - name: Goal
  - name: GraphDefinition
  - name: GuidanceResponse
  - name: HealthcareService
  - name: ImagingStudy
  - name: Immunization
  - name: ImmunizationEvaluation
  - name: ImmunizationRecommendation
  - name: ImplementationGuide
  - name: Ingredient
  - name: InsurancePlan
  - name: Library
  - name: Linkage
  - name: Location
  - name: ManufacturedItemDefinition
  - name: Measure
  - name: MeasureReport
  - name: Medication
  - name: MedicationDispense
  - name: MedicationKnowledge
  - name: MedicationStatement
  - name: MedicinalProductDefinition
  - name: MessageDefinition
  - name: MolecularSequence
  - name: NamingSystem
  - name: NutritionProduct
  - name: ObservationDefinition
  - name: OperationDefinition
  - name: OperationOutcome
  - name: Organization
  - name: OrganizationAffiliation
  - name: PackagedProductDefinition
  - name: Patient
  - name: ResearchSubject
  - name: RelatedPerson
  - name: Person
  - name: SupplyDelivery
  - name: PaymentNotice
  - name: PaymentReconciliation
  - name: PlanDefinition
  - name: Practitioner
  - name: ResearchStudy
  - name: PractitionerRole
  - name: Questionnaire
  - name: RegulatedAuthorization
  - name: ResearchDefinition
  - name: ResearchElementDefinition
  - name: SearchParameter
  - name: Slot
  - name: SpecimenDefinition
  - name: StructureDefinition
  - name: StructureMap
  - name: Subscription
  - name: SubscriptionStatus
  - name: SubscriptionTopic
  - name: Substance
  - name: SubstanceDefinition
  - name: Task
  - name: TerminologyCapabilities
  - name: TestReport
  - name: TestScript
  - name: ValueSet
  - name: VerificationResult
  - name: validate
    description: ReportStream validation API
  - name: messages
    description: ReportStream messages API
paths:
  /waters/org/{organization}/submissions:
    get:
      description: returns a list of simple submissions for a specific sender
      security:
        - OAuth2:
            - user
      parameters:
        - name: organization
          in: path
          description: sender of the report history we want to look at
          required: true
          schema:
            type: string
        - $ref: components/sort_and_filter.yaml#/sortDir
        - $ref: components/sort_and_filter.yaml#/sortCol
        - $ref: components/sort_and_filter.yaml#/cursor
        - $ref: components/sort_and_filter.yaml#/since
        - $ref: components/sort_and_filter.yaml#/until
        - $ref: components/sort_and_filter.yaml#/pagesize
        - name: showFailed
          in: query
          description: whether or not to show submissions that failed delivery
          schema:
            type: boolean
      responses:
        "200":
          description: a list of submission history objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionHistoryList"
        "400":
          description: bad request
  /waters/org/{organization}.{senderChannel}/submissions:
    get:
      description: returns a list of simple submissions for a specific sender and
        sender channel
      security:
        - OAuth2:
            - user
      parameters:
        - name: organization
          in: path
          description: sender of the report history we want to look at
          required: true
          schema:
            type: string
        - name: senderChannel
          in: path
          description: sender channel of the report history we want to look at
          required: true
          schema:
            type: string
        - $ref: components/sort_and_filter.yaml#/sortDir
        - $ref: components/sort_and_filter.yaml#/sortCol
        - $ref: components/sort_and_filter.yaml#/cursor
        - $ref: components/sort_and_filter.yaml#/since
        - $ref: components/sort_and_filter.yaml#/until
        - $ref: components/sort_and_filter.yaml#/pagesize
        - name: showFailed
          in: query
          description: whether or not to show submissions that failed delivery
          schema:
            type: boolean
      responses:
        "200":
          description: a list of submission history objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionHistoryList"
        "400":
          description: bad request
  /waters/reports:
    post:
      description: submit a report to be routed
      security:
        - OAuth2:
            - system_admin
      parameters:
        - name: processing
          in: query
          description: flag for processing the report in a different manner
          schema:
            type: string
            enum:
              - async
      requestBody:
        description: The public health information being routed
        required: true
        content:
          text/csv:
            schema:
              type: string
              format: hl7
              example: Patient_last_name,Patient_first_name tests,Jordan
      responses:
        "200":
          description: the detailed report history object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetailedSubmissionHistory"
        "401":
          description: unknown or invalid sender
  /waters/report/{id}/history:
    get:
      description: return detailed history of a single submitted report
      security:
        - OAuth2:
            - user
      parameters:
        - name: id
          in: path
          description: a valid UUID or actionId (aka submissionId)
          required: true
          schema:
            type: string
      responses:
        "200":
          description: the detailed report history object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetailedSubmissionHistory"
        "401":
          description: unauthorized
        "404":
          description: either there is no report with the given id or the report is not a
            submission
        "500":
          description: unable to fetch history due to Data Access Exception
  /waters/org/{organization}/deliveries:
    get:
      summary: Get available reports for all org STLTs
      description: Retrieve a list of reports available for download by a STLT
      security:
        - OAuth2:
            - user
        - Server2Server: []
      parameters:
        - name: organization
          in: path
          description: receiver whose deliveries we want to see
          required: true
          schema:
            type: string
        - name: reportId
          in: query
          description: the reportId within the deliveries of the organization and client
          schema:
            type: string
        - name: fileName
          in: query
          description: the fileName within the deliveries of the organization and client
          schema:
            type: string
        - name: receivingOrgSvcStatus
          in: query
          description: Customer status of the service used by the organization. Can append
            the parameter multiple times for more than one status.
          example: ACTIVE
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - TESTING
        - $ref: components/sort_and_filter.yaml#/sortDir
        - $ref: components/sort_and_filter.yaml#/sortCol
        - $ref: components/sort_and_filter.yaml#/cursor
        - $ref: components/sort_and_filter.yaml#/since
        - $ref: components/sort_and_filter.yaml#/until
        - $ref: components/sort_and_filter.yaml#/pagesize
      responses:
        "200":
          description: a list of AvailableReport objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deliveries"
        "400":
          description: bad request
        "401":
          description: unauthorized
        "404":
          description: organization does not exist
  /waters/org/{organization}.{client}/deliveries:
    get:
      operationId: getDeliveries
      summary: Get available reports for a STLT
      description: Retrieve a list of reports available for download by a STLT
      security:
        - OAuth2:
            - user
        - Server2Server: []
      parameters:
        - name: organization
          in: path
          description: receiver whose deliveries we want to see
          required: true
          schema:
            type: string
        - name: client
          in: path
          description: client of the receiver to get deliveries for
          required: true
          schema:
            type: string
        - name: reportId
          in: query
          description: the reportId within the deliveries of the organization and client
          schema:
            type: string
        - name: fileName
          in: query
          description: the fileName within the deliveries of the organization and client
          schema:
            type: string
        - name: receivingOrgSvcStatus
          in: query
          description: Customer status of the service used by the organization. Can append
            the parameter multiple times for more than one status.
          example: ACTIVE
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
              - TESTING
        - $ref: components/sort_and_filter.yaml#/sortDir
        - $ref: components/sort_and_filter.yaml#/sortCol
        - $ref: components/sort_and_filter.yaml#/cursor
        - $ref: components/sort_and_filter.yaml#/since
        - $ref: components/sort_and_filter.yaml#/until
        - $ref: components/sort_and_filter.yaml#/pagesize
      responses:
        "200":
          description: a list of AvailableReport objects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deliveries"
        "400":
          description: bad request
        "401":
          description: unauthorized
        "404":
          description: organization does not exist
  /waters/report/{id}/delivery:
    get:
      operationId: getDeliveryDetails
      summary: Get expanded details for a single report
      description: Retrieve the details for a report, including easily fetched relations
      security:
        - OAuth2:
            - user
        - Server2Server: []
      parameters:
        - name: id
          in: path
          description: ActionID or ReportId of report whose details we want to see
          required: true
          schema:
            type: string
            format: uuid or int
      responses:
        "200":
          description: a report detail object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Delivery"
        "400":
          description: bad request
        "401":
          description: unauthorized
        "404":
          description: report does not exist
  /waters/report/{id}/facilities:
    get:
      operationId: getDeliveryFacilities
      summary: Get facilities for a single report
      description: Retrieve the list of facilities for a report
      security:
        - OAuth2:
            - user
        - Server2Server: []
      parameters:
        - name: id
          in: path
          description: ActionID or ReportId of report whose facilities we want to see
          required: true
          schema:
            type: string
            format: uuid or int
        - $ref: components/sort_and_filter.yaml#/sortDir
        - $ref: components/sort_and_filter.yaml#/sortCol
          enum:
            - NAME
            - CITY
            - STATE
            - CLIA
            - POSITIVE
            - TOTAL
      responses:
        "200":
          description: an array of facilities in the report
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacilitiesList"
        "400":
          description: bad request
        "401":
          description: unauthorized
        "404":
          description: report does not exist
  /validate:
    post:
      tags:
        - default
        - validate
      summary: Validate a message using client information. Validation errors and
        warnings are reported in the response json.
      parameters:
        - in: header
          name: client
          description: The client.sender to validate against. If client is not known, use
            `schema` and `format` instead.
          schema:
            type: string
          example: simple_report.default
        - in: query
          name: schema
          description: >
            The schema path to validate the message against. Must be use with
            `format`. This parameter is incompatible with `client`.
          schema:
            type: string
          example: hl7/hcintegrations-covid-19
        - in: query
          name: format
          description: >
            The format of the message. must be used with `schema`.  This
            parameter is incompatible with `client`.
          schema:
            type: string
            enum:
              - CSV
              - HL7
              - HL7_BATCH
          example: HL7
      requestBody:
        description: The message to validate
        required: true
        content:
          text/csv:
            schema:
              type: string
            example: |-
              header1, header2
              value1, value2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "400":
          description: Bad Request
  token:
    post:
      description: Generate and return a new token for the requested scope
      security:
        - OAuth2:
            - user
      requestBody:
        description: Parameters should be sent in the request body.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                scope:
                  type: string
                  description: Permission being requested. Format is
                    orgName.senderName.desiredPermission. Example
                    "strac.default.report"
                grant_type:
                  type: string
                  description: The value should always be "client_credentials"
                client_assertion_type:
                  type: string
                  description: The value should always be
                    "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
                client_assertion:
                  type: string
                  description: signed JWT from the sender. See
                    https://github.com/CDCgov/prime-reportstream/blob/master/prime-router/docs/playbooks/how-to-use-token-auth.md
      responses:
        "200":
          description: the token was created and returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableVersionInfo"
        "400":
          description: bad request
        "401":
          description: unauthorized
  /submissions:
    get:
      description: Return a list of all basic info on all receive actions and
        associated reports.
      security:
        - OAuth2:
            - user
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
          required: false
          description: The cursor pointing to the next portion of results. If you don't
            pass a `cursor` parameter, but **do** pass a `limit` parameter, the
            default value retrieves the first portion of results. Paginated
            responses include a `response_metadata` object that includes a
            `next_cursor` *when there are additional results to be retrieved.*
            On your next call to the same method, set the `cursor` parameter
            equal to the `next_cursor` value you received on the last request to
            retrieve the next portion of the collection. An empty, null, or
            non-existent `next_cursor` in the response indicates no further
            results.
        - in: query
          name: pagesize
          schema:
            type: integer
          required: true
          description: The number of items to return (default `10`).
        - in: query
          name: sort
          schema:
            type: string
          required: true
          description: Orders by created date time, this controls if it is asc or desc
            (default 'desc')
        - in: query
          name: dateStart
          schema:
            oneOf:
              - type: integer
              - type: string
          required: false
          description: (`YYYY-MM-DD`) Start date to get results for.
        - in: query
          name: dateEnd
          schema:
            oneOf:
              - type: integer
              - type: string
          required: false
          description: (`YYYY-MM-DD') End date to get results for.
        - in: query
          name: year
          schema:
            type: integer
          required: false
          description: (`YYYY` - default `ALL`) Return results from specific Year,
            overriden by start/end
        - in: query
          name: month
          schema:
            type: integer
          required: false
          description: (`MM` - default `ALL`) Return results from specific Month. Requires
            `year` being set. Overriden by start/end
        - in: query
          name: organizations
          schema:
            type: array
            items:
              type: integer
          required: false
          description: (`{INT, INT, INT}` || `INT` - default `ALL`) Return results from
            specific Organization or array of Organizations. Must have admin
            access.
        - in: query
          name: recipients
          schema:
            type: array
            items:
              type: integer
          required: false
          description: (`{INT, INT, INT}` || `INT` - default `ALL`) Return results from
            specific Recipient or array of Recipients.
        - in: query
          name: senders
          schema:
            type: array
            items:
              type: integer
          required: false
          description: (`{INT, INT, INT}`  || `INT` - default `ALL`) Return results from
            specific Sender or array of Senders.
        - in: query
          name: warnings
          schema:
            type: string
          required: false
          description: (`ALL` || `WITH` || `WITHOUT` - default `ALL`) If `WITH` only
            return results with Warning(s). If `WITHOUT` only results without
            Warning(s).
        - in: query
          name: errors
          schema:
            type: string
          required: false
          description: (`ALL` || `WITH` || `WITHOUT` - default `ALL`) If `WITH` only
            return results with Error(s). If `WITHOUT` only results without
            Error(s).
        - in: query
          name: receipts
          schema:
            type: string
          required: false
          description: (`ALL` || `WITH` || `WITHOUT` - default `ALL`) If `WITH` only
            return results with Receipt(s). If `WITHOUT` only results without
            Receipt(s).
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/History"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /submissions/submission/{actionid}:
    get:
      description: Return a single receive action, and its received report(s), or an
        error report.
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: actionid
          schema:
            type: string
          required: true
          description: The `actionID` for a single receiver action.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Submission"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /waters/report/{reportId}/history/etorMetadata:
    get:
      summary: Retrieves ETOR metadata for a sender's report
      description: Fetches the ETOR intermediary's metadata given the sender's report ID.
      operationId: getEtorMetadataForHistory
      parameters:
        - name: reportId
          in: path
          required: true
          description: The unique identifier of the report.
          schema:
            type: string
      responses:
        "200":
          description: Successful retrieval of ETOR metadata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationOutcome"
        "404":
          description: lookup Id not found
        "500":
          description: Internal server error.
  /settings/organizations:
    get:
      description: The settings for all organizations of the system. Must have admin access.
      security:
        - OAuth2:
            - system_admin
        - Server2Server: []
      responses:
        "200":
          description: OK
          headers:
            Last-Modified:
              description: The date and time any setting was modified in GMT.
              example: Wed, 21 Oct 2015 07:28:00 GMT
              required: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organization1"
    head:
      description: Retrieved the last modified for all settings of the system. Must
        have admin access.
      security:
        - OAuth2:
            - system_admin
        - Server2Server: []
      responses:
        "200":
          description: OK
          headers:
            Last-Modified:
              description: The Last-Modified response HTTP header contains the date and time
                any setting was modified.
              example: Wed, 21 Oct 2015 07:28:00 GMT
              required: false
              schema:
                type: string
  /settings/organizations/{organizationName}:
    get:
      description: A single organization settings
      security:
        - OAuth2:
            - user
        - Server2Server: []
      parameters:
        - in: path
          schema:
            type: string
          required: true
          name: organizationName
          description: The name of the organization
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization1"
    put:
      description: Create or update the direct settings associated with an organization
      security:
        - OAuth2:
            - system_admin
        - Server2Server: []
      parameters:
        - in: path
          required: true
          schema:
            type: string
          name: organizationName
          description: The name of the organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization1"
      responses:
        "200":
          description: OK, the organization setting was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization1"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization1"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
    delete:
      description: Delete an organization (and the associated receivers and senders)
      security:
        - OAuth2:
            - system_admin
        - Server2Server: []
      parameters:
        - in: path
          required: true
          schema:
            type: string
          name: organizationName
          description: The name of the organization
      responses:
        "200":
          description: OK, the organization setting was deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization1"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /settings/organizations/{organizationName}/receivers:
    get:
      description: A list of receivers and their current settings
      security:
        - OAuth2:
            - user
        - Server2Server: []
      parameters:
        - in: path
          name: organizationName
          description: Fetch receivers with this organization name
          schema:
            type: string
          required: true
          example: az-phd
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Receiver"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /settings/organizations/{organizationName}/receivers/{receiverName}:
    get:
      description: The settings of a single of receiver
      security:
        - OAuth2:
            - user
        - Server2Server: []
      parameters:
        - in: path
          name: organizationName
          description: Create receivers under this organization name
          schema:
            type: string
          required: true
          example: az-phd
        - in: path
          name: receiverName
          description: The name of the receiver
          schema:
            type: string
          required: true
          example: elr
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Receiver"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
    put:
      description: Update a single receiver
      security:
        - OAuth2:
            - org_admin
        - Server2Server: []
      parameters:
        - in: path
          name: organizationName
          description: Create receivers under this organization name
          schema:
            type: string
          required: true
          example: az-phd
        - in: path
          name: receiverName
          description: The name of the receiver
          schema:
            type: string
          required: true
          example: elr
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Receiver"
      responses:
        "200":
          description: OK, the receiver setting was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Receiver"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Receiver"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
    delete:
      description: Delete a receiver
      security:
        - OAuth2:
            - org_admin
        - Server2Server: []
      parameters:
        - in: path
          name: organizationName
          description: the organization name
          schema:
            type: string
          required: true
          example: az-phd
        - in: path
          name: receiverName
          description: The name of the receiver
          schema:
            type: string
          required: true
          example: elr
      responses:
        "200":
          description: OK, the receiver was deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Receiver"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /settings/organizations/{organizationName}/senders:
    get:
      description: A list of senders
      security:
        - OAuth2:
            - user
        - Server2Server: []
      parameters:
        - in: path
          name: organizationName
          description: Fetch senders with this organization name
          schema:
            type: string
          required: true
          example: az-phd
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sender"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /settings/organizations/{organizationName}/senders/{senderName}:
    get:
      description: The settings of a single of sender
      security:
        - OAuth2:
            - user
        - Server2Server: []
      parameters:
        - in: path
          name: organizationName
          description: Fetch senders with this organization name
          schema:
            type: string
          required: true
          example: az-phd
        - in: path
          name: senderName
          description: The name of a sender to the data hub
          schema:
            type: string
          required: true
          example: default
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sender"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
    put:
      description: Update a single sender
      security:
        - OAuth2:
            - org_admin
        - Server2Server: []
      parameters:
        - in: path
          name: organizationName
          description: Fetch senders with this organization name
          schema:
            type: string
          required: true
          example: az-phd
        - in: path
          name: senderName
          description: The name of a sender to the data hub
          schema:
            type: string
          required: true
          example: default
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Sender"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sender"
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sender"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
    delete:
      description: Delete a sender
      security:
        - OAuth2:
            - org_admin
        - Server2Server: []
      parameters:
        - in: path
          name: organizationName
          description: the organization name
          schema:
            type: string
          required: true
          example: az-phd
        - in: path
          name: senderName
          description: The name of a sender to the data hub
          schema:
            type: string
          required: true
          example: default
      responses:
        "200":
          description: OK, the sender was deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sender"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /waters/org/{organizationName}/senders/revs/{settingType}:
    get:
      description: The full history of setting revisions for all settings of a given type.
      security:
        - OAuth2:
            - user
        - Server2Server: []
      parameters:
        - in: path
          name: organizationName
          description: Fetch senders with this organization name
          schema:
            type: string
          required: true
          example: az-phd
        - in: path
          name: settingType
          description: Type of setting
          schema:
            type: string
            enum:
              - organization
              - sender
              - receiver
          required: true
          example: organization
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingRevisions"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /sender-files:
    get:
      description: For a specified report, trace each item's ancestry and retrieve the
        source files submitted by senders.
      security:
        - OAuth2:
            - system_admin
      parameters:
        - in: query
          name: report-id
          description: Report-id (uuid format) of the receiver report
          required: false
          schema:
            type: string
        - in: query
          name: report-file-name
          description: File name of the receiver report
          required: false
          schema:
            type: string
        - in: query
          name: offset
          description: The offset into the receiver report for the first item
          required: false
          schema:
            type: integer
        - in: query
          name: limit
          description: The maximum number of receiver items to retrieve
          required: false
          schema:
            type: integer
        - in: query
          name: only-report-items
          description: Only include items in the sender file that route to the receiver
            report
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: A list of the sender files associated with the specified receiver
            report.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReportFileMessage"
  /requeue/send:
    post:
      description: manually queue up a report to be sent again to one receiver
      security:
        - OAuth2:
            - system_admin
      parameters:
        - name: reportId
          in: query
          description: UUID for the report to resend
          required: true
          schema:
            type: string
            format: uuid
        - name: receiver
          in: query
          description: full name of the receiver to resend the report to
          required: true
          schema:
            type: string
        - name: test
          in: query
          description: if given, includes additional debug messages
          schema:
            type: boolean
      requestBody:
        description: Empty body due to the POST format
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBody"
      responses:
        "200":
          description: text stating how many items in the report will be resent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequeueResponse"
        "400":
          description: bad request
  /reports:
    post:
      summary: Post a report to the data hub
      security:
        - ApiKeyAuth: []
      parameters:
        - in: query
          name: client
          description: The client's name that matches the client name in metadata
          schema:
            type: string
          required: true
          example: simple_report
        - in: query
          name: option
          description: Optional ways to process the request
          required: false
          schema:
            type: string
            enum:
              - ValidatePayload
              - CheckConnections
              - SendImmediately
              - SkipSend
          example: ValidatePayload
        - in: query
          name: default
          description: Dynamic default values for an element. ':' or %3A is used to
            seperate element name and value
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          example: processing_mode_code%3AD
        - in: query
          name: routeTo
          description: A comma separated list of receiver names. Limit the list of
            possible receivers to these receivers.
          required: false
          schema:
            type: array
            items:
              type: string
          example: fl-phd.elr,fl-phd.download
        - in: query
          name: processing
          description: "'sync' or 'async'. defaults to 'sync'. Determines if the incoming
            message will follow the sync or async process"
          required: false
          schema:
            type: string
          example: async
        - in: query
          name: payloadName
          description: Optional string name for the data payload submitted.   Typically a
            filename or other name useful to the sender's
            record-keeping.  Tracked, but not used, by ReportStream.  Must never
            include PII/PHI.
          required: false
          schema:
            type: string
          example: C:/foo/bar/baz/quux/myfile.hl7
      requestBody:
        description: The public health information being routed
        required: true
        content:
          text/csv:
            schema:
              type: string
            example: |-
              header1, header2
              value1, value2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "201":
          description: Created. A report was created, but items may have been rejected.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "400":
          description: Invalid request. No report created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "500":
          description: Internal Server Error
  /metadata/livd:
    get:
      description: get data from LIVD tables
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  description: An organization connected to data hub
                  type: object
                  properties:
                    manufacturer:
                      type: string
                      example: 1drop Inc.
                    model:
                      type: string
                      example: 1copy COVID-19 qPCR Multi Kit
                    vendorAnalyteName:
                      type: string
                      example: SARS-CoV-2 Result Interpretation
                    vendorSpecimenDescription:
                      type: string
                      example:
                        - "anterior nasal swabs (697989009^Anterior nares
                          swab^SCT)\r"
                        - "mid-turbinate nasal swabs(871810001^Mid-turbinate
                          nasal swab^SCT)\r"
                        - "nasopharyngeal swabs (258500001^Nasopharyngeal
                          swab^SCT)\r"
                        - "oropharyngeal swabs (258529004^Throat swab^SCT)\r"
                        - "nasopharyngeal wash (258467004^Nasopharyngeal
                          washings^SCT)\r"
                        - "nasopharyngeal aspirate (258411007^Nasopharyngeal
                          aspirate^SCT)\r"
                        - nasal aspirate (429931000124105^Nasal aspirate
                          specimen^SCT)
                    vendorResultDescription:
                      type: string
                      example:
                        - "Positive (260373001^Detected^SCT)\r"
                        - "Presumptive positive (720735008^Presumptive
                          positive^SCT)\r"
                        - "Negative (260415000^Not detected^SCT)\r"
                        - Invalid (455371000124106^Invalid result^SCT or
                          125154007^Specimen unsatisfactory for evaluation^SCT)
                    testPerformedLoincCode:
                      type: string
                      example: 94500-6
                    testPerformedLoincLongName:
                      type: string
                      example: SARS coronavirus 2 RNA [Presence] in Respiratory specimen by NAA with
                        probe detection
                    testOrderedLoincCode:
                      type: string
                      example: 94531-1
                    testOrderedLoincLongName:
                      type: string
                      example: SARS-CoV-2 (COVID-19) RNA panel - Respiratory specimen by NAA with
                        probe detection
                    vendorComment:
                      type: string
                      example: ""
                    vendorAnalyteCode:
                      type: string
                      example: ""
                    vendorReferenceId:
                      type: string
                      example: ""
                    testKitNameId:
                      type: string
                      example: 1copy COVID-19 qPCR Multi Kit_1drop Inc.
                    testKitNameIdType:
                      type: string
                      example: EUA
                    equipmentUid:
                      type: string
                      example: Rotor-Gene Q 5plex HRM_QIAGEN GmbH
                    equipmentUidType:
                      type: string
                      example: MNI
                    component:
                      type: string
                      example: SARS coronavirus 2 RNA
                    property:
                      type: string
                      example: PrThr
                    time:
                      type: string
                      example: Pt
                    system:
                      type: string
                      example: Respiratory
                    scale:
                      type: string
                      example: Ord
                    method:
                      type: string
                      example: Probe.amp.tar
                    publicationVersionId:
                      type: string
                      example: "20200519"
                    loincVersionId:
                      type: string
                      example: "2.68"
  /messages:
    get:
      description: Fetch a list of COVID result entries from the
        `covid_result_metadata` table based on a `messageId`, called
        `message_id` on the backend. This endpoint will typically return one
        result but `message_id` is not guaranteed to be unique, so multiple
        results can be returned.
      security:
        - OAuth2:
            - system_admin
        - PreviewOAuth2:
            - system_admin
      parameters:
        - name: messageId
          in: query
          description: The `message_id` of a COVID result message.
          required: true
          schema:
            type: string
          example: 436147
      responses:
        "200":
          description: a list of messages
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "400":
          description: missing messageId parameter or a bad request
        "401":
          description: unauthorized
  /message/{id}:
    get:
      description: Return details about a particular COVID test result message from
        the covid_result_metadata table.
      security:
        - OAuth2:
            - user
        - PreviewOAuth2:
            - user
      parameters:
        - name: id
          in: path
          description: The unique identifier of a COVID test result message, that being
            the `covid_results_metadata_id` PK of the `covid_result_metadata`
            table.
          required: true
          schema:
            type: string
          example: 1
      responses:
        "200":
          description: The message details related to COVID test result message.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "400":
          description: bad request
        "401":
          description: unauthorized
  /lookuptables/list:
    get:
      description: Fetch the list lookup tables
      security:
        - OAuth2:
            - user
      parameters:
        - name: showInactive
          in: query
          description: Set to true to include inactive tables
          schema:
            type: boolean
      responses:
        "200":
          description: The list of tables with version information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableVersionArray"
        "400":
          description: if there was an error fetching the list of tables
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
  /lookuptables/{tableName}:
    post:
      description: Create a new version of a lookup table.  First versions of a table
        are automatically activated.
      security:
        - OAuth2:
            - system_admin
      parameters:
        - name: tableName
          in: path
          description: Name of new lookup table
          required: true
          schema:
            type: string
      requestBody:
        description: An array of objects that list the table's rows.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DynamicTableRows"
      responses:
        "200":
          description: The table was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableVersionInfo"
        "400":
          description: if there was an error creating the table
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
  /lookuptables/{tableName}/{tableVersion}/content:
    get:
      description: Fetch the contents of a specific version of a table
      security:
        - OAuth2:
            - user
      parameters:
        - name: tableName
          in: path
          description: Name of lookup table
          required: true
          schema:
            type: string
        - name: tableVersion
          in: path
          description: Version of specified table
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The table contents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DynamicTableRows"
        "400":
          description: if there was an error fetching the table data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
        "404":
          description: The table name and/or version was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
  /lookuptables/{tableName}/content:
    get:
      description: Fetch the contents of the active version of a table
      security:
        - OAuth2:
            - user
      parameters:
        - name: tableName
          in: path
          description: Name of lookup table
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The table contents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DynamicTableRows"
        "400":
          description: if there was an error fetching the table data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
        "404":
          description: The table name was not found, or there was no active version of
            that table.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
  /lookuptables/{tableName}/{tableVersion}/info:
    get:
      description: Fetch the version information of a specific version of a table
      security:
        - OAuth2:
            - user
      parameters:
        - name: tableName
          in: path
          description: Name of lookup table
          required: true
          schema:
            type: string
        - name: tableVersion
          in: path
          description: Version of specified table
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The table version information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableVersionInfo"
        "400":
          description: if there was an error fetching the table data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
        "404":
          description: The table name and/or version was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
  /lookuptables/{tableName}/{tableVersion}/activate:
    put:
      description: Activate a specific version of a table.  This endpoint does not
        take a request body.
      security:
        - OAuth2:
            - system_admin
      parameters:
        - name: tableName
          in: path
          description: Name of lookup table
          required: true
          schema:
            type: string
        - name: tableVersion
          in: path
          description: Version of specified table
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The table version information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableVersionInfo"
        "400":
          description: if there was an error fetching the table data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
        "404":
          description: The table name and/or version was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMsg"
  /email-registered:
    post:
      description: send a registration email to an organization
      security:
        - OAuth2:
            - user
      responses:
        "200":
          description: success call
  /email-schedule:
    post:
      description: create email schedule
      security:
        - OAuth2:
            - user
      responses:
        "200":
          description: success call
  /email-schedule/{scheduleId}:
    delete:
      description: delete an inactive email schedule
      security:
        - OAuth2:
            - user
      responses:
        "200":
          description: success call
  /v1/receivers/{receiverFullName}/deliveries:
    post:
      operationId: searchReceiverDeliveries
      description: Returns a list of reports that have been delivered to the receiver
      security:
        - OAuth2:
            - user
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: receiverFullName
          schema:
            type: string
          required: true
          description: The full name of the receiver to fetch submitters for
      requestBody:
        description: The search parameters for the request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryApiSearch"
      responses:
        "200":
          description: The results from running the search
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryApiSearchResults"
        "400":
          description: The search request could not be parsed
        "401":
          description: Unauthorized
        "404":
          description: The receiver could not be found
  /waters/report/{reportId}/delivery/etorMetadata:
    get:
      summary: Retrieves ETOR metadata for a recipient's report
      description: Fetches the ETOR intermediary's metadata given the recipient's report ID.
      operationId: getDeliveryEtorMetadata
      parameters:
        - name: reportId
          in: path
          required: true
          description: The unique identifier of the report.
          schema:
            type: string
      responses:
        "200":
          description: Successful retrieval of ETOR metadata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationOutcome"
        "404":
          description: lookup Id not found
        "500":
          description: Internal server error.
  /v1/receivers/{receiverFullName}/deliveries/submitters/search:
    post:
      operationId: searchReceiverSubmitters
      description: Return a list of all the providers, facilities and senders that
        have sent results to a receiver
      security:
        - OAuth2:
            - user
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: receiverFullName
          schema:
            type: string
          required: true
          description: The full name of the receiver to fetch submitters for
      requestBody:
        description: The search parameters for the request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitterApiSearch"
      responses:
        "200":
          description: The results from running the search
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmitterApiSearchResults"
        "400":
          description: The search request could not be parsed
        "401":
          description: Unauthorized
        "404":
          description: The receiver could not be found
  /saveTestData:
    get:
      description: test data extraction api
      security:
        - OAuth2:
            - user
      responses:
        "200":
          description: success call
  /check:
    get:
      description: checks a single remote connection
      security:
        - OAuth2:
            - user
      responses:
        "200":
          description: success call
  /checkreceiver/org/{orgName}/receiver/{receiverName}:
    post:
      description: Load Receiver Settings and verifies connecting to the external
        server works.
      security:
        - OAuth2:
            - org_admin
            - system_admin
      parameters:
        - name: orgName
          in: path
          description: Name of Organization.
          required: true
          schema:
            type: string
        - name: receiverName
          in: path
          description: Logical name of the Receiver Setting
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The table contents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckReceiverResponse"
        "404":
          description: The orgName or receiverName  was not found
          content:
            text/plain:
              schema:
                type: string
                example: User FAILED authorized for endpoint
  /settings/organizations/{organizationName}/public-keys/{scope}/{kid}:
    delete:
      description: Deletes a key
      security:
        - OAuth2:
            - org_admin
            - system_admin
      parameters:
        - in: path
          schema:
            type: string
          required: true
          name: organizationName
          description: The name of the organization
        - in: path
          schema:
            type: string
          required: true
          name: scope
          description: The scope the key to be deleted is associated with
        - in: path
          schema:
            type: string
          required: true
          name: kid
          description: The unique identifier of the key to be deleted
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeysResponse"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /settings/organizations/{organizationName}/public-keys:
    get:
      description: Retrieves all of the API public keys for the organization
      security:
        - OAuth2:
            - org_admin
            - system_admin
      parameters:
        - in: path
          schema:
            type: string
          required: true
          name: organizationName
          description: The name of the organization
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeysResponse"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
    post:
      description: Adds a key for a specific scope.
      security:
        - OAuth2:
            - system_admin
      parameters:
        - in: path
          required: true
          name: organizationName
          description: The name of the organization storing this key
          schema:
            type: string
        - in: query
          name: scope
          required: true
          description: The scope for this key (currently only orgName.*.report)
          schema:
            type: string
        - in: query
          name: kid
          required: true
          description: The key id identifying the public key; must be unique for the keys
            already added for the scope
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeysResponse"
        "400":
          description: Bad Request. Returned if the scope is not valid, the kid already
            exists for the scope or the POST body was empty
        "401":
          description: Unauthorized
        "404":
          description: Not Found
  /adm/getsendfailures:
    get:
      operationId: getSendFailures
      description: Returns list of recent failed report-forwarding sends. Used to
        resend failures. Prime admin only.
      security:
        - OAuth2:
            - system_admin
      parameters:
        - in: query
          name: days_to_show
          description: Number of days back from today include in results
          schema:
            type: integer
          required: false
          example: days_to_show=3
      responses:
        "200":
          description: OK
          headers:
            Last-Modified:
              description: The date and time any setting was modified in GMT.
              example: Wed, 21 Oct 2015 07:28:00 GMT
              required: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListSendFailures"
  /adm/getresend:
    get:
      operationId: getResend
      description: Returns list of recent failed report-forwarding sends. Used to
        resend failures. Prime admin only.
      security:
        - OAuth2:
            - system_admin
      parameters:
        - in: query
          name: days_to_show
          description: Number of days back from today include in results
          schema:
            type: integer
          required: false
          example: days_to_show=3
      responses:
        "200":
          description: OK
          headers:
            Last-Modified:
              description: The date and time any setting was modified in GMT.
              example: Wed, 21 Oct 2015 07:28:00 GMT
              required: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListResends"
  /adm/listreceiversconnstatus:
    get:
      operationId: getListReceiversConnStatus
      description: Get recent report-forward sends across all orgs. Prime admin only.
      security:
        - OAuth2:
            - system_admin
      parameters:
        - name: start_date
          in: query
          description: Date/time for the start range of matches
          schema:
            type: string
            format: date-time
          required: true
          example: start_date=2022-07-04T00:46:58.708Z
        - name: end_date
          in: query
          description: Optional date/time for the end range of matches
          schema:
            type: string
            format: date-time
          required: false
          example: end_date=2022-07-04T00:46:58.708Z
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReceiversConnStatusResponse"
components:
  schemas:
    HttpResponseMessage:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        body:
          type: object
        status:
          $ref: "#/components/schemas/HttpStatusType"
    HttpStatusType:
      type: object
    HttpRequestMessageString:
      type: object
      properties:
        queryParameters:
          type: object
          additionalProperties:
            type: string
        body:
          type: string
        httpMethod:
          type: string
          enum:
            - GET
            - HEAD
            - POST
            - PUT
            - DELETE
            - CONNECT
            - OPTIONS
            - TRACE
            - PATCH
        headers:
          type: object
          additionalProperties:
            type: string
        uri:
          type: string
          format: uri
    Resource:
      type: object
      discriminator:
        propertyName: resourceType
      properties:
        resourceType:
          type: string
          enum:
            - Account
            - ActivityDefinition
            - AdministrableProductDefinition
            - AdverseEvent
            - AllergyIntolerance
            - Appointment
            - AppointmentResponse
            - AuditEvent
            - Basic
            - Binary
            - BiologicallyDerivedProduct
            - BodyStructure
            - Bundle
            - CapabilityStatement
            - CarePlan
            - CareTeam
            - CatalogEntry
            - ChargeItem
            - ChargeItemDefinition
            - Citation
            - Claim
            - ClaimResponse
            - ClinicalImpression
            - ClinicalUseDefinition
            - CodeSystem
            - Communication
            - CommunicationRequest
            - CompartmentDefinition
            - Composition
            - ConceptMap
            - Condition
            - Consent
            - Contract
            - Coverage
            - CoverageEligibilityRequest
            - CoverageEligibilityResponse
            - DetectedIssue
            - Device
            - DeviceDefinition
            - DeviceMetric
            - DeviceRequest
            - DeviceUseStatement
            - DiagnosticReport
            - DocumentManifest
            - DocumentReference
            - DomainResource
            - Encounter
            - Endpoint
            - EnrollmentRequest
            - EnrollmentResponse
            - EpisodeOfCare
            - EventDefinition
            - Evidence
            - EvidenceReport
            - EvidenceVariable
            - ExampleScenario
            - ExplanationOfBenefit
            - FamilyMemberHistory
            - Flag
            - Goal
            - GraphDefinition
            - Group
            - GuidanceResponse
            - HealthcareService
            - ImagingStudy
            - Immunization
            - ImmunizationEvaluation
            - ImmunizationRecommendation
            - ImplementationGuide
            - Ingredient
            - InsurancePlan
            - Invoice
            - Library
            - Linkage
            - List
            - Location
            - ManufacturedItemDefinition
            - Measure
            - MeasureReport
            - Media
            - Medication
            - MedicationAdministration
            - MedicationDispense
            - MedicationKnowledge
            - MedicationRequest
            - MedicationStatement
            - MedicinalProductDefinition
            - MessageDefinition
            - MessageHeader
            - MolecularSequence
            - NamingSystem
            - NutritionOrder
            - NutritionProduct
            - Observation
            - ObservationDefinition
            - OperationDefinition
            - OperationOutcome
            - Organization
            - OrganizationAffiliation
            - PackagedProductDefinition
            - Parameters
            - Patient
            - PaymentNotice
            - PaymentReconciliation
            - Person
            - PlanDefinition
            - Practitioner
            - PractitionerRole
            - Procedure
            - Provenance
            - Questionnaire
            - QuestionnaireResponse
            - RegulatedAuthorization
            - RelatedPerson
            - RequestGroup
            - ResearchDefinition
            - ResearchElementDefinition
            - ResearchStudy
            - ResearchSubject
            - Resource
            - RiskAssessment
            - Schedule
            - SearchParameter
            - ServiceRequest
            - Slot
            - Specimen
            - SpecimenDefinition
            - StructureDefinition
            - StructureMap
            - Subscription
            - SubscriptionStatus
            - SubscriptionTopic
            - Substance
            - SubstanceDefinition
            - SupplyDelivery
            - SupplyRequest
            - Task
            - TerminologyCapabilities
            - TestReport
            - TestScript
            - ValueSet
            - VerificationResult
            - VisionPrescription
        id:
          type: string
          pattern: "[A-Za-z0-9\\-\\.]{1,64}"
          description: The logical id of the resource, as used in the URL for the
            resource. Once assigned, this value never changes.
        meta:
          $ref: "#/components/schemas/Meta"
          description: The metadata about the resource. This is content that is maintained
            by the infrastructure. Changes to the content might not always be
            associated with version changes to the resource.
        implicitRules:
          type: string
          pattern: \\S*
          description: A reference to a set of rules that were followed when the resource
            was constructed, and which must be understood when processing the
            content. Often, this is a reference to an implementation guide that
            defines the special rules along with other profiles etc.
        language:
          type: string
          pattern: "[^\\s]+(\\s[^\\s]+)*"
          description: The base language in which the resource is written.
      required:
        - resourceType
    DomainResource:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          properties:
            text:
              $ref: "#/components/schemas/Narrative"
              description: A human&ndash;readable narrative that contains a summary of the
                resource and can be used to represent the content of the
                resource to a human. The narrative need not encode all the
                structured data, but is required to contain sufficient detail to
                make it "clinically safe" for a human to just read the
                narrative. Resource definitions may define what content should
                be represented in the narrative to ensure clinical safety.
            contained:
              type: array
              items:
                $ref: "#/components/schemas/Resource"
                description: These resources do not have an independent existence apart from the
                  resource that contains them &ndash; they cannot be identified
                  independently, and nor can they have their own independent
                  transaction scope.
            extension:
              type: array
              items:
                $ref: "#/components/schemas/Extension"
                description: May be used to represent additional information that is not part of
                  the basic definition of the resource. To make the use of
                  extensions safe and manageable, there is a strict set of
                  governance  applied to the definition and use of extensions.
                  Though any implementer can define an extension, there is a set
                  of requirements that SHALL be met as part of the definition of
                  the extension.
            modifierExtension:
              type: array
              items:
                $ref: "#/components/schemas/Extension"
                description: >-
                  May be used to represent additional information that is not
                  part of the basic definition of the resource and that modifies
                  the understanding of the element that contains it and/or the
                  understanding of the containing element's descendants. Usually
                  modifier elements provide negation or qualification. To make
                  the use of extensions safe and manageable, there is a strict
                  set of governance applied to the definition and use of
                  extensions. Though any implementer is allowed to define an
                  extension, there is a set of requirements that SHALL be met as
                  part of the definition of the extension. Applications
                  processing a resource are required to check for modifier
                  extensions.


                  Modifier extensions SHALL NOT change the meaning of any
                  elements on Resource or DomainResource (including cannot
                  change the meaning of modifierExtension itself).
    Bundle:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: A persistent identifier for the bundle that won't change as a
                bundle is copied from server to server.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the purpose of this bundle &ndash; how it is intended to
                be used.
            timestamp:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The date/time that the bundle was assembled &ndash; i.e. when the
                resources were placed in the bundle.
            total:
              type: integer
              format: int32
              description: If a set of search matches, this is the total number of entries of
                type 'match' across all pages in the search.  It does not
                include search.mode = 'include' or 'outcome' entries and it does
                not provide a count of the number of entries in the Bundle.
            link:
              type: array
              items:
                $ref: "#/components/schemas/Bundle_Link"
                description: A series of links that provide context to this bundle.
            entry:
              type: array
              items:
                $ref: "#/components/schemas/Bundle_Entry"
                description: An entry in a bundle resource &ndash; will either contain a
                  resource or information about a resource (transactions and
                  history only).
            signature:
              $ref: "#/components/schemas/Signature"
              description: Digital Signature &ndash; base64 encoded. XML&ndash;DSig or a JWT.
          required:
            - type
      example:
        resourceType: Bundle
        meta:
          tag:
            - code: ibm/minimal
        _type:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Bundle_Link:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            relation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A name which details the functional use for this link &ndash; see
                [http://www.iana.org/assignments/link&ndash;relations/link&ndash;relations.xhtml#link&ndash;relations&ndash;1](http://www.iana.org/assignments/link&ndash;relations/link&ndash;relations.xhtml#link&ndash;relations&ndash;1).
            url:
              type: string
              pattern: \\S*
              description: The reference details for the link.
          required:
            - relation
            - url
    Bundle_Entry:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            link:
              type: array
              items:
                $ref: "#/components/schemas/Bundle_Link"
                description: A series of links that provide context to this entry.
            fullUrl:
              type: string
              pattern: \\S*
              description: >-
                The Absolute URL for the resource.  The fullUrl SHALL NOT
                disagree with the id in the resource &ndash; i.e. if the fullUrl
                is not a urn:uuid, the URL shall be version&ndash;independent
                URL consistent with the Resource.id. The fullUrl is a version
                independent reference to the resource. The fullUrl element SHALL
                have a value except that: 

                * fullUrl can be empty on a POST (although it does not need to
                when specifying a temporary id for reference in the bundle)

                * Results from operations might involve resources that are not
                identified.
            resource:
              $ref: "#/components/schemas/Resource"
              description: The Resource for the entry. The purpose/meaning of the resource is
                determined by the Bundle.type.
            search:
              $ref: "#/components/schemas/Bundle_Entry_Search"
              description: Information about the search process that lead to the creation of
                this entry.
            request:
              $ref: "#/components/schemas/Bundle_Entry_Request"
              description: Additional information about how this entry should be processed as
                part of a transaction or batch.  For history, it shows how the
                entry was processed to create the version contained in the
                entry.
            response:
              $ref: "#/components/schemas/Bundle_Entry_Response"
              description: Indicates the results of processing the corresponding 'request'
                entry in the batch or transaction being responded to or what the
                results of an operation where when returning history.
    Bundle_Entry_Request:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            method:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: In a transaction or batch, this is the HTTP action to be executed
                for this entry. In a history bundle, this indicates the HTTP
                action that occurred.
            url:
              type: string
              pattern: \\S*
              description: The URL for this entry, relative to the root (the address to which
                the request is posted).
            ifNoneMatch:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: If the ETag values match, return a 304 Not Modified status. See the
                API documentation for ["Conditional Read"](http.html#cread).
            ifModifiedSince:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: Only perform the operation if the last updated date matches. See
                the API documentation for ["Conditional Read"](http.html#cread).
            ifMatch:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Only perform the operation if the Etag value matches. For more
                information, see the API section ["Managing Resource
                Contention"](http.html#concurrency).
            ifNoneExist:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Instruct the server not to perform the create if a specified
                resource already exists. For further information, see the API
                documentation for ["Conditional Create"](http.html#ccreate).
                This is just the query portion of the URL &ndash; what follows
                the "?" (not including the "?").
          required:
            - method
            - url
    Bundle_Entry_Response:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            status:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The status code returned by processing this entry. The status SHALL
                start with a 3 digit HTTP code (e.g. 404) and may contain the
                standard HTTP description associated with the status code.
            location:
              type: string
              pattern: \\S*
              description: The location header created by processing this operation, populated
                if the operation returns a location.
            etag:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The Etag for the resource, if the operation for the entry produced
                a versioned resource (see [Resource Metadata and
                Versioning](http.html#versioning) and [Managing Resource
                Contention](http.html#concurrency)).
            lastModified:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The date/time that the resource was modified on the server.
            outcome:
              $ref: "#/components/schemas/Resource"
              description: An OperationOutcome containing hints and warnings produced as part
                of processing this entry in a batch or transaction.
          required:
            - status
    Bundle_Entry_Search:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Why this entry is in the result set &ndash; whether it's included
                as a match or because of an _include requirement, or to convey
                information or warning information about the search process.
            score:
              type: number
              description: When searching, the server's search ranking score for the entry.
    CapabilityStatement:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this capability statement
                when it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this capability statement is
                (or will be) published. This URL can be the target of a
                canonical reference. It SHALL remain the same when the
                capability statement is stored on different servers.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                capability statement when it is referenced in a specification,
                model, design or instance. This is an arbitrary value managed by
                the capability statement author and is not expected to be
                globally unique. For example, it might be a timestamp (e.g.
                yyyymmdd) if a managed version is not available. There is also
                no expectation that versions can be placed in a lexicographical
                sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the capability statement. This
                name should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the capability
                statement.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this capability statement. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this capability statement is
                authored for testing purposes (or
                education/evaluation/marketing) and is not intended to be used
                for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the capability statement was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                capability statement changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                capability statement.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the capability
                statement from a consumer's perspective. Typically, this is used
                when the capability statement describes a desired rather than an
                actual solution, for example as a formal expression of
                requirements as part of an RFP.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate capability
                  statement instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the capability statement is
                  intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this capability statement is needed and why it
                has been designed as it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the capability statement and/or
                its contents. Copyright statements are generally legal
                restrictions on the use and publishing of the capability
                statement.
            kind:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The way that this statement is intended to be used, to describe an
                actual running instance of software, a particular product (kind,
                not instance of software) or a class of implementation (e.g. a
                desired purchase).
            instantiates:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Reference to a canonical URL of another CapabilityStatement that
                  this software implements. This capability statement is a
                  published API description that corresponds to a business
                  service. The server may actually implement a subset of the
                  capability statement it claims to implement, so the capability
                  statement must specify the full capability details.
            imports:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Reference to a canonical URL of another CapabilityStatement that
                  this software adds to. The capability statement automatically
                  includes everything in the other statement, and it is not
                  duplicated, though the server may repeat the same resources,
                  interactions and operations to add additional details to them.
            software:
              $ref: "#/components/schemas/CapabilityStatement_Software"
              description: Software that is covered by this capability statement.  It is used
                when the capability statement describes the capabilities of a
                particular software version, independent of an installation.
            implementation:
              $ref: "#/components/schemas/CapabilityStatement_Implementation"
              description: Identifies a specific implementation instance that is described by
                the capability statement &ndash; i.e. a particular installation,
                rather than the capabilities of a software program.
            fhirVersion:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The version of the FHIR specification that this CapabilityStatement
                describes (which SHALL be the same as the FHIR version of the
                CapabilityStatement itself). There is no default value.
            format:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: A list of the formats supported by this implementation using their
                  content types.
              minItems: 1
            patchFormat:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: A list of the patch formats supported by this implementation using
                  their content types.
            implementationGuide:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A list of implementation guides that the server does (or should)
                  support in their entirety.
            rest:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Rest"
                description: A definition of the restful capabilities of the solution, if any.
            messaging:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Messaging"
                description: A description of the messaging capabilities of the solution.
            document:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Document"
                description: A document definition.
          required:
            - status
            - date
            - kind
            - fhirVersion
            - format
      example:
        resourceType: CapabilityStatement
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _date:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _kind:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _fhirVersion:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        format:
          - null
        _format:
          - extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
    CapabilityStatement_Software:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Name the software is known by.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The version identifier for the software covered by this statement.
            releaseDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date this version of the software was released.
          required:
            - name
    CapabilityStatement_Implementation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Information about the specific installation that this capability
                statement relates to.
            url:
              type: string
              pattern: \\S*
              description: An absolute base URL for the implementation.  This forms the base
                for REST interfaces as well as the mailbox and document
                interfaces.
            custodian:
              $ref: "#/components/schemas/Reference"
              description: The organization responsible for the management of the instance and
                oversight of the data on the server at the specified URL.
          required:
            - description
    CapabilityStatement_Rest:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identifies whether this portion of the statement is describing the
                ability to initiate or receive restful operations.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Information about the system's restful capabilities that apply
                across all applications, such as security.
            security:
              $ref: "#/components/schemas/CapabilityStatement_Rest_Security"
              description: Information about security implementation from an interface
                perspective &ndash; what a client needs to know.
            resource:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Rest_Resource"
                description: A specification of the restful capabilities of the solution for a
                  specific resource type.
            interaction:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Rest_Interaction"
                description: A specification of restful operations supported by the system.
            searchParam:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Rest_Resource_SearchParam"
                description: Search parameters that are supported for searching all resources
                  for implementations to support and/or make use of &ndash;
                  either references to ones defined in the specification, or
                  additional ones defined for/by the implementation.
            operation:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Rest_Resource_Operation"
                description: Definition of an operation or a named query together with its
                  parameters and their meaning and type.
            compartment:
              type: array
              items:
                type: string
                pattern: \\S*
                description: An absolute URI which is a reference to the definition of a
                  compartment that the system supports. The reference is to a
                  CompartmentDefinition resource by its canonical URL .
          required:
            - mode
    CapabilityStatement_Rest_Security:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            cors:
              type: boolean
              description: Server adds CORS headers when responding to requests &ndash; this
                enables Javascript applications to use the server.
            service:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Types of security services that are supported/required by the
                  system.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: General description of how security works.
    CapabilityStatement_Rest_Resource:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A type of resource exposed via the restful interface.
            profile:
              type: string
              pattern: \\S*
              description: A specification of the profile that describes the solution's
                overall support for the resource, including any constraints on
                cardinality, bindings, lengths or other limitations. See further
                discussion in [Using
                Profiles](profiling.html#profile&ndash;uses).
            supportedProfile:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A list of profiles that represent different use cases supported by
                  the system. For a server, "supported by the system" means the
                  system hosts/produces a set of resources that are conformant
                  to a particular profile, and allows clients that use its
                  services to search using this profile and to find appropriate
                  data. For a client, it means the system will search by this
                  profile and process data according to the guidance implicit in
                  the profile. See further discussion in [Using
                  Profiles](profiling.html#profile&ndash;uses).
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional information about the resource type used by the system.
            interaction:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Rest_Resource_Interaction"
                description: Identifies a restful operation supported by the solution.
            versioning:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: This field is set to no&ndash;version to specify that the system
                does not support (server) or use (client) versioning for this
                resource type. If this has some other value, the server must at
                least correctly track and populate the versionId
                meta&ndash;property on resources. If the value is
                'versioned&ndash;update', then the server supports all the
                versioning features, including using e&ndash;tags for version
                integrity in the API.
            readHistory:
              type: boolean
              description: A flag for whether the server is able to return past versions as
                part of the vRead operation.
            updateCreate:
              type: boolean
              description: A flag to indicate that the server allows or needs to allow the
                client to create new identities on the server (that is, the
                client PUTs to a location where there is no existing resource).
                Allowing this operation means that the server allows the client
                to create new identities on the server.
            conditionalCreate:
              type: boolean
              description: A flag that indicates that the server supports conditional create.
            conditionalRead:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code that indicates how the server supports conditional read.
            conditionalUpdate:
              type: boolean
              description: A flag that indicates that the server supports conditional update.
            conditionalDelete:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code that indicates how the server supports conditional delete.
            referencePolicy:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: A set of flags that defines how references are supported.
            searchInclude:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: A list of _include values supported by the server.
            searchRevInclude:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: A list of _revinclude (reverse include) values supported by the
                  server.
            searchParam:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Rest_Resource_SearchParam"
                description: Search parameters for implementations to support and/or make use of
                  &ndash; either references to ones defined in the
                  specification, or additional ones defined for/by the
                  implementation.
            operation:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Rest_Resource_Operation"
                description: Definition of an operation or a named query together with its
                  parameters and their meaning and type. Consult the definition
                  of the operation for details about how to invoke the
                  operation, and the parameters.
          required:
            - type
    CapabilityStatement_Rest_Resource_Interaction:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Coded identifier of the operation, supported by the system
                resource.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Guidance specific to the implementation of this operation, such as
                'delete is a logical delete' or 'updates are only allowed with
                version id' or 'creates permitted from pre&ndash;authorized
                certificates only'.
          required:
            - code
    CapabilityStatement_Rest_Resource_SearchParam:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the search parameter used in the interface.
            definition:
              type: string
              pattern: \\S*
              description: An absolute URI that is a formal reference to where this parameter
                was first defined, so that a client can be confident of the
                meaning of the search parameter (a reference to
                [SearchParameter.url](searchparameter&ndash;definitions.html#SearchParameter.url)).
                This element SHALL be populated if the search parameter refers
                to a SearchParameter defined by the FHIR core specification or
                externally defined IGs.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of value a search parameter refers to, and how the content
                is interpreted.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: This allows documentation of any distinct behaviors about how the
                search parameter is used.  For example, text matching
                algorithms.
          required:
            - name
            - type
    CapabilityStatement_Rest_Resource_Operation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the operation or query. For an operation, this is the
                name  prefixed with $ and used in the URL. For a query, this is
                the name used in the _query parameter when the query is called.
            definition:
              type: string
              pattern: \\S*
              description: Where the formal definition can be found. If a server references
                the base definition of an Operation (i.e. from the specification
                itself such as
                ```http://hl7.org/fhir/OperationDefinition/ValueSet&ndash;expand```),
                that means it supports the full capabilities of the operation
                &ndash; e.g. both GET and POST invocation.  If it only supports
                a subset, it must define its own custom
                [OperationDefinition](operationdefinition.html#) with a 'base'
                of the original OperationDefinition.  The custom definition
                would describe the specific subset of functionality supported.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Documentation that describes anything special about the operation
                behavior, possibly detailing different behavior for system, type
                and instance&ndash;level invocation of the operation.
          required:
            - name
            - definition
    CapabilityStatement_Rest_Interaction:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Coded identifier of the operation, supported by the system
                resource.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Guidance specific to the implementation of this operation, such as
                'delete is a logical delete' or 'updates are only allowed with
                version id' or 'creates permitted from pre&ndash;authorized
                certificates only'.
          required:
            - code
    CapabilityStatement_Messaging:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            endpoint:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Messaging_Endpoint"
                description: An endpoint (network accessible address) to which messages and/or
                  replies are to be sent.
            reliableCache:
              type: integer
              format: int32
              description: Length if the receiver's reliable messaging cache in minutes (if a
                receiver) or how long the cache length on the receiver should be
                (if a sender).
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Documentation about the system's messaging capabilities for this
                endpoint not otherwise documented by the capability
                statement.  For example, the process for becoming an authorized
                messaging exchange partner.
            supportedMessage:
              type: array
              items:
                $ref: "#/components/schemas/CapabilityStatement_Messaging_SupportedMessage"
                description: References to message definitions for messages this system can send
                  or receive.
    CapabilityStatement_Messaging_Endpoint:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            protocol:
              $ref: "#/components/schemas/Coding"
              description: A list of the messaging transport protocol(s) identifiers,
                supported by this endpoint.
            address:
              type: string
              pattern: \\S*
              description: The network address of the endpoint. For solutions that do not use
                network addresses for routing, it can be just an identifier.
          required:
            - protocol
            - address
    CapabilityStatement_Messaging_SupportedMessage:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The mode of this event declaration &ndash; whether application is
                sender or receiver.
            definition:
              type: string
              pattern: \\S*
              description: Points to a message definition that identifies the messaging event,
                message structure, allowed responses, etc.
          required:
            - mode
            - definition
    CapabilityStatement_Document:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Mode of this document declaration &ndash; whether an application is
                a producer or consumer.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of how the application supports or uses the specified
                document profile.  For example, when documents are created, what
                action is taken with consumed documents, etc.
            profile:
              type: string
              pattern: \\S*
              description: A profile on the document Bundle that constrains which resources
                are present, and their contents.
          required:
            - mode
            - profile
    OperationOutcome:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            issue:
              type: array
              items:
                $ref: "#/components/schemas/OperationOutcome_Issue"
                description: An error, warning, or information message that results from a
                  system action.
              minItems: 1
          required:
            - issue
      example:
        resourceType: OperationOutcome
        meta:
          tag:
            - code: ibm/minimal
        issue:
          - _severity:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
            _code:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    OperationOutcome_Issue:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            severity:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates whether the issue indicates a variation from successful
                processing.
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Describes the type of the issue. The system that creates an
                OperationOutcome SHALL choose the most applicable code from the
                IssueType value set, and may additional provide its own code for
                the error in the details element.
            details:
              $ref: "#/components/schemas/CodeableConcept"
              description: Additional details about the error. This may be a text description
                of the error or a system code that identifies the error.
            diagnostics:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional diagnostic information about the issue.
            location:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: >-
                  This element is deprecated because it is XML specific. It is
                  replaced by issue.expression, which is format independent, and
                  simpler to parse. 


                  For resource issues, this will be a simple XPath limited to
                  element names, repetition indicators and the default child
                  accessor that identifies one of the elements in the resource
                  that caused this issue to be raised.  For HTTP errors, will be
                  "http." + the parameter name.
            expression:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: A [simple subset of FHIRPath](fhirpath.html#simple) limited to
                  element names, repetition indicators and the default child
                  accessor that identifies one of the elements in the resource
                  that caused this issue to be raised.
          required:
            - severity
            - code
    Parameters:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          properties:
            parameter:
              type: array
              items:
                $ref: "#/components/schemas/Parameters_Parameter"
                description: A parameter passed to or received from the operation.
      example:
        resourceType: Parameters
        meta:
          tag:
            - code: ibm/minimal
    Account:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Unique identifier used to reference the account.  Might or might
                  not be intended for human use (e.g. credit card number).
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates whether the account is presently used/usable or not.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Categorizes the account for reporting and searching purposes.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Name used for the account when displaying it to humans in reports,
                etc.
            subject:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies the entity which incurs the expenses. While the
                  immediate recipients of services or goods might be entities
                  related to the subject, the expenses were ultimately incurred
                  by the subject of the Account.
            servicePeriod:
              $ref: "#/components/schemas/Period"
              description: The date range of services associated with this account.
            coverage:
              type: array
              items:
                $ref: "#/components/schemas/Account_Coverage"
                description: The party(s) that are responsible for covering the payment of this
                  account, and what order should they be applied to the account.
            owner:
              $ref: "#/components/schemas/Reference"
              description: Indicates the service area, hospital, department, etc. with
                responsibility for managing the Account.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Provides additional information about what the account tracks and
                how it is used.
            guarantor:
              type: array
              items:
                $ref: "#/components/schemas/Account_Guarantor"
                description: The parties responsible for balancing the account if other payment
                  options fall short.
            partOf:
              $ref: "#/components/schemas/Reference"
              description: Reference to a parent Account.
          required:
            - status
      example:
        resourceType: Account
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Account_Coverage:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            coverage:
              $ref: "#/components/schemas/Reference"
              description: >-
                The party(s) that contribute to payment (or part of) of the
                charges applied to this account (including self&ndash;pay).


                A coverage may only be responsible for specific types of
                charges, and the sequence of the coverages in the account could
                be important when processing billing.
            priority:
              type: integer
              format: int32
              description: The priority of the coverage in the context of this account.
          required:
            - coverage
    Account_Guarantor:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            party:
              $ref: "#/components/schemas/Reference"
              description: The entity who is responsible.
            onHold:
              type: boolean
              description: A guarantor may be placed on credit hold or otherwise have their
                role temporarily suspended.
            period:
              $ref: "#/components/schemas/Period"
              description: The timeframe during which the guarantor accepts responsibility for
                the account.
          required:
            - party
    Element:
      type: object
      properties:
        id:
          type: string
          pattern: "[A-Za-z0-9\\-\\.]{1,64}"
          description: Unique id for the element within a resource (for internal
            references). This may be any string value that does not contain
            spaces.
        extension:
          type: array
          items:
            $ref: "#/components/schemas/Extension"
            description: May be used to represent additional information that is not part of
              the basic definition of the element. To make the use of extensions
              safe and manageable, there is a strict set of governance  applied
              to the definition and use of extensions. Though any implementer
              can define an extension, there is a set of requirements that SHALL
              be met as part of the definition of the extension.
          example:
            - url: http://example.com
              valueString: text value
    BackboneElement:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            modifierExtension:
              type: array
              items:
                $ref: "#/components/schemas/Extension"
                description: >-
                  May be used to represent additional information that is not
                  part of the basic definition of the element and that modifies
                  the understanding of the element in which it is contained
                  and/or the understanding of the containing element's
                  descendants. Usually modifier elements provide negation or
                  qualification. To make the use of extensions safe and
                  manageable, there is a strict set of governance applied to the
                  definition and use of extensions. Though any implementer can
                  define an extension, there is a set of requirements that SHALL
                  be met as part of the definition of the extension.
                  Applications processing a resource are required to check for
                  modifier extensions.


                  Modifier extensions SHALL NOT change the meaning of any
                  elements on Resource or DomainResource (including cannot
                  change the meaning of modifierExtension itself).
    Address:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            use:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The purpose of this address.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Distinguishes between physical addresses (those you can visit) and
                mailing addresses (e.g. PO Boxes and care&ndash;of addresses).
                Most addresses are both.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Specifies the entire address as it should be displayed e.g. on a
                postal label. This may be provided instead of or as well as the
                specific parts.
            line:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: This component contains the house number, apartment number, street
                  name, street direction,  P.O. Box number, delivery hints, and
                  similar address information.
            city:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the city, town, suburb, village or other community or
                delivery center.
            district:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the administrative area (county).
            state:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Sub&ndash;unit of a country with limited sovereignty in a federally
                organized country. A code may be used if codes are in common use
                (e.g. US 2 letter state codes).
            postalCode:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A postal code designating a region defined by the postal service.
            country:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Country &ndash; a nation as commonly understood or generally
                accepted.
            period:
              $ref: "#/components/schemas/Period"
              description: Time period when address was/is in use.
    Age:
      allOf:
        - $ref: "#/components/schemas/Quantity"
        - type: object
          properties: {}
    Annotation:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            authorReference:
              $ref: "#/components/schemas/Reference"
              description: The individual responsible for making the annotation.
            authorString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The individual responsible for making the annotation.
            time:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Indicates when this particular annotation was made.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The text of the annotation in markdown format.
          required:
            - text
    Attachment:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            contentType:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identifies the type of the data in the attachment and allows a
                method to be chosen to interpret or render the data. Includes
                mime type parameters such as charset where appropriate.
            language:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The human language of the content. The value can be any valid value
                according to BCP 47.
            data:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: The actual data of the attachment &ndash; a sequence of bytes,
                base64 encoded.
            url:
              type: string
              pattern: \\S*
              description: A location where the data can be accessed.
            size:
              type: integer
              format: int32
              description: The number of bytes of data that make up this attachment (before
                base64 encoding, if that is done).
            hash:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: The calculated hash of the data using SHA&ndash;1. Represented
                using base64.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A label or set of text to display in place of the data.
            creation:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date that the attachment was first created.
    CodeableConcept:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            coding:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: A reference to a code defined by a terminology system.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A human language representation of the concept as
                seen/selected/uttered by the user who entered the data and/or
                which represents the intended meaning of the user.
    CodeableReference:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            concept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A reference to a concept &ndash; e.g. the information is identified
                by its general class to the degree of precision found in the
                terminology.
            reference:
              $ref: "#/components/schemas/Reference"
              description: A reference to a resource the provides exact details about the
                information being referenced.
    Coding:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            system:
              type: string
              pattern: \\S*
              description: The identification of the code system that defines the meaning of
                the symbol in the code.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The version of the code system which was used when choosing this
                code. Note that a well&ndash;maintained code system does not
                need the version reported, because the meaning of codes is
                consistent across versions. However this cannot consistently be
                assured, and when the meaning is not guaranteed to be
                consistent, the version SHOULD be exchanged.
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A symbol in syntax defined by the system. The symbol may be a
                predefined code or an expression in a syntax defined by the
                coding system (e.g. post&ndash;coordination).
            display:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A representation of the meaning of the code in the system,
                following the rules of the system.
            userSelected:
              type: boolean
              description: Indicates that this coding was chosen by a user directly &ndash;
                e.g. off a pick list of available items (codes or displays).
    ContactPoint:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            system:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Telecommunications form for contact point &ndash; what
                communications system is required to make use of the contact.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The actual contact point details, in a form that is meaningful to
                the designated communication system (i.e. phone number or email
                address).
            use:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identifies the purpose for the contact point.
            rank:
              type: integer
              format: int32
              description: Specifies a preferred order in which to use a set of contacts.
                ContactPoints with lower rank values are more preferred than
                those with higher rank values.
            period:
              $ref: "#/components/schemas/Period"
              description: Time period when the contact point was/is in use.
    Count:
      allOf:
        - $ref: "#/components/schemas/Quantity"
        - type: object
          properties: {}
    Distance:
      allOf:
        - $ref: "#/components/schemas/Quantity"
        - type: object
          properties: {}
    Duration:
      allOf:
        - $ref: "#/components/schemas/Quantity"
        - type: object
          properties: {}
    HumanName:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            use:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identifies the purpose for this name.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Specifies the entire name as it should be displayed e.g. on an
                application UI. This may be provided instead of or as well as
                the specific parts.
            family:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The part of a name that links to the genealogy. In some cultures
                (e.g. Eritrea) the family name of a son is the first name of his
                father.
            given:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Given name.
            prefix:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Part of the name that is acquired as a title due to academic,
                  legal, employment or nobility status, etc. and that appears at
                  the start of the name.
            suffix:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Part of the name that is acquired as a title due to academic,
                  legal, employment or nobility status, etc. and that appears at
                  the end of the name.
            period:
              $ref: "#/components/schemas/Period"
              description: Indicates the period of time when this name was valid for the named
                person.
    Identifier:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            use:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The purpose of this identifier.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A coded type for the identifier that can be used to determine which
                identifier to use for a specific purpose.
            system:
              type: string
              pattern: \\S*
              description: Establishes the namespace for the value &ndash; that is, a URL that
                describes a set values that are unique.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The portion of the identifier typically relevant to the user and
                which is unique within the context of the system.
            period:
              $ref: "#/components/schemas/Period"
              description: Time period during which identifier is/was valid for use.
            assigner:
              $ref: "#/components/schemas/Reference"
              description: Organization that issued/manages the identifier.
              example:
                reference: Organization/123
                type: Organization
                display: The Assigning Organization
    Money:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            value:
              type: number
              description: Numerical value (with implicit precision).
            currency:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: ISO 4217 Currency Code.
    MoneyQuantity:
      allOf:
        - $ref: "#/components/schemas/Quantity"
        - type: object
          properties: {}
    Period:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            start:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The start of the period. The boundary is inclusive.
            end:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The end of the period. If the end of the period is missing, it
                means no end was known or planned at the time the instance was
                created. The start may be in the past, and the end date in the
                future, which means that period is expected/planned to end at
                that time.
    Quantity:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            value:
              type: number
              description: The value of the measured amount. The value includes an implicit
                precision in the presentation of the value.
            comparator:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the value should be understood and represented &ndash; whether
                the actual value is greater or less than the stated value due to
                measurement issues; e.g. if the comparator is "<" , then the
                real value is < stated value.
            unit:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A human&ndash;readable form of the unit.
            system:
              type: string
              pattern: \\S*
              description: The identification of the system that provides the coded form of
                the unit.
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A computer processable form of the unit in some unit representation
                system.
    Range:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            low:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The low limit. The boundary is inclusive.
            high:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The high limit. The boundary is inclusive.
    Ratio:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            numerator:
              $ref: "#/components/schemas/Quantity"
              description: The value of the numerator.
            denominator:
              $ref: "#/components/schemas/Quantity"
              description: The value of the denominator.
    RatioRange:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            lowNumerator:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The value of the low limit numerator.
            highNumerator:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The value of the high limit numerator.
            denominator:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The value of the denominator.
    Reference:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            reference:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A reference to a location at which the other resource is found. The
                reference may be a relative reference, in which case it is
                relative to the service base URL, or an absolute URL that
                resolves to the location where the resource is found. The
                reference may be version specific or not. If the reference is
                not to a FHIR RESTful server, then it should be assumed to be
                version specific. Internal fragment references (start with '#')
                refer to contained resources.
            type:
              type: string
              pattern: \\S*
              description: >-
                The expected type of the target of the reference. If both
                Reference.type and Reference.reference are populated and
                Reference.reference is a FHIR URL, both SHALL be consistent.


                The type is the Canonical URL of Resource Definition that is the
                type this reference refers to. References are URLs that are
                relative to http://hl7.org/fhir/StructureDefinition/ e.g.
                "Patient" is a reference to
                http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs
                are only allowed for logical models (and can only be used in
                references in logical models, not resources).
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: An identifier for the target resource. This is used when there is
                no way to reference the other resource directly, either because
                the entity it represents is not available through a FHIR server,
                or because there is no way for the author of the resource to
                convert a known identifier to an actual location. There is no
                requirement that a Reference.identifier point to something that
                is actually exposed as a FHIR instance, but it SHALL point to a
                business concept that would be expected to be exposed as a FHIR
                instance, and that instance would need to be of a FHIR resource
                type allowed by the reference.
            display:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Plain text narrative that identifies the resource in addition to
                the resource reference.
    SampledData:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            origin:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The base quantity that a measured value of zero represents. In
                addition, this provides the units of the entire measurement
                series.
            period:
              type: number
              description: The length of time between sampling times, measured in
                milliseconds.
            factor:
              type: number
              description: A correction factor that is applied to the sampled data points
                before they are added to the origin.
            lowerLimit:
              type: number
              description: The lower limit of detection of the measured points. This is needed
                if any of the data points have the value "L" (lower than
                detection limit).
            upperLimit:
              type: number
              description: The upper limit of detection of the measured points. This is needed
                if any of the data points have the value "U" (higher than
                detection limit).
            dimensions:
              type: integer
              format: int32
              description: The number of sample points at each time point. If this value is
                greater than one, then the dimensions will be interlaced &ndash;
                all the sample points for a point in time will be recorded at
                once.
            data:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A series of data points which are decimal values separated by a
                single space (character u20). The special values "E" (error),
                "L" (below detection limit) and "U" (above detection limit) can
                also be used in place of a decimal value.
          required:
            - origin
            - period
            - dimensions
    SimpleQuantity:
      allOf:
        - $ref: "#/components/schemas/Quantity"
        - type: object
          properties: {}
    Signature:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            type:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: An indication of the reason that the entity signed this document.
                  This may be explicitly included as part of the signature
                  information and can be used when determining accountability
                  for various actions concerning the document.
              minItems: 1
            when:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: When the digital signature was signed.
            who:
              $ref: "#/components/schemas/Reference"
              description: A reference to an application&ndash;usable description of the
                identity that signed  (e.g. the signature used their private
                key).
            onBehalfOf:
              $ref: "#/components/schemas/Reference"
              description: A reference to an application&ndash;usable description of the
                identity that is represented by the signature.
            targetFormat:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A mime type that indicates the technical format of the target
                resources signed by the signature.
            sigFormat:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A mime type that indicates the technical format of the signature.
                Important mime types are application/signature+xml for X ML
                DigSig, application/jose for JWS, and image/* for a graphical
                image of a signature, etc.
            data:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: The base64 encoding of the Signature content. When signature is not
                recorded electronically this element would be empty.
          required:
            - type
            - when
            - who
    Timing:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            event:
              type: array
              items:
                type: string
                pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
                description: Identifies specific times when the event occurs.
            repeat:
              $ref: "#/components/schemas/Timing_Repeat"
              description: A set of rules that describe when the event is scheduled.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code for the timing schedule (or just text in code.text). Some
                codes such as BID are ubiquitous, but many institutions define
                their own additional codes. If a code is provided, the code is
                understood to be a complete statement of whatever is specified
                in the structured timing data, and either the code or the data
                may be used to interpret the Timing, with the exception that
                .repeat.bounds still applies over the code (and is not contained
                in the code).
    Timing_Repeat:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            boundsDuration:
              $ref: "#/components/schemas/Duration"
              description: Either a duration for the length of the timing schedule, a range of
                possible length, or outer bounds for start and/or end limits of
                the timing schedule.
            boundsRange:
              $ref: "#/components/schemas/Range"
              description: Either a duration for the length of the timing schedule, a range of
                possible length, or outer bounds for start and/or end limits of
                the timing schedule.
            boundsPeriod:
              $ref: "#/components/schemas/Period"
              description: Either a duration for the length of the timing schedule, a range of
                possible length, or outer bounds for start and/or end limits of
                the timing schedule.
            count:
              type: integer
              format: int32
              description: A total count of the desired number of repetitions across the
                duration of the entire timing specification. If countMax is
                present, this element indicates the lower bound of the allowed
                range of count values.
            countMax:
              type: integer
              format: int32
              description: If present, indicates that the count is a range &ndash; so to
                perform the action between [count] and [countMax] times.
            duration:
              type: number
              description: How long this thing happens for when it happens. If durationMax is
                present, this element indicates the lower bound of the allowed
                range of the duration.
            durationMax:
              type: number
              description: If present, indicates that the duration is a range &ndash; so to
                perform the action between [duration] and [durationMax] time
                length.
            durationUnit:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The units of time for the duration, in UCUM units.
            frequency:
              type: integer
              format: int32
              description: The number of times to repeat the action within the specified
                period. If frequencyMax is present, this element indicates the
                lower bound of the allowed range of the frequency.
            frequencyMax:
              type: integer
              format: int32
              description: If present, indicates that the frequency is a range &ndash; so to
                repeat between [frequency] and [frequencyMax] times within the
                period or period range.
            period:
              type: number
              description: Indicates the duration of time over which repetitions are to occur;
                e.g. to express "3 times per day", 3 would be the frequency and
                "1 day" would be the period. If periodMax is present, this
                element indicates the lower bound of the allowed range of the
                period length.
            periodMax:
              type: number
              description: If present, indicates that the period is a range from [period] to
                [periodMax], allowing expressing concepts such as "do this once
                every 3&ndash;5 days.
            periodUnit:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The units of time for the period in UCUM units.
            dayOfWeek:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: If one or more days of week is provided, then the action happens
                  only on the specified day(s).
            timeOfDay:
              type: array
              items:
                type: string
                pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
                description: Specified time of day for action to take place.
            when:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: An approximate time period during the day, potentially linked to an
                  event of daily living that indicates when the action should
                  occur.
            offset:
              type: integer
              format: int32
              description: The number of minutes from the event. If the event code does not
                indicate whether the minutes is before or after the event, then
                the offset is assumed to be after the event.
    ContactDetail:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of an individual to contact.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: The contact details for the individual (if a name was provided) or
                  the organization.
    RelatedArtifact:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of relationship to the related artifact.
            label:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short label that can be used to reference the citation from
                elsewhere in the containing artifact, such as a footnote index.
            display:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A brief description of the document or knowledge resource being
                referenced, suitable for display to a consumer.
            citation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A bibliographic citation for the related artifact. This text SHOULD
                be formatted according to an accepted citation format.
            url:
              type: string
              pattern: \\S*
              description: A url for the artifact that can be followed to access the actual
                content.
            document:
              $ref: "#/components/schemas/Attachment"
              description: The document being referenced, represented as an attachment. This
                is exclusive with the resource element.
            resource:
              type: string
              pattern: \\S*
              description: The related resource, such as a library, value set, profile, or
                other knowledge resource.
          required:
            - type
    UsageContext:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/Coding"
              description: A code that identifies the type of context being specified by this
                usage context.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A value that defines the context specified in this context of use.
                The interpretation of the value is defined by the code.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: A value that defines the context specified in this context of use.
                The interpretation of the value is defined by the code.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: A value that defines the context specified in this context of use.
                The interpretation of the value is defined by the code.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: A value that defines the context specified in this context of use.
                The interpretation of the value is defined by the code.
          required:
            - code
    Meta:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            versionId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The version specific identifier, as it appears in the version
                portion of the URL. This value changes when the resource is
                created, updated, or deleted.
            lastUpdated:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: When the resource last changed &ndash; e.g. when the version
                changed.
            source:
              type: string
              pattern: \\S*
              description: A uri that identifies the source system of the resource. This
                provides a minimal amount of [Provenance](provenance.html#)
                information that can be used to track or differentiate the
                source of information in the resource. The source may identify
                another FHIR server, document, message, database, etc.
            profile:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A list of profiles (references to
                  [StructureDefinition](structuredefinition.html#) resources)
                  that this resource claims to conform to. The URL is a
                  reference to
                  [StructureDefinition.url](structuredefinition&ndash;definitions.html#StructureDefinition.url).
            security:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: Security labels applied to this resource. These tags connect
                  specific resources to the overall security policy and
                  infrastructure.
            tag:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: Tags applied to this resource. Tags are intended to be used to
                  identify and relate resources to process and workflow, and
                  applications are not required to consider the tags when
                  interpreting the meaning of a resource.
    Narrative:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the narrative &ndash; whether it's entirely generated
                (from just the defined data or the extensions too), or whether a
                human authored it and it may contain additional data.
            div:
              type: string
              description: The actual narrative content, a stripped down version of XHTML.
          required:
            - status
            - div
    Extension:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: Source of the definition for the extension code &ndash; a logical
                name or a URL.
            valueBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueBoolean:
              type: boolean
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueCanonical:
              type: string
              pattern: \\S*
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueCode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueDecimal:
              type: number
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueInteger:
              type: integer
              format: int32
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueMarkdown:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueOid:
              type: string
              pattern: urn:oid:[0-2](\\.(0|[1-9][0-9]*))+
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valuePositiveInt:
              type: integer
              format: int32
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueUnsignedInt:
              type: integer
              format: int32
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueUri:
              type: string
              pattern: \\S*
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueUrl:
              type: string
              pattern: \\S*
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueUuid:
              type: string
              pattern: urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueAddress:
              $ref: "#/components/schemas/Address"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueAge:
              $ref: "#/components/schemas/Age"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueAnnotation:
              $ref: "#/components/schemas/Annotation"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueCodeableReference:
              $ref: "#/components/schemas/CodeableReference"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueCoding:
              $ref: "#/components/schemas/Coding"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueContactPoint:
              $ref: "#/components/schemas/ContactPoint"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueCount:
              $ref: "#/components/schemas/Count"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueDistance:
              $ref: "#/components/schemas/Distance"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueDuration:
              $ref: "#/components/schemas/Duration"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueHumanName:
              $ref: "#/components/schemas/HumanName"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueMoney:
              $ref: "#/components/schemas/Money"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valuePeriod:
              $ref: "#/components/schemas/Period"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueRange:
              $ref: "#/components/schemas/Range"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueRatio:
              $ref: "#/components/schemas/Ratio"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueRatioRange:
              $ref: "#/components/schemas/RatioRange"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueSampledData:
              $ref: "#/components/schemas/SampledData"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueSignature:
              $ref: "#/components/schemas/Signature"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueTiming:
              $ref: "#/components/schemas/Timing"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueContactDetail:
              $ref: "#/components/schemas/ContactDetail"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueRelatedArtifact:
              $ref: "#/components/schemas/RelatedArtifact"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
            valueUsageContext:
              $ref: "#/components/schemas/UsageContext"
              description: Value of extension &ndash; must be one of a constrained set of the
                data types (see [Extensibility](extensibility.html) for a list).
          required:
            - url
    ActivityDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this activity definition
                when it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this activity definition is
                (or will be) published. This URL can be the target of a
                canonical reference. It SHALL remain the same when the activity
                definition is stored on different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this activity
                  definition when it is represented in other formats, or
                  referenced in a specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                activity definition when it is referenced in a specification,
                model, design or instance. This is an arbitrary value managed by
                the activity definition author and is not expected to be
                globally unique. For example, it might be a timestamp (e.g.
                yyyymmdd) if a managed version is not available. There is also
                no expectation that versions can be placed in a lexicographical
                sequence. To provide a version consistent with the Decision
                Support Service specification, use the format
                Major.Minor.Revision (e.g. 1.0.0). For more information on
                versioning knowledge assets, refer to the Decision Support
                Service specification. Note that a version is required for
                non&ndash;experimental active assets.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the activity definition. This
                name should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the activity
                definition.
            subtitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An explanatory or alternate title for the activity definition
                giving additional information about its content.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this activity definition. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this activity definition is
                authored for testing purposes (or
                education/evaluation/marketing) and is not intended to be used
                for genuine usage.
            subjectCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code, group definition, or canonical reference that describes  or
                identifies the intended subject of the activity being
                defined.  Canonical references are allowed to support the
                definition of protocols for drug and substance quality
                specifications, and is allowed to reference a
                MedicinalProductDefinition, SubstanceDefinition,
                AdministrableProductDefinition, ManufacturedItemDefinition, or
                PackagedProductDefinition resource.
            subjectReference:
              $ref: "#/components/schemas/Reference"
              description: A code, group definition, or canonical reference that describes  or
                identifies the intended subject of the activity being
                defined.  Canonical references are allowed to support the
                definition of protocols for drug and substance quality
                specifications, and is allowed to reference a
                MedicinalProductDefinition, SubstanceDefinition,
                AdministrableProductDefinition, ManufacturedItemDefinition, or
                PackagedProductDefinition resource.
            subjectCanonical:
              type: string
              pattern: \\S*
              description: A code, group definition, or canonical reference that describes  or
                identifies the intended subject of the activity being
                defined.  Canonical references are allowed to support the
                definition of protocols for drug and substance quality
                specifications, and is allowed to reference a
                MedicinalProductDefinition, SubstanceDefinition,
                AdministrableProductDefinition, ManufacturedItemDefinition, or
                PackagedProductDefinition resource.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the activity definition was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                activity definition changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                activity definition.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the activity definition
                from a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate activity
                  definition instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the activity definition is
                  intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this activity definition is needed and why it
                has been designed as it has.
            usage:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A detailed description of how the activity definition is used from
                a clinical perspective.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the activity definition and/or
                its contents. Copyright statements are generally legal
                restrictions on the use and publishing of the activity
                definition.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was approved by the
                publisher. Approval happens once when the content is officially
                approved for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was last reviewed. Review
                happens periodically after approval but does not change the
                original approval date.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the activity definition content was or is
                planned to be in active use.
            topic:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Descriptive topics related to the content of the activity. Topics
                  provide a high&ndash;level categorization of the activity that
                  can be useful for filtering and searching.
            author:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual or organization primarily involved in the creation
                  and maintenance of the content.
            editor:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for internal
                  coherence of the content.
            reviewer:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for review of
                  some aspect of the content.
            endorser:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization responsible for officially endorsing
                  the content for use in some setting.
            relatedArtifact:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Related artifacts such as additional documentation, justification,
                  or bibliographic references.
            library:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A reference to a Library resource containing any formal logic used
                  by the activity definition.
            kind:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A description of the kind of resource the activity definition is
                representing. For example, a MedicationRequest, a
                ServiceRequest, or a CommunicationRequest. Typically, but not
                always, this is a Request resource.
            profile:
              type: string
              pattern: \\S*
              description: A profile to which the target of the activity definition is
                expected to conform.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Detailed description of the type of activity; e.g. What lab test,
                what procedure, what kind of encounter.
            intent:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the level of authority/intentionality associated with the
                activity and where the request should fit into the workflow
                chain.
            priority:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how quickly the activity  should be addressed with
                respect to other requests.
            doNotPerform:
              type: boolean
              description: Set this to true if the definition is to indicate that a particular
                activity should NOT be performed. If true, this element should
                be interpreted to reinforce a negative coding. For example NPO
                as a code with a doNotPerform of true would still indicate to
                NOT perform the action.
            timingTiming:
              $ref: "#/components/schemas/Timing"
              description: The period, timing or frequency upon which the described activity
                is to occur.
            timingDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The period, timing or frequency upon which the described activity
                is to occur.
            timingAge:
              $ref: "#/components/schemas/Age"
              description: The period, timing or frequency upon which the described activity
                is to occur.
            timingPeriod:
              $ref: "#/components/schemas/Period"
              description: The period, timing or frequency upon which the described activity
                is to occur.
            timingRange:
              $ref: "#/components/schemas/Range"
              description: The period, timing or frequency upon which the described activity
                is to occur.
            timingDuration:
              $ref: "#/components/schemas/Duration"
              description: The period, timing or frequency upon which the described activity
                is to occur.
            location:
              $ref: "#/components/schemas/Reference"
              description: Identifies the facility where the activity will occur; e.g. home,
                hospital, specific clinic, etc.
            participant:
              type: array
              items:
                $ref: "#/components/schemas/ActivityDefinition_Participant"
                description: Indicates who should participate in performing the action
                  described.
            productReference:
              $ref: "#/components/schemas/Reference"
              description: Identifies the food, drug or other product being consumed or
                supplied in the activity.
            productCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the food, drug or other product being consumed or
                supplied in the activity.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Identifies the quantity expected to be consumed at once (per dose,
                per meal, etc.).
            dosage:
              type: array
              items:
                $ref: "#/components/schemas/Dosage"
                description: Provides detailed dosage instructions in the same way that they are
                  described for MedicationRequest resources.
            bodySite:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Indicates the sites on the subject's body where the procedure
                  should be performed (I.e. the target sites).
            specimenRequirement:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Defines specimen requirements for the action to be performed, such
                  as required specimens for a lab test.
            observationRequirement:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Defines observation requirements for the action to be performed,
                  such as body weight or surface area.
            observationResultRequirement:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Defines the observations that are expected to be produced by the
                  action.
            transform:
              type: string
              pattern: \\S*
              description: A reference to a StructureMap resource that defines a transform
                that can be executed to produce the intent resource using the
                ActivityDefinition instance as the input.
            dynamicValue:
              type: array
              items:
                $ref: "#/components/schemas/ActivityDefinition_DynamicValue"
                description: Dynamic values that will be evaluated to produce values for
                  elements of the resulting resource. For example, if the dosage
                  of a medication must be computed based on the patient's
                  weight, a dynamic value would be used to specify an expression
                  that calculated the weight, and the path on the request
                  resource that would contain the result.
          required:
            - status
      example:
        resourceType: ActivityDefinition
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ActivityDefinition_DynamicValue:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            path:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The path to the element to be customized. This is the path on the
                resource that will hold the result of the calculation defined by
                the expression. The specified path SHALL be a FHIRPath
                resolveable on the specified target type of the
                ActivityDefinition, and SHALL consist only of identifiers,
                constant indexers, and a restricted subset of functions. The
                path is allowed to contain qualifiers (.) to traverse
                sub&ndash;elements, as well as indexers ([x]) to traverse
                multiple&ndash;cardinality sub&ndash;elements (see the [Simple
                FHIRPath Profile](fhirpath.html#simple) for full details).
            expression:
              $ref: "#/components/schemas/Expression"
              description: An expression specifying the value of the customized element.
          required:
            - path
            - expression
    ActivityDefinition_Participant:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of participant in the action.
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: The role the participant should play in performing the described
                action.
          required:
            - type
    Expression:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A brief, natural language description of the condition that
                effectively communicates the intended semantics.
            name:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: A short name assigned to the expression to allow for multiple reuse
                of the expression in the context where it is defined.
            language:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The media type of the language for the expression.
            expression:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An expression in the specified language that returns a value.
            reference:
              type: string
              pattern: \\S*
              description: A URI that defines where the expression is found.
          required:
            - language
    ParameterDefinition:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            name:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The name of the parameter used to allow access to the value of the
                parameter in evaluation contexts.
            use:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Whether the parameter is input or output for the module.
            min:
              type: integer
              format: int32
              description: The minimum number of times this parameter SHALL appear in the
                request or response.
            max:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The maximum number of times this element is permitted to appear in
                the request or response.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A brief discussion of what the parameter is for and how it is used
                by the module.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of the parameter.
            profile:
              type: string
              pattern: \\S*
              description: If specified, this indicates a profile that the input data must
                conform to, or that the output data will conform to.
          required:
            - use
            - type
    Dosage:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: Indicates the order in which the dosage instructions should be
                applied or interpreted.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Free text dosage instructions e.g. SIG.
            additionalInstruction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Supplemental instructions to the patient on how to take the
                  medication  (e.g. "with meals" or"take half to one hour before
                  food") or warnings for the patient about the medication (e.g.
                  "may cause drowsiness" or "avoid exposure of skin to direct
                  sunlight or sunlamps").
            patientInstruction:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Instructions in terms that are understood by the patient or
                consumer.
            timing:
              $ref: "#/components/schemas/Timing"
              description: When medication should be administered.
            asNeededBoolean:
              type: boolean
              description: Indicates whether the Medication is only taken when needed within a
                specific dosing schedule (Boolean option), or it indicates the
                precondition for taking the Medication (CodeableConcept).
            asNeededCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates whether the Medication is only taken when needed within a
                specific dosing schedule (Boolean option), or it indicates the
                precondition for taking the Medication (CodeableConcept).
            site:
              $ref: "#/components/schemas/CodeableConcept"
              description: Body site to administer to.
            route:
              $ref: "#/components/schemas/CodeableConcept"
              description: How drug should enter body.
            method:
              $ref: "#/components/schemas/CodeableConcept"
              description: Technique for administering medication.
            doseAndRate:
              type: array
              items:
                $ref: "#/components/schemas/Dosage_DoseAndRate"
                description: The amount of medication administered.
            maxDosePerPeriod:
              $ref: "#/components/schemas/Ratio"
              description: Upper limit on medication per unit of time.
            maxDosePerAdministration:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Upper limit on medication per administration.
            maxDosePerLifetime:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Upper limit on medication per lifetime of the patient.
    Dosage_DoseAndRate:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of dose or rate specified, for example, ordered or
                calculated.
            doseRange:
              $ref: "#/components/schemas/Range"
              description: Amount of medication per dose.
            doseQuantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Amount of medication per dose.
            rateRatio:
              $ref: "#/components/schemas/Ratio"
              description: Amount of medication per unit of time.
            rateRange:
              $ref: "#/components/schemas/Range"
              description: Amount of medication per unit of time.
            rateQuantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Amount of medication per unit of time.
    AdministrableProductDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: An identifier for the administrable product.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this administrable product. Enables tracking the
                life&ndash;cycle of the content.
            formOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: References a product from which one or more of the constituent
                  parts of that product can be prepared and used as described by
                  this administrable product.  If this administrable product
                  describes the administration of a crushed tablet, the 'formOf'
                  would be the product representing a distribution containing
                  tablets and possibly also a cream.  This is distinct from the
                  'producedFrom' which refers to the specific components of the
                  product that are used in this preparation, rather than the
                  product as a whole.
            administrableDoseForm:
              $ref: "#/components/schemas/CodeableConcept"
              description: The dose form of the final product after necessary reconstitution
                or processing. Contrasts to the manufactured dose form (see
                ManufacturedItemDefinition). If the manufactured form was
                'powder for solution for injection', the administrable dose form
                could be 'solution for injection' (once mixed with another item
                having manufactured form 'solvent for solution for injection').
            unitOfPresentation:
              $ref: "#/components/schemas/CodeableConcept"
              description: The presentation type in which this item is given to a patient.
                e.g. for a spray &ndash; 'puff' (as in 'contains 100 mcg per
                puff'), or for a liquid &ndash; 'vial' (as in 'contains 5 ml per
                vial').
            producedFrom:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates the specific manufactured items that are part of the
                  'formOf' product that are used in the preparation of this
                  specific administrable form.  In some cases, an administrable
                  form might use all of the items from the overall product (or
                  there might only be one item), while in other cases, an
                  administrable form might use only a subset of the items
                  available in the overall product.  For example, an
                  administrable form might involve combining a liquid and a
                  powder available as part of an overall product, but not
                  involve applying the also supplied cream.
            ingredient:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The ingredients of this administrable medicinal product. This is
                  only needed if the ingredients are not specified either using
                  ManufacturedItemDefiniton (via
                  AdministrableProductDefinition.producedFrom) to state which
                  component items are used to make this, or using by incoming
                  references from the Ingredient resource, to state in detail
                  which substances exist within this. This element allows a
                  basic coded ingredient to be used.
            device:
              $ref: "#/components/schemas/Reference"
              description: A device that is integral to the medicinal product, in effect being
                considered as an "ingredient" of the medicinal product. This is
                not intended for devices that are just co&ndash;packaged.
            property:
              type: array
              items:
                $ref: "#/components/schemas/AdministrableProductDefinition_Property"
                description: Characteristics e.g. a product's onset of action.
            routeOfAdministration:
              type: array
              items:
                $ref: "#/components/schemas/AdministrableProductDefinition_RouteOfAdministratio\
                  n"
                description: The path by which the product is taken into or makes contact with
                  the body. In some regions this is referred to as the licenced
                  or approved route. RouteOfAdministration cannot be used when
                  the 'formOf' product already uses
                  MedicinalProductDefinition.route (and vice versa).
              minItems: 1
          required:
            - status
            - routeOfAdministration
      example:
        resourceType: AdministrableProductDefinition
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        routeOfAdministration:
          - code:
              coding:
                - extension:
                    - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                      valueCode: unknown
    AdministrableProductDefinition_Property:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code expressing the type of characteristic.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A value for the characteristic.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: A value for the characteristic.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: A value for the characteristic.
            valueBoolean:
              type: boolean
              description: A value for the characteristic.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: A value for the characteristic.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: The status of characteristic e.g. assigned or pending.
          required:
            - type
    AdministrableProductDefinition_RouteOfAdministration:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Coded expression for the route.
            firstDose:
              $ref: "#/components/schemas/Quantity"
              description: The first dose (dose quantity) administered can be specified for
                the product, using a numerical value and its unit of
                measurement.
            maxSingleDose:
              $ref: "#/components/schemas/Quantity"
              description: The maximum single dose that can be administered, specified using a
                numerical value and its unit of measurement.
            maxDosePerDay:
              $ref: "#/components/schemas/Quantity"
              description: The maximum dose per day (maximum dose quantity to be administered
                in any one 24&ndash;h period) that can be administered.
            maxDosePerTreatmentPeriod:
              $ref: "#/components/schemas/Ratio"
              description: The maximum dose per treatment period that can be administered.
            maxTreatmentPeriod:
              $ref: "#/components/schemas/Duration"
              description: The maximum treatment period during which the product can be
                administered.
            targetSpecies:
              type: array
              items:
                $ref: "#/components/schemas/AdministrableProductDefinition_RouteOfAdministratio\
                  n_TargetSpecies"
                description: A species for which this route applies.
          required:
            - code
    AdministrableProductDefinition_RouteOfAdministration_TargetSpecies:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Coded expression for the species.
            withdrawalPeriod:
              type: array
              items:
                $ref: "#/components/schemas/AdministrableProductDefinition_RouteOfAdministratio\
                  n_TargetSpecies_WithdrawalPeriod"
                description: A species specific time during which consumption of animal product
                  is not appropriate.
          required:
            - code
    AdministrableProductDefinition_RouteOfAdministration_TargetSpecies_WithdrawalPeriod:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            tissue:
              $ref: "#/components/schemas/CodeableConcept"
              description: Coded expression for the type of tissue for which the withdrawal
                period applies, e.g. meat, milk.
            value:
              $ref: "#/components/schemas/Quantity"
              description: A value for the time.
            supportingInformation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Extra information about the withdrawal period.
          required:
            - tissue
            - value
    AdverseEvent:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Business identifiers assigned to this adverse event by the
                performer or other systems which remain constant as the resource
                is updated and propagates from server to server.
            actuality:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Whether the event actually happened, or just had the potential to.
                Note that this is independent of whether anyone was affected or
                harmed or how severely.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The overall type of event, intended for search and filtering
                  purposes.
            event:
              $ref: "#/components/schemas/CodeableConcept"
              description: This element defines the specific type of event that occurred or
                that was prevented from occurring.
            subject:
              $ref: "#/components/schemas/Reference"
              description: This subject or group impacted by the event.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The Encounter during which AdverseEvent was created or to which the
                creation of this record is tightly associated.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date (and perhaps time) when the adverse event occurred.
            detected:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Estimated or actual date the AdverseEvent began, in the opinion of
                the reporter.
            recordedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date on which the existence of the AdverseEvent was first
                recorded.
            resultingCondition:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Includes information about the reaction that occurred as a result
                  of exposure to a substance (for example, a drug or a
                  chemical).
            location:
              $ref: "#/components/schemas/Reference"
              description: The information about where the adverse event occurred.
            seriousness:
              $ref: "#/components/schemas/CodeableConcept"
              description: Assessment whether this event was of real importance.
            severity:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes the severity of the adverse event, in relation to the
                subject. Contrast to AdverseEvent.seriousness &ndash; a severe
                rash might not be serious, but a mild heart problem is.
            outcome:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes the type of outcome from the adverse event.
            recorder:
              $ref: "#/components/schemas/Reference"
              description: Information on who recorded the adverse event.  May be the patient
                or a practitioner.
            contributor:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Parties that may or should contribute or have contributed
                  information to the adverse event, which can consist of one or
                  more activities.  Such information includes information
                  leading to the decision to perform the activity and how to
                  perform the activity (e.g. consultant), information that the
                  activity itself seeks to reveal (e.g. informant of clinical
                  history), or information about what activity was performed
                  (e.g. informant witness).
            suspectEntity:
              type: array
              items:
                $ref: "#/components/schemas/AdverseEvent_SuspectEntity"
                description: Describes the entity that is suspected to have caused the adverse
                  event.
            subjectMedicalHistory:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: AdverseEvent.subjectMedicalHistory.
            referenceDocument:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: AdverseEvent.referenceDocument.
            study:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: AdverseEvent.study.
          required:
            - actuality
            - subject
      example:
        resourceType: AdverseEvent
        meta:
          tag:
            - code: ibm/minimal
        _actuality:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    AdverseEvent_SuspectEntity:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            instance:
              $ref: "#/components/schemas/Reference"
              description: Identifies the actual instance of what caused the adverse
                event.  May be a substance, medication, medication
                administration, medication statement or a device.
            causality:
              type: array
              items:
                $ref: "#/components/schemas/AdverseEvent_SuspectEntity_Causality"
                description: Information on the possible cause of the event.
          required:
            - instance
    AdverseEvent_SuspectEntity_Causality:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            assessment:
              $ref: "#/components/schemas/CodeableConcept"
              description: Assessment of if the entity caused the event.
            productRelatedness:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: AdverseEvent.suspectEntity.causalityProductRelatedness.
            author:
              $ref: "#/components/schemas/Reference"
              description: AdverseEvent.suspectEntity.causalityAuthor.
            method:
              $ref: "#/components/schemas/CodeableConcept"
              description: ProbabilityScale | Bayesian | Checklist.
    AllergyIntolerance:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this AllergyIntolerance by the
                  performer or other systems which remain constant as the
                  resource is updated and propagates from server to server.
            clinicalStatus:
              $ref: "#/components/schemas/CodeableConcept"
              description: The clinical status of the allergy or intolerance.
            verificationStatus:
              $ref: "#/components/schemas/CodeableConcept"
              description: Assertion about certainty associated with the propensity, or
                potential risk, of a reaction to the identified substance
                (including pharmaceutical product).
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identification of the underlying physiological mechanism for the
                reaction risk.
            category:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Category of the identified substance.
            criticality:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Estimate of the potential clinical harm, or seriousness, of the
                reaction to the identified substance.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: "Code for an allergy or intolerance statement (either a positive or
                a negated/excluded statement).  This may be a code for a
                substance or pharmaceutical product that is considered to be
                responsible for the adverse reaction risk (e.g., \"Latex\"), an
                allergy or intolerance condition (e.g., \"Latex allergy\"), or a
                negated/excluded code for a specific substance or class (e.g.,
                \"No latex allergy\") or a general or categorical negated
                statement (e.g.,  \"No known allergy\", \"No known drug
                allergies\").  Note: the substance for a specific reaction may
                be different from the substance identified as the cause of the
                risk, but it must be consistent with it. For instance, it may be
                a more specific substance (e.g. a brand medication) or a
                composite product that includes the identified substance. It
                must be clinically safe to only process the 'code' and ignore
                the 'reaction.substance'.  If a receiving system is unable to
                confirm that AllergyIntolerance.reaction.substance falls within
                the semantic scope of AllergyIntolerance.code, then the
                receiving system should ignore
                AllergyIntolerance.reaction.substance."
            patient:
              $ref: "#/components/schemas/Reference"
              description: The patient who has the allergy or intolerance.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The encounter when the allergy or intolerance was asserted.
            onsetDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Estimated or actual date,  date&ndash;time, or age when allergy or
                intolerance was identified.
            onsetAge:
              $ref: "#/components/schemas/Age"
              description: Estimated or actual date,  date&ndash;time, or age when allergy or
                intolerance was identified.
            onsetPeriod:
              $ref: "#/components/schemas/Period"
              description: Estimated or actual date,  date&ndash;time, or age when allergy or
                intolerance was identified.
            onsetRange:
              $ref: "#/components/schemas/Range"
              description: Estimated or actual date,  date&ndash;time, or age when allergy or
                intolerance was identified.
            onsetString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Estimated or actual date,  date&ndash;time, or age when allergy or
                intolerance was identified.
            recordedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The recordedDate represents when this particular AllergyIntolerance
                record was created in the system, which is often a
                system&ndash;generated date.
            recorder:
              $ref: "#/components/schemas/Reference"
              description: Individual who recorded the record and takes responsibility for its
                content.
            asserter:
              $ref: "#/components/schemas/Reference"
              description: The source of the information about the allergy that is recorded.
            lastOccurrence:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Represents the date and/or time of the last known occurrence of a
                reaction event.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Additional narrative about the propensity for the Adverse Reaction,
                  not captured in other fields.
            reaction:
              type: array
              items:
                $ref: "#/components/schemas/AllergyIntolerance_Reaction"
                description: Details about each adverse reaction event linked to exposure to the
                  identified substance.
          required:
            - patient
      example:
        resourceType: AllergyIntolerance
        meta:
          tag:
            - code: ibm/minimal
        clinicalStatus:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    AllergyIntolerance_Reaction:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            substance:
              $ref: "#/components/schemas/CodeableConcept"
              description: "Identification of the specific substance (or pharmaceutical
                product) considered to be responsible for the Adverse Reaction
                event. Note: the substance for a specific reaction may be
                different from the substance identified as the cause of the
                risk, but it must be consistent with it. For instance, it may be
                a more specific substance (e.g. a brand medication) or a
                composite product that includes the identified substance. It
                must be clinically safe to only process the 'code' and ignore
                the 'reaction.substance'.  If a receiving system is unable to
                confirm that AllergyIntolerance.reaction.substance falls within
                the semantic scope of AllergyIntolerance.code, then the
                receiving system should ignore
                AllergyIntolerance.reaction.substance."
            manifestation:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Clinical symptoms and/or signs that are observed or associated with
                  the adverse reaction event.
              minItems: 1
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Text description about the reaction as a whole, including details
                of the manifestation if required.
            onset:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Record of the date and/or time of the onset of the Reaction.
            severity:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Clinical assessment of the severity of the reaction event as a
                whole, potentially considering multiple different
                manifestations.
            exposureRoute:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identification of the route by which the subject was exposed to the
                substance.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Additional text about the adverse reaction event not captured in
                  other fields.
          required:
            - manifestation
    Appointment:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: This records identifiers associated with this appointment concern
                  that are defined by business processes and/or used to refer to
                  it when a direct URL reference to the resource itself is not
                  appropriate (e.g. in CDA documents, or in written / printed
                  documentation).
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The overall status of the Appointment. Each of the participants has
                their own participation status which indicates their involvement
                in the process, however this status indicates the shared status.
            cancelationReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: The coded reason for the appointment being cancelled. This is often
                used in reporting/billing/futher processing to determine if
                further actions are required, or specific fees apply.
            serviceCategory:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A broad categorization of the service that is to be performed
                  during this appointment.
            serviceType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The specific service that is to be performed during this
                  appointment.
            specialty:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The specialty of a practitioner that would be required to perform
                  the service requested in this appointment.
            appointmentType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The style of appointment or patient that has been booked in the
                slot (not service type).
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The coded reason that this appointment is being scheduled. This is
                  more clinical than administrative.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Reason the appointment has been scheduled to take place, as
                  specified using information from another resource. When the
                  patient arrives and the encounter begins it may be used as the
                  admission diagnosis. The indication will typically be a
                  Condition (with other resources referenced in the
                  evidence.detail), or a Procedure.
            priority:
              type: integer
              format: int32
              description: The priority of the appointment. Can be used to make informed
                decisions if needing to re&ndash;prioritize appointments. (The
                iCal Standard specifies 0 as undefined, 1 as highest, 9 as
                lowest priority).
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The brief description of the appointment as would be shown on a
                subject line in a meeting request, or appointment list. Detailed
                or expanded information should be put in the comment field.
            supportingInformation:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Additional information to support the appointment provided when
                  making the appointment.
            start:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: Date/Time that the appointment is to take place.
            end:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: Date/Time that the appointment is to conclude.
            minutesDuration:
              type: integer
              format: int32
              description: Number of minutes that the appointment is to take. This can be less
                than the duration between the start and end times.  For example,
                where the actual time of appointment is only an estimate or if a
                30 minute appointment is being requested, but any time would
                work.  Also, if there is, for example, a planned 15 minute break
                in the middle of a long appointment, the duration may be 15
                minutes less than the difference between the start and end.
            slot:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The slots from the participants' schedules that will be filled by
                  the appointment.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date that this appointment was initially created. This could be
                different to the meta.lastModified value on the initial entry,
                as this could have been before the resource was created on the
                FHIR server, and should remain unchanged over the lifespan of
                the appointment.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional comments about the appointment.
            patientInstruction:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: While Appointment.comment contains information for internal use,
                Appointment.patientInstructions is used to capture patient
                facing information about the Appointment (e.g. please bring your
                referral or fast from 8pm night before).
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The service request this appointment is allocated to assess (e.g.
                  incoming referral or procedure request).
            participant:
              type: array
              items:
                $ref: "#/components/schemas/Appointment_Participant"
                description: List of participants involved in the appointment.
              minItems: 1
            requestedPeriod:
              type: array
              items:
                $ref: "#/components/schemas/Period"
                description: >-
                  A set of date ranges (potentially including times) that the
                  appointment is preferred to be scheduled within.


                  The duration (usually in minutes) could also be provided to
                  indicate the length of the appointment to fill and populate
                  the start/end times for the actual allocated time. However, in
                  other situations the duration may be calculated by the
                  scheduling system.
          required:
            - status
            - participant
      example:
        resourceType: Appointment
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        participant:
          - _status:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    Appointment_Participant:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Role of participant in the appointment.
            actor:
              $ref: "#/components/schemas/Reference"
              description: A Person, Location/HealthcareService or Device that is
                participating in the appointment.
            required:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Whether this participant is required to be present at the meeting.
                This covers a use&ndash;case where two doctors need to meet to
                discuss the results for a specific patient, and the patient is
                not required to be present.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Participation status of the actor.
            period:
              $ref: "#/components/schemas/Period"
              description: Participation period of the actor.
          required:
            - status
    AppointmentResponse:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: This records identifiers associated with this appointment response
                  concern that are defined by business processes and/ or used to
                  refer to it when a direct URL reference to the resource itself
                  is not appropriate.
            appointment:
              $ref: "#/components/schemas/Reference"
              description: Appointment that this response is replying to.
            start:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: Date/Time that the appointment is to take place, or requested new
                start time.
            end:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: This may be either the same as the appointment request to confirm
                the details of the appointment, or alternately a new time to
                request a re&ndash;negotiation of the end time.
            participantType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Role of participant in the appointment.
            actor:
              $ref: "#/components/schemas/Reference"
              description: A Person, Location, HealthcareService, or Device that is
                participating in the appointment.
            participantStatus:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Participation status of the participant. When the status is
                declined or tentative if the start/end times are different to
                the appointment, then these times should be interpreted as a
                requested time change. When the status is accepted, the times
                can either be the time of the appointment (as a confirmation of
                the time) or can be empty.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional comments about the appointment.
          required:
            - appointment
            - participantStatus
      example:
        resourceType: AppointmentResponse
        meta:
          tag:
            - code: ibm/minimal
        appointment:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _participantStatus:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    AuditEvent:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/Coding"
              description: Identifier for a family of the event.  For example, a menu item,
                program, rule, policy, function code, application name or URL.
                It identifies the performed function.
            subtype:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: Identifier for the category of event.
            action:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicator for type of action performed during the event that
                generated the audit.
            period:
              $ref: "#/components/schemas/Period"
              description: The period during which the activity occurred.
            recorded:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The time when the event was recorded.
            outcome:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates whether the event succeeded or failed.
            outcomeDesc:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text description of the outcome of the event.
            purposeOfEvent:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The purposeOfUse (reason) that was used during the event being
                  recorded.
            agent:
              type: array
              items:
                $ref: "#/components/schemas/AuditEvent_Agent"
                description: An actor taking an active role in the event or activity that is
                  logged.
              minItems: 1
            source:
              $ref: "#/components/schemas/AuditEvent_Source"
              description: The system that is reporting the event.
            entity:
              type: array
              items:
                $ref: "#/components/schemas/AuditEvent_Entity"
                description: Specific instances of data or objects that have been accessed.
          required:
            - type
            - recorded
            - agent
            - source
      example:
        resourceType: AuditEvent
        meta:
          tag:
            - code: ibm/minimal
        type:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _recorded:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        agent:
          - _requestor:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        source:
          observer:
            extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
    AuditEvent_Agent:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specification of the participation type the user plays when
                performing the event.
            role:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The security role that the user was acting under, that come from
                  local codes defined by the access control security system
                  (e.g. RBAC, ABAC) used in the local context.
            who:
              $ref: "#/components/schemas/Reference"
              description: Reference to who this agent is that was involved in the event.
            altId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Alternative agent Identifier. For a human, this should be a user
                identifier text string from authentication system. This
                identifier would be one known to a common authentication system
                (e.g. single sign&ndash;on), if available.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Human&ndash;meaningful name for the agent.
            requestor:
              type: boolean
              description: Indicator that the user is or is not the requestor, or initiator,
                for the event being audited.
            location:
              $ref: "#/components/schemas/Reference"
              description: Where the event occurred.
            policy:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The policy or plan that authorized the activity being recorded.
                  Typically, a single activity may have multiple applicable
                  policies, such as patient consent, guarantor funding, etc. The
                  policy would also indicate the security token used.
            media:
              $ref: "#/components/schemas/Coding"
              description: Type of media involved. Used when the event is about
                exporting/importing onto media.
            network:
              $ref: "#/components/schemas/AuditEvent_Agent_Network"
              description: Logical network location for application activity, if the activity
                has a network location.
            purposeOfUse:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The reason (purpose of use), specific to this agent, that was used
                  during the event being recorded.
          required:
            - requestor
    AuditEvent_Agent_Network:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            address:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An identifier for the network access point of the user device for
                the audit event.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: An identifier for the type of network access point that originated
                the audit event.
    AuditEvent_Entity:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            what:
              $ref: "#/components/schemas/Reference"
              description: Identifies a specific instance of the entity. The reference should
                be version specific.
            type:
              $ref: "#/components/schemas/Coding"
              description: The type of the object that was involved in this audit event.
            role:
              $ref: "#/components/schemas/Coding"
              description: Code representing the role the entity played in the event being
                audited.
            lifecycle:
              $ref: "#/components/schemas/Coding"
              description: Identifier for the data life&ndash;cycle stage for the entity.
            securityLabel:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: Security labels for the identified entity.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A name of the entity in the audit event.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Text that describes the entity in more detail.
            query:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: The query parameters for a query&ndash;type entities.
            detail:
              type: array
              items:
                $ref: "#/components/schemas/AuditEvent_Entity_Detail"
                description: Tagged value pairs for conveying additional information about the
                  entity.
    AuditEvent_Entity_Detail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The type of extra detail provided in the value.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The  value of the extra detail.
            valueBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: The  value of the extra detail.
          required:
            - type
    AuditEvent_Source:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            site:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Logical source location within the healthcare enterprise
                network.  For example, a hospital or other provider location
                within a multi&ndash;entity provider group.
            observer:
              $ref: "#/components/schemas/Reference"
              description: Identifier of the source where the event was detected.
            type:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: Code specifying the type of source where event originated.
          required:
            - observer
    Basic:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier assigned to the resource for business purposes, outside
                  the context of FHIR.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the 'type' of resource &ndash; equivalent to the
                resource name for other resources.
            subject:
              $ref: "#/components/schemas/Reference"
              description: Identifies the patient, practitioner, device or any other resource
                that is the "focus" of this resource.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Identifies when the resource was first created.
            author:
              $ref: "#/components/schemas/Reference"
              description: Indicates who was responsible for creating the resource instance.
          required:
            - code
      example:
        resourceType: Basic
        meta:
          tag:
            - code: ibm/minimal
        code:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    BiologicallyDerivedProduct:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: This records identifiers associated with this biologically derived
                  product instance that are defined by business processes and/or
                  used to refer to it when a direct URL reference to the
                  resource itself is not appropriate (e.g. in CDA documents, or
                  in written / printed documentation).
            productCategory:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Broad category of this product.
            productCode:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code that identifies the kind of this biologically derived
                product (SNOMED Ctcode).
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Whether the product is currently available.
            request:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Procedure request to obtain this biologically derived product.
            quantity:
              type: integer
              format: int32
              description: Number of discrete units within this product.
            parent:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Parent product (if any).
            collection:
              $ref: "#/components/schemas/BiologicallyDerivedProduct_Collection"
              description: How this product was collected.
            processing:
              type: array
              items:
                $ref: "#/components/schemas/BiologicallyDerivedProduct_Processing"
                description: Any processing of the product during collection that does not
                  change the fundamental nature of the product. For example
                  adding anti&ndash;coagulants during the collection of
                  Peripheral Blood Stem Cells.
            manipulation:
              $ref: "#/components/schemas/BiologicallyDerivedProduct_Manipulation"
              description: Any manipulation of product post&ndash;collection that is intended
                to alter the product.  For example a buffy&ndash;coat enrichment
                or CD8 reduction of Peripheral Blood Stem Cells to make it more
                suitable for infusion.
            storage:
              type: array
              items:
                $ref: "#/components/schemas/BiologicallyDerivedProduct_Storage"
                description: Product storage.
      example:
        resourceType: BiologicallyDerivedProduct
        meta:
          tag:
            - code: ibm/minimal
    BiologicallyDerivedProduct_Collection:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            collector:
              $ref: "#/components/schemas/Reference"
              description: Healthcare professional who is performing the collection.
            source:
              $ref: "#/components/schemas/Reference"
              description: The patient or entity, such as a hospital or vendor in the case of
                a processed/manipulated/manufactured product, providing the
                product.
            collectedDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Time of product collection.
            collectedPeriod:
              $ref: "#/components/schemas/Period"
              description: Time of product collection.
    BiologicallyDerivedProduct_Manipulation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of manipulation.
            timeDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Time of manipulation.
            timePeriod:
              $ref: "#/components/schemas/Period"
              description: Time of manipulation.
    BiologicallyDerivedProduct_Processing:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of of processing.
            procedure:
              $ref: "#/components/schemas/CodeableConcept"
              description: Procesing code.
            additive:
              $ref: "#/components/schemas/Reference"
              description: Substance added during processing.
            timeDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Time of processing.
            timePeriod:
              $ref: "#/components/schemas/Period"
              description: Time of processing.
    BiologicallyDerivedProduct_Storage:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of storage.
            temperature:
              type: number
              description: Storage temperature.
            scale:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Temperature scale used.
            duration:
              $ref: "#/components/schemas/Period"
              description: Storage timeperiod.
    BodyStructure:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier for this instance of the anatomical structure.
            active:
              type: boolean
              description: Whether this body site is in active use.
            morphology:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of structure being represented by the body structure at
                `BodyStructure.location`.  This can define both normal and
                abnormal morphologies.
            location:
              $ref: "#/components/schemas/CodeableConcept"
              description: The anatomical location or region of the specimen, lesion, or body
                structure.
            locationQualifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Qualifier to refine the anatomical location.  These include
                  qualifiers for laterality, relative location, directionality,
                  number, and plane.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A summary, characterization or explanation of the body structure.
            image:
              type: array
              items:
                $ref: "#/components/schemas/Attachment"
                description: Image or images used to identify a location.
            patient:
              $ref: "#/components/schemas/Reference"
              description: The person to which the body site belongs.
          required:
            - patient
      example:
        resourceType: BodyStructure
        meta:
          tag:
            - code: ibm/minimal
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    CarePlan:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this care plan by the performer or
                  other systems which remain constant as the resource is updated
                  and propagates from server to server.
            instantiatesCanonical:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to a FHIR&ndash;defined protocol, guideline,
                  questionnaire or other definition that is adhered to in whole
                  or in part by this CarePlan.
            instantiatesUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to an externally maintained protocol, guideline,
                  questionnaire or other definition that is adhered to in whole
                  or in part by this CarePlan.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A care plan that is fulfilled in whole or in part by this care
                  plan.
            replaces:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Completed or terminated care plan whose function is taken by this
                  new care plan.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A larger care plan of which this particular care plan is a
                  component or step.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates whether the plan is currently being acted upon,
                represents future intentions or is now a historical record.
            intent:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the level of authority/intentionality associated with the
                care plan and where the care plan fits into the workflow chain.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies what "kind" of plan this is to support differentiation
                  between multiple co&ndash;existing plans; e.g. "Home health",
                  "psychiatric", "asthma", "disease management", "wellness
                  plan", etc.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Human&ndash;friendly name for the care plan.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of the scope and nature of the plan.
            subject:
              $ref: "#/components/schemas/Reference"
              description: Identifies the patient or group whose intended care is described by
                the plan.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The Encounter during which this CarePlan was created or to which
                the creation of this record is tightly associated.
            period:
              $ref: "#/components/schemas/Period"
              description: Indicates when the plan did (or is intended to) come into effect
                and end.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Represents when this particular CarePlan record was created in the
                system, which is often a system&ndash;generated date.
            author:
              $ref: "#/components/schemas/Reference"
              description: When populated, the author is responsible for the care plan.  The
                care plan is attributed to the author.
            contributor:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies the individual(s) or organization who provided the
                  contents of the care plan.
            careTeam:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies all people and organizations who are expected to be
                  involved in the care envisioned by this plan.
            addresses:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies the conditions/problems/concerns/diagnoses/etc. whose
                  management and/or mitigation are handled by this plan.
            supportingInfo:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies portions of the patient's record that specifically
                  influenced the formation of the plan.  These might include
                  comorbidities, recent procedures, limitations, recent
                  assessments, etc.
            goal:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Describes the intended objective(s) of carrying out the care plan.
            activity:
              type: array
              items:
                $ref: "#/components/schemas/CarePlan_Activity"
                description: Identifies a planned action to occur as part of the plan.  For
                  example, a medication to be used, lab tests to perform,
                  self&ndash;monitoring, education, etc.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: General notes about the care plan not covered elsewhere.
          required:
            - status
            - intent
            - subject
      example:
        resourceType: CarePlan
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _intent:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    CarePlan_Activity:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            outcomeCodeableConcept:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies the outcome at the point when the status of the activity
                  is assessed.  For example, the outcome of an education
                  activity could be patient understands (or not).
            outcomeReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Details of the outcome or action resulting from the activity.  The
                  reference to an "event" resource, such as Procedure or
                  Encounter or Observation, is the result/outcome of the
                  activity itself.  The activity can be conveyed using
                  CarePlan.activity.detail OR using the
                  CarePlan.activity.reference (a reference to a
                  &ldquo;request&rdquo; resource).
            progress:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Notes about the adherence/status/progress of the activity.
            reference:
              $ref: "#/components/schemas/Reference"
              description: The details of the proposed activity represented in a specific
                resource.
            detail:
              $ref: "#/components/schemas/CarePlan_Activity_Detail"
              description: A simple summary of a planned activity suitable for a general care
                plan system (e.g. form driven) that doesn't know about specific
                resources such as procedure etc.
    CarePlan_Activity_Detail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            kind:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A description of the kind of resource the in&ndash;line definition
                of a care plan activity is representing.  The
                CarePlan.activity.detail is an in&ndash;line definition when a
                resource is not referenced using
                CarePlan.activity.reference.  For example, a MedicationRequest,
                a ServiceRequest, or a CommunicationRequest.
            instantiatesCanonical:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to a FHIR&ndash;defined protocol, guideline,
                  questionnaire or other definition that is adhered to in whole
                  or in part by this CarePlan activity.
            instantiatesUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to an externally maintained protocol, guideline,
                  questionnaire or other definition that is adhered to in whole
                  or in part by this CarePlan activity.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Detailed description of the type of planned activity; e.g. what lab
                test, what procedure, what kind of encounter.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Provides the rationale that drove the inclusion of this particular
                  activity as part of the plan or the reason why the activity
                  was prohibited.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates another resource, such as the health condition(s), whose
                  existence justifies this request and drove the inclusion of
                  this particular activity as part of the plan.
            goal:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Internal reference that identifies the goals that this activity is
                  intended to contribute towards meeting.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identifies what progress is being made for the specific activity.
            statusReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Provides reason why the activity isn't yet started, is on hold, was
                cancelled, etc.
            doNotPerform:
              type: boolean
              description: If true, indicates that the described activity is one that must NOT
                be engaged in when following the plan.  If false, or missing,
                indicates that the described activity is one that should be
                engaged in when following the plan.
            scheduledTiming:
              $ref: "#/components/schemas/Timing"
              description: The period, timing or frequency upon which the described activity
                is to occur.
            scheduledPeriod:
              $ref: "#/components/schemas/Period"
              description: The period, timing or frequency upon which the described activity
                is to occur.
            scheduledString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The period, timing or frequency upon which the described activity
                is to occur.
            location:
              $ref: "#/components/schemas/Reference"
              description: Identifies the facility where the activity will occur; e.g. home,
                hospital, specific clinic, etc.
            performer:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies who's expected to be involved in the activity.
            productCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the food, drug or other product to be consumed or
                supplied in the activity.
            productReference:
              $ref: "#/components/schemas/Reference"
              description: Identifies the food, drug or other product to be consumed or
                supplied in the activity.
            dailyAmount:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Identifies the quantity expected to be consumed in a given day.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Identifies the quantity expected to be supplied, administered or
                consumed by the subject.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: This provides a textual description of constraints on the intended
                activity occurrence, including relation to other activities.  It
                may also include objectives, pre&ndash;conditions and
                end&ndash;conditions.  Finally, it may convey specifics about
                the activity such as body site, method, route, etc.
          required:
            - status
    CareTeam:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this care team by the performer or
                  other systems which remain constant as the resource is updated
                  and propagates from server to server.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the current state of the care team.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies what kind of team.  This is to support differentiation
                  between multiple co&ndash;existing teams, such as care plan
                  team, episode of care team, longitudinal care team.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A label for human use intended to distinguish like teams.  E.g. the
                "red" vs. "green" trauma teams.
            subject:
              $ref: "#/components/schemas/Reference"
              description: Identifies the patient or group whose intended care is handled by
                the team.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The Encounter during which this CareTeam was created or to which
                the creation of this record is tightly associated.
            period:
              $ref: "#/components/schemas/Period"
              description: Indicates when the team did (or is intended to) come into effect
                and end.
            participant:
              type: array
              items:
                $ref: "#/components/schemas/CareTeam_Participant"
                description: Identifies all people and organizations who are expected to be
                  involved in the care team.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Describes why the care team exists.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Condition(s) that this care team addresses.
            managingOrganization:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The organization responsible for the care team.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: A central contact detail for the care team (that applies to all
                  members).
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Comments made about the CareTeam.
      example:
        resourceType: CareTeam
        meta:
          tag:
            - code: ibm/minimal
    CareTeam_Participant:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            role:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Indicates specific responsibility of an individual within the care
                  team, such as "Primary care physician", "Trained social worker
                  counselor", "Caregiver", etc.
            member:
              $ref: "#/components/schemas/Reference"
              description: The specific person or organization who is participating/expected
                to participate in the care team.
            onBehalfOf:
              $ref: "#/components/schemas/Reference"
              description: The organization of the practitioner.
            period:
              $ref: "#/components/schemas/Period"
              description: Indicates when the specific member or organization did (or is
                intended to) come into effect and end.
    CatalogEntry:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Used in supporting different identifiers for the same product, e.g.
                  manufacturer code and retailer code.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of item &ndash; medication, device, service, protocol or
                other.
            orderable:
              type: boolean
              description: Whether the entry represents an orderable item.
            referencedItem:
              $ref: "#/components/schemas/Reference"
              description: The item in a catalog or definition.
            additionalIdentifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Used in supporting related concepts, e.g. NDC to RxNorm.
            classification:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Classes of devices, or ATC for medication.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Used to support catalog exchange even for unsupported products,
                e.g. getting list of medications even if not prescribable.
            validityPeriod:
              $ref: "#/components/schemas/Period"
              description: The time period in which this catalog entry is expected to be
                active.
            validTo:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date until which this catalog entry is expected to be active.
            lastUpdated:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Typically date of issue is different from the beginning of the
                validity. This can be used to see when an item was last updated.
            additionalCharacteristic:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Used for examplefor Out of Formulary, or any specifics.
            additionalClassification:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: User for example for ATC classification, or.
            relatedEntry:
              type: array
              items:
                $ref: "#/components/schemas/CatalogEntry_RelatedEntry"
                description: Used for example, to point to a substance, or to a device used to
                  administer a medication.
          required:
            - orderable
            - referencedItem
      example:
        resourceType: CatalogEntry
        meta:
          tag:
            - code: ibm/minimal
        _orderable:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        referencedItem:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    CatalogEntry_RelatedEntry:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            relationtype:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: "The type of relation to the related item: child, parent,
                packageContent, containerPackage, usedIn, uses, requires, etc."
            item:
              $ref: "#/components/schemas/Reference"
              description: The reference to the related item.
          required:
            - relationtype
            - item
    ChargeItem:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers assigned to this event performer or other systems.
            definitionUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: References the (external) source of pricing information, rules of
                  application for the code this ChargeItem uses.
            definitionCanonical:
              type: array
              items:
                type: string
                pattern: \\S*
                description: References the source of pricing information, rules of application
                  for the code this ChargeItem uses.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of the ChargeItem.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: ChargeItems can be grouped to larger ChargeItems covering the whole
                  set.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code that identifies the charge, like a billing code.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The individual or set of individuals the action is being or was
                performed on.
            context:
              $ref: "#/components/schemas/Reference"
              description: The encounter or episode of care that establishes the context for
                this event.
            occurrenceDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date/time(s) or duration when the charged service was applied.
            occurrencePeriod:
              $ref: "#/components/schemas/Period"
              description: Date/time(s) or duration when the charged service was applied.
            occurrenceTiming:
              $ref: "#/components/schemas/Timing"
              description: Date/time(s) or duration when the charged service was applied.
            performer:
              type: array
              items:
                $ref: "#/components/schemas/ChargeItem_Performer"
                description: Indicates who or what performed or participated in the charged
                  service.
            performingOrganization:
              $ref: "#/components/schemas/Reference"
              description: The organization requesting the service.
            requestingOrganization:
              $ref: "#/components/schemas/Reference"
              description: The organization performing the service.
            costCenter:
              $ref: "#/components/schemas/Reference"
              description: The financial cost center permits the tracking of charge
                attribution.
            quantity:
              $ref: "#/components/schemas/Quantity"
              description: Quantity of which the charge item has been serviced.
            bodysite:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The anatomical location where the related service has been applied.
            factorOverride:
              type: number
              description: Factor overriding the factor determined by the rules associated
                with the code.
            priceOverride:
              $ref: "#/components/schemas/Money"
              description: Total price of the charge overriding the list price associated with
                the code.
            overrideReason:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: If the list price or the rule&ndash;based factor associated with
                the code is overridden, this attribute can capture a text to
                indicate the  reason for this action.
            enterer:
              $ref: "#/components/schemas/Reference"
              description: The device, practitioner, etc. who entered the charge item.
            enteredDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date the charge item was entered.
            reason:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Describes why the event occurred in coded or textual form.
            service:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicated the rendered service that caused this charge.
            productReference:
              $ref: "#/components/schemas/Reference"
              description: Identifies the device, food, drug or other product being charged
                either by type code or reference to an instance.
            productCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the device, food, drug or other product being charged
                either by type code or reference to an instance.
            account:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Account into which this ChargeItems belongs.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Comments made about the event by the performer, subject or other
                  participants.
            supportingInformation:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Further information supporting this charge.
          required:
            - status
            - code
            - subject
      example:
        resourceType: ChargeItem
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        code:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ChargeItem_Performer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            function:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes the type of performance or participation(e.g. primary
                surgeon, anesthesiologiest, etc.).
            actor:
              $ref: "#/components/schemas/Reference"
              description: The device, practitioner, etc. who performed or participated in the
                service.
          required:
            - actor
    ChargeItemDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this charge item
                definition when it is referenced in a specification, model,
                design or an instance; also called its canonical identifier.
                This SHOULD be globally unique and SHOULD be a literal address
                at which at which an authoritative instance of this charge item
                definition is (or will be) published. This URL can be the target
                of a canonical reference. It SHALL remain the same when the
                charge item definition is stored on different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this charge item
                  definition when it is represented in other formats, or
                  referenced in a specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the charge
                item definition when it is referenced in a specification, model,
                design or instance. This is an arbitrary value managed by the
                charge item definition author and is not expected to be globally
                unique. For example, it might be a timestamp (e.g. yyyymmdd) if
                a managed version is not available. There is also no expectation
                that versions can be placed in a lexicographical sequence. To
                provide a version consistent with the Decision Support Service
                specification, use the format Major.Minor.Revision (e.g. 1.0.0).
                For more information on versioning knowledge assets, refer to
                the Decision Support Service specification. Note that a version
                is required for non&ndash;experimental active assets.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the charge item
                definition.
            derivedFromUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to an externally&ndash;defined charge item
                  definition that is adhered to in whole or in part by this
                  definition.
            partOf:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A larger definition of which this particular definition is a
                  component or step.
            replaces:
              type: array
              items:
                type: string
                pattern: \\S*
                description: As new versions of a protocol or guideline are defined, allows
                  identification of what versions are replaced by a new
                  instance.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of the ChargeItemDefinition.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this charge item definition is
                authored for testing purposes (or
                education/evaluation/marketing) and is not intended to be used
                for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the charge item definition was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                charge item definition changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                charge item definition.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the charge item
                definition from a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate charge item
                  definition instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the charge item definition is
                  intended to be used.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the charge item definition and/or
                its contents. Copyright statements are generally legal
                restrictions on the use and publishing of the charge item
                definition.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was approved by the
                publisher. Approval happens once when the content is officially
                approved for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was last reviewed. Review
                happens periodically after approval but does not change the
                original approval date.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the charge item definition content was or
                is planned to be in active use.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The defined billing details in this resource pertain to the given
                billing code.
            instance:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The defined billing details in this resource pertain to the given
                  product instance(s).
            applicability:
              type: array
              items:
                $ref: "#/components/schemas/ChargeItemDefinition_Applicability"
                description: Expressions that describe applicability criteria for the billing
                  code.
            propertyGroup:
              type: array
              items:
                $ref: "#/components/schemas/ChargeItemDefinition_PropertyGroup"
                description: Group of properties which are applicable under the same conditions.
                  If no applicability rules are established for the group, then
                  all properties always apply.
          required:
            - url
            - status
      example:
        resourceType: ChargeItemDefinition
        meta:
          tag:
            - code: ibm/minimal
        _url:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ChargeItemDefinition_Applicability:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A brief, natural language description of the condition that
                effectively communicates the intended semantics.
            language:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The media type of the language for the expression, e.g. "text/cql"
                for Clinical Query Language expressions or "text/fhirpath" for
                FHIRPath expressions.
            expression:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An expression that returns true or false, indicating whether the
                condition is satisfied. When using FHIRPath expressions, the
                %context environment variable must be replaced at runtime with
                the ChargeItem resource to which this definition is applied.
    ChargeItemDefinition_PropertyGroup:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            applicability:
              type: array
              items:
                $ref: "#/components/schemas/ChargeItemDefinition_Applicability"
                description: Expressions that describe applicability criteria for the
                  priceComponent.
            priceComponent:
              type: array
              items:
                $ref: "#/components/schemas/ChargeItemDefinition_PropertyGroup_PriceComponent"
                description: The price for a ChargeItem may be calculated as a base price with
                  surcharges/deductions that apply in certain conditions. A
                  ChargeItemDefinition resource that defines the prices, factors
                  and conditions that apply to a billing code is currently under
                  development. The priceComponent element can be used to offer
                  transparency to the recipient of the Invoice of how the prices
                  have been calculated.
    ChargeItemDefinition_PropertyGroup_PriceComponent:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: This code identifies the type of the component.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code that identifies the component. Codes may be used to
                differentiate between kinds of taxes, surcharges, discounts etc.
            factor:
              type: number
              description: The factor that has been applied on the base price for calculating
                this component.
            amount:
              $ref: "#/components/schemas/Money"
              description: The amount calculated for this component.
          required:
            - type
    Citation:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this citation when it is
                referenced in a specification, model, design or an instance;
                also called its canonical identifier. This SHOULD be globally
                unique and SHOULD be a literal address at which at which an
                authoritative instance of this summary is (or will be)
                published. This URL can be the target of a canonical reference.
                It SHALL remain the same when the summary is stored on different
                servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this citation when it
                  is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                citation when it is referenced in a specification, model, design
                or instance. This is an arbitrary value managed by the citation
                author and is not expected to be globally unique. For example,
                it might be a timestamp (e.g. yyyymmdd) if a managed version is
                not available. There is also no expectation that versions can be
                placed in a lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the citation. This name should
                be usable as an identifier for the module by machine processing
                applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the citation.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this summary. Enables tracking the life&ndash;cycle
                of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this citation is authored for
                testing purposes (or education/evaluation/marketing) and is not
                intended to be used for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the citation was published.
                The date must change when the business version changes and it
                must change if the status code changes. In addition, it should
                change when the substantive content of the citation changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                citation.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the citation from a
                consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate citation
                  instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the citation is intended to
                  be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this citation is needed and why it has been
                designed as it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Use and/or publishing restrictions for the Citation, not for the
                cited artifact.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was approved by the
                publisher. Approval happens once when the content is officially
                approved for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was last reviewed. Review
                happens periodically after approval but does not change the
                original approval date.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the citation content was or is planned to
                be in active use.
            author:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Who authored the Citation.
            editor:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Who edited the Citation.
            reviewer:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Who reviewed the Citation.
            endorser:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Who endorsed the Citation.
            summary:
              type: array
              items:
                $ref: "#/components/schemas/Citation_Summary"
                description: A human&ndash;readable display of the citation.
            classification:
              type: array
              items:
                $ref: "#/components/schemas/Citation_Classification"
                description: The assignment to an organizing scheme.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Used for general notes and annotations not coded elsewhere.
            currentState:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The status of the citation.
            statusDate:
              type: array
              items:
                $ref: "#/components/schemas/Citation_StatusDate"
                description: An effective date or period for a status of the citation.
            relatesTo:
              type: array
              items:
                $ref: "#/components/schemas/Citation_RelatesTo"
                description: Artifact related to the Citation Resource.
            citedArtifact:
              $ref: "#/components/schemas/Citation_CitedArtifact"
              description: The article or artifact being described.
          required:
            - status
      example:
        resourceType: Citation
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Citation_CitedArtifact:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this citation when it
                  is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            relatedIdentifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify things closely related
                  to this citation.
            dateAccessed:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When the cited artifact was accessed.
            version:
              $ref: "#/components/schemas/Citation_CitedArtifact_Version"
              description: The defined version of the cited artifact.
            currentState:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The status of the cited artifact.
            statusDate:
              type: array
              items:
                $ref: "#/components/schemas/Citation_CitedArtifact_StatusDate"
                description: An effective date or period for a status of the cited artifact.
            title:
              type: array
              items:
                $ref: "#/components/schemas/Citation_CitedArtifact_Title"
                description: The title details of the article or artifact.
            abstract:
              type: array
              items:
                $ref: "#/components/schemas/Citation_CitedArtifact_Abstract"
                description: Summary of the article or artifact.
            part:
              $ref: "#/components/schemas/Citation_CitedArtifact_Part"
              description: The component of the article or artifact.
            relatesTo:
              type: array
              items:
                $ref: "#/components/schemas/Citation_CitedArtifact_RelatesTo"
                description: The artifact related to the cited artifact.
            publicationForm:
              type: array
              items:
                $ref: "#/components/schemas/Citation_CitedArtifact_PublicationForm"
                description: If multiple, used to represent alternative forms of the article
                  that are not separate citations.
            webLocation:
              type: array
              items:
                $ref: "#/components/schemas/Citation_CitedArtifact_WebLocation"
                description: Used for any URL for the article or artifact cited.
            classification:
              type: array
              items:
                $ref: "#/components/schemas/Citation_CitedArtifact_Classification"
                description: The assignment to an organizing scheme.
            contributorship:
              $ref: "#/components/schemas/Citation_CitedArtifact_Contributorship"
              description: This element is used to list authors and other contributors, their
                contact information, specific contributions, and summary
                statements.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Any additional information or content for the article or artifact.
    Citation_CitedArtifact_Abstract:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Used to express the reason or specific aspect for the abstract.
            language:
              $ref: "#/components/schemas/CodeableConcept"
              description: Used to express the specific language.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Abstract content.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Copyright notice for the abstract.
          required:
            - text
    Citation_CitedArtifact_Classification:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of classifier (e.g. publication type, keyword).
            classifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The specific classification value.
            whoClassified:
              $ref: "#/components/schemas/Citation_CitedArtifact_Classification_WhoClassified"
              description: Provenance and copyright of classification.
    Citation_CitedArtifact_Classification_WhoClassified:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            person:
              $ref: "#/components/schemas/Reference"
              description: Person who created the classification.
            organization:
              $ref: "#/components/schemas/Reference"
              description: Organization who created the classification.
            publisher:
              $ref: "#/components/schemas/Reference"
              description: The publisher of the classification, not the publisher of the
                article or artifact being cited.
            classifierCopyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Rights management statement for the classification.
            freeToShare:
              type: boolean
              description: Acceptable to re&ndash;use the classification.
    Citation_CitedArtifact_Contributorship:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            complete:
              type: boolean
              description: Indicates if the list includes all authors and/or contributors.
            entry:
              type: array
              items:
                $ref: "#/components/schemas/Citation_CitedArtifact_Contributorship_Entry"
                description: An individual entity named in the author list or contributor list.
            summary:
              type: array
              items:
                $ref: "#/components/schemas/Citation_CitedArtifact_Contributorship_Summary"
                description: Used to record a display of the author/contributor list without
                  separate coding for each list member.
    Citation_CitedArtifact_Contributorship_Entry:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              $ref: "#/components/schemas/HumanName"
              description: A name associated with the individual.
            initials:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Initials for forename.
            collectiveName:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Used for collective or corporate name as an author.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Unique person identifier.
            affiliationInfo:
              type: array
              items:
                $ref: "#/components/schemas/Citation_CitedArtifact_Contributorship_Entry_Affili\
                  ationInfo"
                description: Organization affiliated with the entity.
            address:
              type: array
              items:
                $ref: "#/components/schemas/Address"
                description: Physical mailing address for the author or contributor.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: Email or telephone contact methods for the author or contributor.
            contributionType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: This element identifies the specific nature of an
                  individual&rsquo;s contribution with respect to the cited
                  work.
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: The role of the contributor (e.g. author, editor, reviewer).
            contributionInstance:
              type: array
              items:
                $ref: "#/components/schemas/Citation_CitedArtifact_Contributorship_Entry_Contri\
                  butionInstance"
                description: Contributions with accounting for time or number.
            correspondingContact:
              type: boolean
              description: Indication of which contributor is the corresponding contributor
                for the role.
            listOrder:
              type: integer
              format: int32
              description: Used to code order of authors.
    Citation_CitedArtifact_Contributorship_Entry_AffiliationInfo:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            affiliation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Display for the organization.
            role:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Role within the organization, such as professional title.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier for the organization.
    Citation_CitedArtifact_Contributorship_Entry_ContributionInstance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The specific contribution.
            time:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time that the contribution was made.
          required:
            - type
    Citation_CitedArtifact_Contributorship_Summary:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Used most commonly to express an author list or a contributorship
                statement.
            style:
              $ref: "#/components/schemas/CodeableConcept"
              description: Format for display of the citation.
            source:
              $ref: "#/components/schemas/CodeableConcept"
              description: Used to code the producer or rule for creating the display string.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The display string for the author list, contributor list, or
                contributorship statement.
          required:
            - value
    Citation_CitedArtifact_Part:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of component.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The specification of the component.
            baseCitation:
              $ref: "#/components/schemas/Reference"
              description: The citation for the full article or artifact.
    Citation_CitedArtifact_PublicationForm:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            publishedIn:
              $ref: "#/components/schemas/Citation_CitedArtifact_PublicationForm_PublishedIn"
              description: The collection the cited article or artifact is published in.
            periodicRelease:
              $ref: "#/components/schemas/Citation_CitedArtifact_PublicationForm_PeriodicRele\
                ase"
              description: The specific issue in which the cited article resides.
            articleDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date the article was added to the database, or the date the
                article was released (which may differ from the journal issue
                publication date).
            lastRevisionDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date the article was last revised or updated in the database.
            language:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Language in which this form of the article is published.
            accessionNumber:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Entry number or identifier for inclusion in a database.
            pageString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Used for full display of pagination.
            firstPage:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Used for isolated representation of first page.
            lastPage:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Used for isolated representation of last page.
            pageCount:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Actual or approximate number of pages or screens.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Copyright notice for the full article or artifact.
    Citation_CitedArtifact_PublicationForm_PeriodicRelease:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            citedMedium:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes the form of the medium cited. Common codes are "Internet"
                or "Print".
            volume:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Volume number of journal in which the article is published.
            issue:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Issue, part or supplement of journal in which the article is
                published.
            dateOfPublication:
              $ref: "#/components/schemas/Citation_CitedArtifact_PublicationForm_PeriodicRele\
                ase_DateOfPublication"
              description: Defining the date on which the issue of the journal was published.
    Citation_CitedArtifact_PublicationForm_PeriodicRelease_DateOfPublication:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Date on which the issue of the journal was published.
            year:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Year on which the issue of the journal was published.
            month:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Month on which the issue of the journal was published.
            day:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Day on which the issue of the journal was published.
            season:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Spring, Summer, Fall/Autumn, Winter.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Text representation of the date of which the issue of the journal
                was published.
    Citation_CitedArtifact_PublicationForm_PublishedIn:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Kind of container (e.g. Periodical, database, or book).
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Journal identifiers include ISSN, ISO Abbreviation and NLMuniqueID;
                  Book identifiers include ISBN.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Name of the database or title of the book or journal.
            publisher:
              $ref: "#/components/schemas/Reference"
              description: Name of the publisher.
            publisherLocation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Geographic location of the publisher.
    Citation_CitedArtifact_RelatesTo:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            relationshipType:
              $ref: "#/components/schemas/CodeableConcept"
              description: How the Citation resource relates to the target artifact.
            targetClassifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The clasification of the related artifact.
            targetUri:
              type: string
              pattern: \\S*
              description: The article or artifact that the Citation Resource is related to.
            targetIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: The article or artifact that the Citation Resource is related to.
            targetReference:
              $ref: "#/components/schemas/Reference"
              description: The article or artifact that the Citation Resource is related to.
            targetAttachment:
              $ref: "#/components/schemas/Attachment"
              description: The article or artifact that the Citation Resource is related to.
          required:
            - relationshipType
    Citation_CitedArtifact_StatusDate:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            activity:
              $ref: "#/components/schemas/CodeableConcept"
              description: Classification of the status.
            actual:
              type: boolean
              description: Either occurred or expected.
            period:
              $ref: "#/components/schemas/Period"
              description: When the status started and/or ended.
          required:
            - activity
            - period
    Citation_CitedArtifact_Title:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Used to express the reason or specific aspect for the title.
            language:
              $ref: "#/components/schemas/CodeableConcept"
              description: Used to express the specific language.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The title of the article or artifact.
          required:
            - text
    Citation_CitedArtifact_Version:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The version number or other version identifier.
            baseCitation:
              $ref: "#/components/schemas/Reference"
              description: Citation for the main version of the cited artifact.
          required:
            - value
    Citation_CitedArtifact_WebLocation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code the reason for different URLs, e.g. abstract and
                full&ndash;text.
            url:
              type: string
              pattern: \\S*
              description: The specific URL.
    Citation_Classification:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of classifier (e.g. publication type, keyword).
            classifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The specific classification value.
    Citation_RelatesTo:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            relationshipType:
              $ref: "#/components/schemas/CodeableConcept"
              description: How the Citation resource relates to the target artifact.
            targetClassifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The clasification of the related artifact.
            targetUri:
              type: string
              pattern: \\S*
              description: The article or artifact that the Citation Resource is related to.
            targetIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: The article or artifact that the Citation Resource is related to.
            targetReference:
              $ref: "#/components/schemas/Reference"
              description: The article or artifact that the Citation Resource is related to.
            targetAttachment:
              $ref: "#/components/schemas/Attachment"
              description: The article or artifact that the Citation Resource is related to.
          required:
            - relationshipType
    Citation_StatusDate:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            activity:
              $ref: "#/components/schemas/CodeableConcept"
              description: Classification of the status.
            actual:
              type: boolean
              description: Either occurred or expected.
            period:
              $ref: "#/components/schemas/Period"
              description: When the status started and/or ended.
          required:
            - activity
            - period
    Citation_Summary:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            style:
              $ref: "#/components/schemas/CodeableConcept"
              description: Format for display of the citation.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The human&ndash;readable display of the citation.
          required:
            - text
    Claim:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this claim.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The category of claim, e.g. oral, pharmacy, vision, institutional,
                professional.
            subType:
              $ref: "#/components/schemas/CodeableConcept"
              description: A finer grained suite of claim type codes which may convey
                additional information such as Inpatient vs Outpatient and/or a
                specialty service.
            use:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: "A code to indicate whether the nature of the request is: to
                request adjudication of products and services previously
                rendered; or requesting authorization and adjudication for
                provision in the future; or requesting the non&ndash;binding
                adjudication of the listed products and services which could be
                provided in the future."
            patient:
              $ref: "#/components/schemas/Reference"
              description: The party to whom the professional services and/or products have
                been supplied or are being considered and for whom actual or
                forecast reimbursement is sought.
            billablePeriod:
              $ref: "#/components/schemas/Period"
              description: The period for which charges are being submitted.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date this resource was created.
            enterer:
              $ref: "#/components/schemas/Reference"
              description: Individual who created the claim, predetermination or
                preauthorization.
            insurer:
              $ref: "#/components/schemas/Reference"
              description: The Insurer who is target of the request.
            provider:
              $ref: "#/components/schemas/Reference"
              description: The provider which is responsible for the claim, predetermination
                or preauthorization.
            priority:
              $ref: "#/components/schemas/CodeableConcept"
              description: "The provider&ndash;required urgency of processing the request.
                Typical values include: stat, routine deferred."
            fundsReserve:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code to indicate whether and for whom funds are to be reserved
                for future claims.
            related:
              type: array
              items:
                $ref: "#/components/schemas/Claim_Related"
                description: Other claims which are related to this claim such as prior
                  submissions or claims for related services or for the same
                  event.
            prescription:
              $ref: "#/components/schemas/Reference"
              description: Prescription to support the dispensing of pharmacy, device or
                vision products.
            originalPrescription:
              $ref: "#/components/schemas/Reference"
              description: Original prescription which has been superseded by this
                prescription to support the dispensing of pharmacy services,
                medications or products.
            payee:
              $ref: "#/components/schemas/Claim_Payee"
              description: The party to be reimbursed for cost of the products and services
                according to the terms of the policy.
            referral:
              $ref: "#/components/schemas/Reference"
              description: A reference to a referral resource.
            facility:
              $ref: "#/components/schemas/Reference"
              description: Facility where the services were provided.
            careTeam:
              type: array
              items:
                $ref: "#/components/schemas/Claim_CareTeam"
                description: The members of the team who provided the products and services.
            supportingInfo:
              type: array
              items:
                $ref: "#/components/schemas/Claim_SupportingInfo"
                description: Additional information codes regarding exceptions, special
                  considerations, the condition, situation, prior or concurrent
                  issues.
            diagnosis:
              type: array
              items:
                $ref: "#/components/schemas/Claim_Diagnosis"
                description: Information about diagnoses relevant to the claim items.
            procedure:
              type: array
              items:
                $ref: "#/components/schemas/Claim_Procedure"
                description: Procedures performed on the patient relevant to the billing items
                  with the claim.
            insurance:
              type: array
              items:
                $ref: "#/components/schemas/Claim_Insurance"
                description: Financial instruments for reimbursement for the health care
                  products and services specified on the claim.
              minItems: 1
            accident:
              $ref: "#/components/schemas/Claim_Accident"
              description: Details of an accident which resulted in injuries which required
                the products and services listed in the claim.
            item:
              type: array
              items:
                $ref: "#/components/schemas/Claim_Item"
                description: A claim line. Either a simple  product or service or a 'group' of
                  details which can each be a simple items or groups of
                  sub&ndash;details.
            total:
              $ref: "#/components/schemas/Money"
              description: The total value of the all the items in the claim.
          required:
            - status
            - type
            - use
            - patient
            - created
            - provider
            - priority
            - insurance
      example:
        resourceType: Claim
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        type:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        _use:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _created:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        provider:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        priority:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        insurance:
          - _sequence:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
            _focal:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
            coverage:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    Claim_Accident:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Date of an accident event  related to the products and services
                contained in the claim.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type or context of the accident event for the purposes of
                selection of potential insurance coverages and determination of
                coordination between insurers.
            locationAddress:
              $ref: "#/components/schemas/Address"
              description: The physical location of the accident event.
            locationReference:
              $ref: "#/components/schemas/Reference"
              description: The physical location of the accident event.
          required:
            - date
    Claim_CareTeam:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify care team entries.
            provider:
              $ref: "#/components/schemas/Reference"
              description: Member of the team who provided the product or service.
            responsible:
              type: boolean
              description: The party who is billing and/or responsible for the claimed
                products or services.
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: The lead, assisting or supervising practitioner and their
                discipline if a multidisciplinary team.
            qualification:
              $ref: "#/components/schemas/CodeableConcept"
              description: The qualification of the practitioner which is applicable for this
                service.
          required:
            - sequence
            - provider
    Claim_Diagnosis:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify diagnosis entries.
            diagnosisCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The nature of illness or problem in a coded form or as a reference
                to an external defined Condition.
            diagnosisReference:
              $ref: "#/components/schemas/Reference"
              description: The nature of illness or problem in a coded form or as a reference
                to an external defined Condition.
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: When the condition was observed or the relative ranking.
            onAdmission:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indication of whether the diagnosis was present on admission to a
                facility.
            packageCode:
              $ref: "#/components/schemas/CodeableConcept"
              description: A package billing code or bundle code used to group products and
                services to a particular health condition (such as heart attack)
                which is based on a predetermined grouping code system.
          required:
            - sequence
    Claim_Insurance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify insurance entries and provide a
                sequence of coverages to convey coordination of benefit order.
            focal:
              type: boolean
              description: A flag to indicate that this Coverage is to be used for
                adjudication of this claim when set to true.
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: The business identifier to be used when the claim is sent for
                adjudication against this insurance policy.
            coverage:
              $ref: "#/components/schemas/Reference"
              description: Reference to the insurance card level information contained in the
                Coverage resource. The coverage issuing insurer will use these
                details to locate the patient's actual coverage within the
                insurer's information system.
            businessArrangement:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A business agreement number established between the provider and
                the insurer for special business processing purposes.
            preAuthRef:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Reference numbers previously provided by the insurer to the
                  provider to be quoted on subsequent claims containing services
                  or products related to the prior authorization.
            claimResponse:
              $ref: "#/components/schemas/Reference"
              description: The result of the adjudication of the line items for the Coverage
                specified in this insurance.
          required:
            - sequence
            - focal
            - coverage
    Claim_Item:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify item entries.
            careTeamSequence:
              type: array
              items:
                type: integer
                format: int32
                description: CareTeam members related to this service or product.
            diagnosisSequence:
              type: array
              items:
                type: integer
                format: int32
                description: Diagnosis applicable for this service or product.
            procedureSequence:
              type: array
              items:
                type: integer
                format: int32
                description: Procedures applicable for this service or product.
            informationSequence:
              type: array
              items:
                type: integer
                format: int32
                description: Exceptions, special conditions and supporting information
                  applicable for this service or product.
            revenue:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of revenue or cost center providing the product and/or
                service.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code to identify the general type of benefits under which products
                and services are provided.
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            programCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies the program under which this may be recovered.
            servicedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date or dates when the service or product was supplied,
                performed or completed.
            servicedPeriod:
              $ref: "#/components/schemas/Period"
              description: The date or dates when the service or product was supplied,
                performed or completed.
            locationCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Where the product or service was provided.
            locationAddress:
              $ref: "#/components/schemas/Address"
              description: Where the product or service was provided.
            locationReference:
              $ref: "#/components/schemas/Reference"
              description: Where the product or service was provided.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            udi:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Unique Device Identifiers associated with this line item.
            bodySite:
              $ref: "#/components/schemas/CodeableConcept"
              description: Physical service site on the patient (limb, tooth, etc.).
            subSite:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A region or surface of the bodySite, e.g. limb region or tooth
                  surface(s).
            encounter:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The Encounters during which this Claim was created or to which the
                  creation of this record is tightly associated.
            detail:
              type: array
              items:
                $ref: "#/components/schemas/Claim_Item_Detail"
                description: A claim detail line. Either a simple (a product or service) or a
                  'group' of sub&ndash;details which are simple items.
          required:
            - sequence
            - productOrService
    Claim_Item_Detail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify item entries.
            revenue:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of revenue or cost center providing the product and/or
                service.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code to identify the general type of benefits under which products
                and services are provided.
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            programCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies the program under which this may be recovered.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            udi:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Unique Device Identifiers associated with this line item.
            subDetail:
              type: array
              items:
                $ref: "#/components/schemas/Claim_Item_Detail_SubDetail"
                description: A claim detail line. Either a simple (a product or service) or a
                  'group' of sub&ndash;details which are simple items.
          required:
            - sequence
            - productOrService
    Claim_Item_Detail_SubDetail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify item entries.
            revenue:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of revenue or cost center providing the product and/or
                service.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code to identify the general type of benefits under which products
                and services are provided.
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            programCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies the program under which this may be recovered.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            udi:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Unique Device Identifiers associated with this line item.
          required:
            - sequence
            - productOrService
    Claim_Payee:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: "Type of Party to be reimbursed: subscriber, provider, other."
            party:
              $ref: "#/components/schemas/Reference"
              description: Reference to the individual or organization to whom any payment
                will be made.
          required:
            - type
    Claim_Procedure:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify procedure entries.
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: When the condition was observed or the relative ranking.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date and optionally time the procedure was performed.
            procedureCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The code or reference to a Procedure resource which identifies the
                clinical intervention performed.
            procedureReference:
              $ref: "#/components/schemas/Reference"
              description: The code or reference to a Procedure resource which identifies the
                clinical intervention performed.
            udi:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Unique Device Identifiers associated with this line item.
          required:
            - sequence
    Claim_Related:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            claim:
              $ref: "#/components/schemas/Reference"
              description: Reference to a related claim.
            relationship:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code to convey how the claims are related.
            reference:
              $ref: "#/components/schemas/Identifier"
              description: An alternate organizational reference to the case or file to which
                this particular claim pertains.
    Claim_SupportingInfo:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify supporting information entries.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: "The general class of the information supplied: information;
                exception; accident, employment; onset, etc."
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: System and code pertaining to the specific information regarding
                special conditions relating to the setting, treatment or
                patient  for which care is sought.
            timingDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date when or period to which this information refers.
            timingPeriod:
              $ref: "#/components/schemas/Period"
              description: The date when or period to which this information refers.
            valueBoolean:
              type: boolean
              description: Additional data or information such as resources, documents, images
                etc. including references to the data or the actual inclusion of
                the data.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional data or information such as resources, documents, images
                etc. including references to the data or the actual inclusion of
                the data.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: Additional data or information such as resources, documents, images
                etc. including references to the data or the actual inclusion of
                the data.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: Additional data or information such as resources, documents, images
                etc. including references to the data or the actual inclusion of
                the data.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: Additional data or information such as resources, documents, images
                etc. including references to the data or the actual inclusion of
                the data.
            reason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Provides the reason in the situation where a reason code is
                required in addition to the content.
          required:
            - sequence
            - category
    ClaimResponse:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this claim response.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A finer grained suite of claim type codes which may convey
                additional information such as Inpatient vs Outpatient and/or a
                specialty service.
            subType:
              $ref: "#/components/schemas/CodeableConcept"
              description: A finer grained suite of claim type codes which may convey
                additional information such as Inpatient vs Outpatient and/or a
                specialty service.
            use:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: "A code to indicate whether the nature of the request is: to
                request adjudication of products and services previously
                rendered; or requesting authorization and adjudication for
                provision in the future; or requesting the non&ndash;binding
                adjudication of the listed products and services which could be
                provided in the future."
            patient:
              $ref: "#/components/schemas/Reference"
              description: The party to whom the professional services and/or products have
                been supplied or are being considered and for whom actual for
                facast reimbursement is sought.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date this resource was created.
            insurer:
              $ref: "#/components/schemas/Reference"
              description: The party responsible for authorization, adjudication and
                reimbursement.
            requestor:
              $ref: "#/components/schemas/Reference"
              description: The provider which is responsible for the claim, predetermination
                or preauthorization.
            request:
              $ref: "#/components/schemas/Reference"
              description: Original request resource reference.
            outcome:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The outcome of the claim, predetermination, or preauthorization
                processing.
            disposition:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A human readable description of the status of the adjudication.
            preAuthRef:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Reference from the Insurer which is used in later communications
                which refers to this adjudication.
            preAuthPeriod:
              $ref: "#/components/schemas/Period"
              description: The time frame during which this authorization is effective.
            payeeType:
              $ref: "#/components/schemas/CodeableConcept"
              description: "Type of Party to be reimbursed: subscriber, provider, other."
            item:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Item"
                description: A claim line. Either a simple (a product or service) or a 'group'
                  of details which can also be a simple items or groups of
                  sub&ndash;details.
            addItem:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_AddItem"
                description: The first&ndash;tier service adjudications for payor added product
                  or service lines.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Item_Adjudication"
                description: If this item is a group then the values here are a summary of the
                  adjudication of the detail items. If this item is a simple
                  product or service then this is the result of the adjudication
                  of this item.
              minItems: 1
            total:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Total"
                description: Categorized monetary totals for the adjudication.
            payment:
              $ref: "#/components/schemas/ClaimResponse_Payment"
              description: Payment details for the adjudication of the claim.
            fundsReserve:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code, used only on a response to a preauthorization, to indicate
                whether the benefits payable have been reserved and for whom.
            formCode:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code for the form to be used for printing the content.
            form:
              $ref: "#/components/schemas/Attachment"
              description: The actual form, by reference or inclusion, for printing the
                content or an EOB.
            processNote:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_ProcessNote"
                description: A note that describes or explains adjudication results in a human
                  readable form.
            communicationRequest:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Request for additional supporting or authorizing information.
            insurance:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Insurance"
                description: Financial instruments for reimbursement for the health care
                  products and services specified on the claim.
            error:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Error"
                description: Errors encountered during the processing of the adjudication.
          required:
            - status
            - type
            - use
            - patient
            - created
            - insurer
            - outcome
      example:
        resourceType: ClaimResponse
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        type:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        _use:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _created:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        insurer:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _outcome:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ClaimResponse_AddItem:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            itemSequence:
              type: array
              items:
                type: integer
                format: int32
                description: Claim items which this service line is intended to replace.
            detailSequence:
              type: array
              items:
                type: integer
                format: int32
                description: The sequence number of the details within the claim item which this
                  line is intended to replace.
            subdetailSequence:
              type: array
              items:
                type: integer
                format: int32
                description: The sequence number of the sub&ndash;details within the details
                  within the claim item which this line is intended to replace.
            provider:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The providers who are authorized for the services rendered to the
                  patient.
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            programCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies the program under which this may be recovered.
            servicedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date or dates when the service or product was supplied,
                performed or completed.
            servicedPeriod:
              $ref: "#/components/schemas/Period"
              description: The date or dates when the service or product was supplied,
                performed or completed.
            locationCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Where the product or service was provided.
            locationAddress:
              $ref: "#/components/schemas/Address"
              description: Where the product or service was provided.
            locationReference:
              $ref: "#/components/schemas/Reference"
              description: Where the product or service was provided.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            bodySite:
              $ref: "#/components/schemas/CodeableConcept"
              description: Physical service site on the patient (limb, tooth, etc.).
            subSite:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A region or surface of the bodySite, e.g. limb region or tooth
                  surface(s).
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Item_Adjudication"
                description: The adjudication results.
              minItems: 1
            detail:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_AddItem_Detail"
                description: The second&ndash;tier service adjudications for payor added
                  services.
          required:
            - productOrService
            - adjudication
    ClaimResponse_AddItem_Detail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Item_Adjudication"
                description: The adjudication results.
              minItems: 1
            subDetail:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_AddItem_Detail_SubDetail"
                description: A sub&ndash;detail adjudication of a simple product or service.
          required:
            - productOrService
            - adjudication
    ClaimResponse_AddItem_Detail_SubDetail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Item_Adjudication"
                description: The adjudication results.
          required:
            - productOrService
            - adjudication
    ClaimResponse_Error:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            itemSequence:
              type: integer
              format: int32
              description: The sequence number of the line item submitted which contains the
                error. This value is omitted when the error occurs outside of
                the item structure.
            detailSequence:
              type: integer
              format: int32
              description: The sequence number of the detail within the line item submitted
                which contains the error. This value is omitted when the error
                occurs outside of the item structure.
            subDetailSequence:
              type: integer
              format: int32
              description: The sequence number of the sub&ndash;detail within the detail
                within the line item submitted which contains the error. This
                value is omitted when the error occurs outside of the item
                structure.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: An error code, from a specified code system, which details why the
                claim could not be adjudicated.
          required:
            - code
    ClaimResponse_Insurance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify insurance entries and provide a
                sequence of coverages to convey coordination of benefit order.
            focal:
              type: boolean
              description: A flag to indicate that this Coverage is to be used for
                adjudication of this claim when set to true.
            coverage:
              $ref: "#/components/schemas/Reference"
              description: Reference to the insurance card level information contained in the
                Coverage resource. The coverage issuing insurer will use these
                details to locate the patient's actual coverage within the
                insurer's information system.
            businessArrangement:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A business agreement number established between the provider and
                the insurer for special business processing purposes.
            claimResponse:
              $ref: "#/components/schemas/Reference"
              description: The result of the adjudication of the line items for the Coverage
                specified in this insurance.
          required:
            - sequence
            - focal
            - coverage
    ClaimResponse_Item:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            itemSequence:
              type: integer
              format: int32
              description: A number to uniquely reference the claim item entries.
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Item_Adjudication"
                description: If this item is a group then the values here are a summary of the
                  adjudication of the detail items. If this item is a simple
                  product or service then this is the result of the adjudication
                  of this item.
              minItems: 1
            detail:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Item_Detail"
                description: A claim detail. Either a simple (a product or service) or a 'group'
                  of sub&ndash;details which are simple items.
          required:
            - itemSequence
            - adjudication
    ClaimResponse_Item_Adjudication:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: "A code to indicate the information type of this adjudication
                record. Information types may include the value submitted,
                maximum values or percentages allowed or payable under the plan,
                amounts that: the patient is responsible for in aggregate or
                pertaining to this item; amounts paid by other coverages; and,
                the benefit payable for this item."
            reason:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code supporting the understanding of the adjudication result and
                explaining variance from expected amount.
            amount:
              $ref: "#/components/schemas/Money"
              description: Monetary amount associated with the category.
            value:
              type: number
              description: A non&ndash;monetary value associated with the category. Mutually
                exclusive to the amount element above.
          required:
            - category
    ClaimResponse_Item_Detail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            detailSequence:
              type: integer
              format: int32
              description: A number to uniquely reference the claim detail entry.
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Item_Adjudication"
                description: The adjudication results.
              minItems: 1
            subDetail:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Item_Detail_SubDetail"
                description: A sub&ndash;detail adjudication of a simple product or service.
          required:
            - detailSequence
            - adjudication
    ClaimResponse_Item_Detail_SubDetail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            subDetailSequence:
              type: integer
              format: int32
              description: A number to uniquely reference the claim sub&ndash;detail entry.
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ClaimResponse_Item_Adjudication"
                description: The adjudication results.
          required:
            - subDetailSequence
    ClaimResponse_Payment:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Whether this represents partial or complete payment of the benefits
                payable.
            adjustment:
              $ref: "#/components/schemas/Money"
              description: Total amount of all adjustments to this payment included in this
                transaction which are not related to this claim's adjudication.
            adjustmentReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Reason for the payment adjustment.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Estimated date the payment will be issued or the actual issue date
                of payment.
            amount:
              $ref: "#/components/schemas/Money"
              description: Benefits payable less any payment adjustment.
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Issuer's unique identifier for the payment instrument.
          required:
            - type
            - amount
    ClaimResponse_ProcessNote:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            number:
              type: integer
              format: int32
              description: A number to uniquely identify a note entry.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The business purpose of the note text.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The explanation or description associated with the processing.
            language:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code to define the language used in the text of the note.
          required:
            - text
    ClaimResponse_Total:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: "A code to indicate the information type of this adjudication
                record. Information types may include: the value submitted,
                maximum values or percentages allowed or payable under the plan,
                amounts that the patient is responsible for in aggregate or
                pertaining to this item, amounts paid by other coverages, and
                the benefit payable for this item."
            amount:
              $ref: "#/components/schemas/Money"
              description: Monetary total amount associated with the category.
          required:
            - category
            - amount
    ClinicalImpression:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this clinical impression by the
                  performer or other systems which remain constant as the
                  resource is updated and propagates from server to server.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identifies the workflow status of the assessment.
            statusReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Captures the reason for the current state of the
                ClinicalImpression.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Categorizes the type of clinical assessment performed.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A summary of the context and/or cause of the assessment &ndash; why
                / where it was performed, and what patient events/status
                prompted it.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The patient or group of individuals assessed as part of this
                record.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The Encounter during which this ClinicalImpression was created or
                to which the creation of this record is tightly associated.
            effectiveDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The point in time or period over which the subject was assessed.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The point in time or period over which the subject was assessed.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Indicates when the documentation of the assessment was complete.
            assessor:
              $ref: "#/components/schemas/Reference"
              description: The clinician performing the assessment.
            previous:
              $ref: "#/components/schemas/Reference"
              description: A reference to the last assessment that was conducted on this
                patient. Assessments are often/usually ongoing in nature; a care
                provider (practitioner or team) will make new assessments on an
                ongoing basis as new data arises or the patient's conditions
                changes.
            problem:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A list of the relevant problems/conditions for a patient.
            investigation:
              type: array
              items:
                $ref: "#/components/schemas/ClinicalImpression_Investigation"
                description: One or more sets of investigations (signs, symptoms, etc.). The
                  actual grouping of investigations varies greatly depending on
                  the type and context of the assessment. These investigations
                  may include data generated during the assessment process, or
                  data previously generated and recorded that is pertinent to
                  the outcomes.
            protocol:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Reference to a specific published clinical protocol that was
                  followed during this assessment, and/or that provides evidence
                  in support of the diagnosis.
            summary:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A text summary of the investigations and the diagnosis.
            finding:
              type: array
              items:
                $ref: "#/components/schemas/ClinicalImpression_Finding"
                description: Specific findings or diagnoses that were considered likely or
                  relevant to ongoing treatment.
            prognosisCodeableConcept:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Estimate of likely outcome.
            prognosisReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: RiskAssessment expressing likely outcome.
            supportingInfo:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Information supporting the clinical impression.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Commentary about the impression, typically recorded after the
                  impression itself was made, though supplemental notes by the
                  original author could also appear.
          required:
            - status
            - subject
      example:
        resourceType: ClinicalImpression
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ClinicalImpression_Finding:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            itemCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specific text or code for finding or diagnosis, which may include
                ruled&ndash;out or resolved conditions.
            itemReference:
              $ref: "#/components/schemas/Reference"
              description: Specific reference for finding or diagnosis, which may include
                ruled&ndash;out or resolved conditions.
            basis:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Which investigations support finding or diagnosis.
    ClinicalImpression_Investigation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A name/code for the group ("set") of investigations. Typically,
                this will be something like "signs", "symptoms", "clinical",
                "diagnostic", but the list is not constrained, and others such
                groups such as (exposure|family|travel|nutritional) history may
                be used.
            item:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A record of a specific investigation that was undertaken.
          required:
            - code
    ClinicalUseDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifier for this issue.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: indication | contraindication | interaction |
                undesirable&ndash;effect | warning.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A categorisation of the issue, primarily for dividing warnings into
                  subject heading areas such as "Pregnancy and Lactation",
                  "Overdose", "Effects on Ability to Drive and Use Machines".
            subject:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The medication or procedure for which this is an indication.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: Whether this is a current issue or one that has been retired etc.
            contraindication:
              $ref: "#/components/schemas/ClinicalUseDefinition_Contraindication"
              description: Specifics for when this is a contraindication.
            indication:
              $ref: "#/components/schemas/ClinicalUseDefinition_Indication"
              description: Specifics for when this is a contraindication.
            interaction:
              $ref: "#/components/schemas/ClinicalUseDefinition_Interaction"
              description: Specifics for when this is an interaction.
            population:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The population group to which this applies.
            undesirableEffect:
              $ref: "#/components/schemas/ClinicalUseDefinition_UndesirableEffect"
              description: An unwanted side effect or negative outcome that may happen if you
                use the drug (or other subject of this resource) for this
                indication.
            warning:
              $ref: "#/components/schemas/ClinicalUseDefinition_Warning"
              description: A critical piece of information about environmental, health or
                physical risks or hazards that serve as caution to the user. For
                example 'Do not operate heavy machinery', 'May cause
                drowsiness', or 'Get medical advice/attention if you feel
                unwell'.
          required:
            - type
      example:
        resourceType: ClinicalUseDefinition
        meta:
          tag:
            - code: ibm/minimal
        _type:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ClinicalUseDefinition_Contraindication:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            diseaseSymptomProcedure:
              $ref: "#/components/schemas/CodeableReference"
              description: The situation that is being documented as contraindicating against
                this item.
            diseaseStatus:
              $ref: "#/components/schemas/CodeableReference"
              description: The status of the disease or symptom for the contraindication, for
                example "chronic" or "metastatic".
            comorbidity:
              type: array
              items:
                $ref: "#/components/schemas/CodeableReference"
                description: A comorbidity (concurrent condition) or coinfection.
            indication:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The indication which this is a contraidication for.
            otherTherapy:
              type: array
              items:
                $ref: "#/components/schemas/ClinicalUseDefinition_Contraindication_OtherTherapy"
                description: Information about the use of the medicinal product in relation to
                  other therapies described as part of the contraindication.
    ClinicalUseDefinition_Contraindication_OtherTherapy:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            relationshipType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of relationship between the medicinal product indication
                or contraindication and another therapy.
            therapy:
              $ref: "#/components/schemas/CodeableReference"
              description: Reference to a specific medication (active substance, medicinal
                product or class of products) as part of an indication or
                contraindication.
          required:
            - relationshipType
            - therapy
    ClinicalUseDefinition_Indication:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            diseaseSymptomProcedure:
              $ref: "#/components/schemas/CodeableReference"
              description: The situation that is being documented as contraindicating against
                this item.
            diseaseStatus:
              $ref: "#/components/schemas/CodeableReference"
              description: The status of the disease or symptom for the contraindication, for
                example "chronic" or "metastatic".
            comorbidity:
              type: array
              items:
                $ref: "#/components/schemas/CodeableReference"
                description: A comorbidity (concurrent condition) or coinfection.
            intendedEffect:
              $ref: "#/components/schemas/CodeableReference"
              description: The intended effect, aim or strategy to be achieved.
            durationRange:
              $ref: "#/components/schemas/Range"
              description: Timing or duration information, that may be associated with use
                with the indicated condition e.g. Adult patients suffering from
                myocardial infarction (from a few days until less than 35 days),
                ischaemic stroke (from 7 days until less than 6 months).
            durationString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Timing or duration information, that may be associated with use
                with the indicated condition e.g. Adult patients suffering from
                myocardial infarction (from a few days until less than 35 days),
                ischaemic stroke (from 7 days until less than 6 months).
            undesirableEffect:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: An unwanted side effect or negative outcome that may happen if you
                  use the drug (or other subject of this resource) for this
                  indication.
            otherTherapy:
              type: array
              items:
                $ref: "#/components/schemas/ClinicalUseDefinition_Contraindication_OtherTherapy"
                description: Information about the use of the medicinal product in relation to
                  other therapies described as part of the contraindication.
    ClinicalUseDefinition_Interaction:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            interactant:
              type: array
              items:
                $ref: "#/components/schemas/ClinicalUseDefinition_Interaction_Interactant"
                description: The specific medication, food, substance or laboratory test that
                  interacts.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of the interaction e.g. drug&ndash;drug interaction,
                drug&ndash;food interaction, drug&ndash;lab test interaction.
            effect:
              $ref: "#/components/schemas/CodeableReference"
              description: The effect of the interaction, for example "reduced gastric
                absorption of primary medication".
            incidence:
              $ref: "#/components/schemas/CodeableConcept"
              description: The incidence of the interaction, e.g. theoretical, observed.
            management:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Actions for managing the interaction.
    ClinicalUseDefinition_Interaction_Interactant:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            itemReference:
              $ref: "#/components/schemas/Reference"
              description: The specific medication, food or laboratory test that interacts.
            itemCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The specific medication, food or laboratory test that interacts.
    ClinicalUseDefinition_UndesirableEffect:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            symptomConditionEffect:
              $ref: "#/components/schemas/CodeableReference"
              description: The situation in which the undesirable effect may manifest.
            classification:
              $ref: "#/components/schemas/CodeableConcept"
              description: High level classification of the effect.
            frequencyOfOccurrence:
              $ref: "#/components/schemas/CodeableConcept"
              description: How often the effect is seen.
    ClinicalUseDefinition_Warning:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A textual definition of this warning, with formatting.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A coded or unformatted textual definition of this warning.
    CodeSystem:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this code system when it
                is referenced in a specification, model, design or an instance;
                also called its canonical identifier. This SHOULD be globally
                unique and SHOULD be a literal address at which at which an
                authoritative instance of this code system is (or will be)
                published. This URL can be the target of a canonical reference.
                It SHALL remain the same when the code system is stored on
                different servers. This is used in
                [Coding](datatypes.html#Coding).system.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this code system when
                  it is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the code
                system when it is referenced in a specification, model, design
                or instance. This is an arbitrary value managed by the code
                system author and is not expected to be globally unique. For
                example, it might be a timestamp (e.g. yyyymmdd) if a managed
                version is not available. There is also no expectation that
                versions can be placed in a lexicographical sequence. This is
                used in [Coding](datatypes.html#Coding).version.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the code system. This name
                should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the code
                system.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The date (and optionally time) when the code system resource was
                created or revised.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this code system is authored for
                testing purposes (or education/evaluation/marketing) and is not
                intended to be used for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the code system was published.
                The date must change when the business version changes and it
                must change if the status code changes. In addition, it should
                change when the substantive content of the code system changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the code
                system.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the code system from a
                consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate code system
                  instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the code system is intended
                  to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this code system is needed and why it has been
                designed as it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the code system and/or its
                contents. Copyright statements are generally legal restrictions
                on the use and publishing of the code system.
            caseSensitive:
              type: boolean
              description: If code comparison is case sensitive when codes within this system
                are compared to each other.
            valueSet:
              type: string
              pattern: \\S*
              description: Canonical reference to the value set that contains the entire code
                system.
            hierarchyMeaning:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The meaning of the hierarchy of concepts as represented in this
                resource.
            compositional:
              type: boolean
              description: The code system defines a compositional (post&ndash;coordination)
                grammar.
            versionNeeded:
              type: boolean
              description: This flag is used to signify that the code system does not commit
                to concept permanence across versions. If true, a version must
                be specified when referencing this code system.
            content:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The extent of the content of the code system (the concepts and
                codes it defines) are represented in this resource instance.
            supplements:
              type: string
              pattern: \\S*
              description: The canonical URL of the code system that this code system
                supplement is adding designations and properties to.
            count:
              type: integer
              format: int32
              description: The total number of concepts defined by the code system. Where the
                code system has a compositional grammar, the basis of this count
                is defined by the system steward.
            filter:
              type: array
              items:
                $ref: "#/components/schemas/CodeSystem_Filter"
                description: A filter that can be used in a value set compose statement when
                  selecting concepts using a filter.
            property:
              type: array
              items:
                $ref: "#/components/schemas/CodeSystem_Property"
                description: A property defines an additional slot through which additional
                  information can be provided about a concept.
            concept:
              type: array
              items:
                $ref: "#/components/schemas/CodeSystem_Concept"
                description: Concepts that are in the code system. The concept definitions are
                  inherently hierarchical, but the definitions must be consulted
                  to determine what the meanings of the hierarchical
                  relationships are.
          required:
            - status
            - content
      example:
        resourceType: CodeSystem
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _content:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    CodeSystem_Concept:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code &ndash; a text symbol &ndash; that uniquely identifies the
                concept within the code system.
            display:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A human readable string that is the recommended default way to
                present this concept to a user.
            definition:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The formal definition of the concept. The code system resource does
                not make formal definitions required, because of the prevalence
                of legacy systems. However, they are highly recommended, as
                without them there is no formal meaning associated with the
                concept.
            designation:
              type: array
              items:
                $ref: "#/components/schemas/CodeSystem_Concept_Designation"
                description: Additional representations for the concept &ndash; other languages,
                  aliases, specialized purposes, used for particular purposes,
                  etc.
            property:
              type: array
              items:
                $ref: "#/components/schemas/CodeSystem_Concept_Property"
                description: A property value for this concept.
            concept:
              type: array
              items:
                $ref: "#/components/schemas/CodeSystem_Concept"
                description: Defines children of a concept to produce a hierarchy of concepts.
                  The nature of the relationships is variable
                  (is&ndash;a/contains/categorizes) &ndash; see
                  hierarchyMeaning.
          required:
            - code
    CodeSystem_Concept_Designation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            language:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The language this designation is defined for.
            use:
              $ref: "#/components/schemas/Coding"
              description: A code that details how this designation would be used.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The text value for this designation.
          required:
            - value
    CodeSystem_Concept_Property:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code that is used to identify the property. The code is used
                internally (in CodeSystem.concept.property.code) and also
                externally, such as in property filters.
            valueCode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The value of this property.
            valueCoding:
              $ref: "#/components/schemas/Coding"
              description: The value of this property.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value of this property.
            valueInteger:
              type: integer
              format: int32
              description: The value of this property.
            valueBoolean:
              type: boolean
              description: The value of this property.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The value of this property.
            valueDecimal:
              type: number
              description: The value of this property.
          required:
            - code
    CodeSystem_Filter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The code that identifies this filter when it is used as a filter in
                [ValueSet](valueset.html#).compose.include.filter.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of how or why the filter is used.
            operator:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: A list of operators that can be used with the filter.
              minItems: 1
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of what the value for the filter should be.
          required:
            - code
            - operator
            - value
    CodeSystem_Property:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code that is used to identify the property. The code is used
                internally (in CodeSystem.concept.property.code) and also
                externally, such as in property filters.
            uri:
              type: string
              pattern: \\S*
              description: Reference to the formal meaning of the property. One possible
                source of meaning is the [Concept
                Properties](codesystem&ndash;concept&ndash;properties.html) code
                system.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of the property&ndash; why it is defined, and how its
                value might be used.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of the property value. Properties of type "code" contain a
                code defined by the code system (e.g. a reference to another
                defined concept).
          required:
            - code
            - type
    Communication:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this communication by the
                  performer or other systems which remain constant as the
                  resource is updated and propagates from server to server.
            instantiatesCanonical:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to a FHIR&ndash;defined protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this Communication.
            instantiatesUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to an externally maintained protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this Communication.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: An order, proposal or plan fulfilled in whole or in part by this
                  Communication.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Part of this action.
            inResponseTo:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Prior communication that this communication is in response to.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the transmission.
            statusReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Captures the reason for the current state of the Communication.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The type of message conveyed such as alert, notification, reminder,
                  instruction, etc.
            priority:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Characterizes how quickly the planned or in progress communication
                must be addressed. Includes concepts such as stat, urgent,
                routine.
            medium:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A channel that was used for this communication (e.g. email, fax).
            subject:
              $ref: "#/components/schemas/Reference"
              description: The patient or group that was the focus of this communication.
            topic:
              $ref: "#/components/schemas/CodeableConcept"
              description: Description of the purpose/content, similar to a subject line in an
                email.
            about:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Other resources that pertain to this communication and to which
                  this communication should be associated.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The Encounter during which this Communication was created or to
                which the creation of this record is tightly associated.
            sent:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time when this communication was sent.
            received:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time when this communication arrived at the destination.
            recipient:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The entity (e.g. person, organization, clinical information system,
                  care team or device) which was the target of the
                  communication. If receipts need to be tracked by an
                  individual, a separate resource instance will need to be
                  created for each recipient.  Multiple recipient communications
                  are intended where either receipts are not tracked (e.g. a
                  mass mail&ndash;out) or a receipt is captured in aggregate
                  (all emails confirmed received by a particular time).
            sender:
              $ref: "#/components/schemas/Reference"
              description: The entity (e.g. person, organization, clinical information system,
                or device) which was the source of the communication.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The reason or justification for the communication.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates another resource whose existence justifies this
                  communication.
            payload:
              type: array
              items:
                $ref: "#/components/schemas/Communication_Payload"
                description: Text, attachment(s), or resource(s) that was communicated to the
                  recipient.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Additional notes or commentary about the communication by the
                  sender, receiver or other interested parties.
          required:
            - status
      example:
        resourceType: Communication
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Communication_Payload:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            contentString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A communicated content (or for multi&ndash;part communications, one
                portion of the communication).
            contentAttachment:
              $ref: "#/components/schemas/Attachment"
              description: A communicated content (or for multi&ndash;part communications, one
                portion of the communication).
            contentReference:
              $ref: "#/components/schemas/Reference"
              description: A communicated content (or for multi&ndash;part communications, one
                portion of the communication).
    CommunicationRequest:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this communication request by the
                  performer or other systems which remain constant as the
                  resource is updated and propagates from server to server.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A plan or proposal that is fulfilled in whole or in part by this
                  request.
            replaces:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Completed or terminated request(s) whose function is taken by this
                  new request.
            groupIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: A shared identifier common to all requests that were authorized
                more or less simultaneously by a single author, representing the
                identifier of the requisition, prescription or similar form.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the proposal or order.
            statusReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Captures the reason for the current state of the
                CommunicationRequest.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The type of message to be sent such as alert, notification,
                  reminder, instruction, etc.
            priority:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Characterizes how quickly the proposed act must be initiated.
                Includes concepts such as stat, urgent, routine.
            doNotPerform:
              type: boolean
              description: If true indicates that the CommunicationRequest is asking for the
                specified action to *not* occur.
            medium:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A channel that was used for this communication (e.g. email, fax).
            subject:
              $ref: "#/components/schemas/Reference"
              description: The patient or group that is the focus of this communication
                request.
            about:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Other resources that pertain to this communication request and to
                  which this communication request should be associated.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The Encounter during which this CommunicationRequest was created or
                to which the creation of this record is tightly associated.
            payload:
              type: array
              items:
                $ref: "#/components/schemas/CommunicationRequest_Payload"
                description: Text, attachment(s), or resource(s) to be communicated to the
                  recipient.
            occurrenceDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time when this communication is to occur.
            occurrencePeriod:
              $ref: "#/components/schemas/Period"
              description: The time when this communication is to occur.
            authoredOn:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: For draft requests, indicates the date of initial creation.  For
                requests with other statuses, indicates the date of activation.
            requester:
              $ref: "#/components/schemas/Reference"
              description: The device, individual, or organization who initiated the request
                and has responsibility for its activation.
            recipient:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The entity (e.g. person, organization, clinical information system,
                  device, group, or care team) which is the intended target of
                  the communication.
            sender:
              $ref: "#/components/schemas/Reference"
              description: The entity (e.g. person, organization, clinical information system,
                or device) which is to be the source of the communication.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Describes why the request is being made in coded or textual form.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates another resource whose existence justifies this request.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Comments made about the request by the requester, sender,
                  recipient, subject or other participants.
          required:
            - status
      example:
        resourceType: CommunicationRequest
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    CommunicationRequest_Payload:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            contentString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The communicated content (or for multi&ndash;part communications,
                one portion of the communication).
            contentAttachment:
              $ref: "#/components/schemas/Attachment"
              description: The communicated content (or for multi&ndash;part communications,
                one portion of the communication).
            contentReference:
              $ref: "#/components/schemas/Reference"
              description: The communicated content (or for multi&ndash;part communications,
                one portion of the communication).
    CompartmentDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this compartment
                definition when it is referenced in a specification, model,
                design or an instance; also called its canonical identifier.
                This SHOULD be globally unique and SHOULD be a literal address
                at which at which an authoritative instance of this compartment
                definition is (or will be) published. This URL can be the target
                of a canonical reference. It SHALL remain the same when the
                compartment definition is stored on different servers.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                compartment definition when it is referenced in a specification,
                model, design or instance. This is an arbitrary value managed by
                the compartment definition author and is not expected to be
                globally unique. For example, it might be a timestamp (e.g.
                yyyymmdd) if a managed version is not available. There is also
                no expectation that versions can be placed in a lexicographical
                sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the compartment definition.
                This name should be usable as an identifier for the module by
                machine processing applications such as code generation.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this compartment definition. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this compartment definition is
                authored for testing purposes (or
                education/evaluation/marketing) and is not intended to be used
                for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the compartment definition was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                compartment definition changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                compartment definition.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the compartment
                definition from a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate compartment
                  definition instances.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this compartment definition is needed and why it
                has been designed as it has.
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Which compartment this definition describes.
            search:
              type: boolean
              description: Whether the search syntax is supported,.
            resource:
              type: array
              items:
                $ref: "#/components/schemas/CompartmentDefinition_Resource"
                description: Information about how a resource is related to the compartment.
          required:
            - url
            - name
            - status
            - code
            - search
      example:
        resourceType: CompartmentDefinition
        meta:
          tag:
            - code: ibm/minimal
        _url:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _name:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _code:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _search:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    CompartmentDefinition_Resource:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The name of a resource supported by the server.
            param:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: The name of a search parameter that represents the link to the
                  compartment. More than one may be listed because a resource
                  may be linked to a compartment in more than one way,.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional documentation about the resource and compartment.
          required:
            - code
    Composition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: A version&ndash;independent identifier for the Composition. This
                identifier stays constant as the composition is changed over
                time.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The workflow/clinical status of this composition. The status is a
                marker for the clinical standing of the document.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specifies the particular kind of composition (e.g. History and
                Physical, Discharge Summary, Progress Note). This usually
                equates to the purpose of making the composition.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A categorization for the type of the composition &ndash; helps for
                  indexing and searching. This may be implied by or derived from
                  the code specified in the Composition Type.
            subject:
              $ref: "#/components/schemas/Reference"
              description: Who or what the composition is about. The composition can be about
                a person, (patient or healthcare practitioner), a device (e.g. a
                machine) or even a group of subjects (such as a document about a
                herd of livestock, or a set of patients that share a common
                exposure).
            encounter:
              $ref: "#/components/schemas/Reference"
              description: Describes the clinical encounter or type of care this documentation
                is associated with.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The composition editing time, when the composition was last
                logically changed by the author.
            author:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies who is responsible for the information in the
                  composition, not necessarily who typed it in.
              minItems: 1
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Official human&ndash;readable label for the composition.
            confidentiality:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The code specifying the level of confidentiality of the
                Composition.
            attester:
              type: array
              items:
                $ref: "#/components/schemas/Composition_Attester"
                description: A participant who has attested to the accuracy of the
                  composition/document.
            custodian:
              $ref: "#/components/schemas/Reference"
              description: Identifies the organization or group who is responsible for ongoing
                maintenance of and access to the composition/document
                information.
            relatesTo:
              type: array
              items:
                $ref: "#/components/schemas/Composition_RelatesTo"
                description: Relationships that this composition has with other compositions or
                  documents that already exist.
            event:
              type: array
              items:
                $ref: "#/components/schemas/Composition_Event"
                description: The clinical service, such as a colonoscopy or an appendectomy,
                  being documented.
            section:
              type: array
              items:
                $ref: "#/components/schemas/Composition_Section"
                description: The root of the sections that make up the composition.
          required:
            - status
            - type
            - date
            - author
            - title
      example:
        resourceType: Composition
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        type:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        _date:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        author:
          - extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
        _title:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Composition_Attester:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of attestation the authenticator offers.
            time:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When the composition was attested by the party.
            party:
              $ref: "#/components/schemas/Reference"
              description: Who attested the composition in the specified way.
          required:
            - mode
    Composition_Event:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: This list of codes represents the main clinical acts, such as a
                  colonoscopy or an appendectomy, being documented. In some
                  cases, the event is inherent in the typeCode, such as a
                  "History and Physical Report" in which the procedure being
                  documented is necessarily a "History and Physical" act.
            period:
              $ref: "#/components/schemas/Period"
              description: The period of time covered by the documentation. There is no
                assertion that the documentation is a complete representation
                for this period, only that it documents events during this time.
            detail:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The description and/or reference of the event(s) being documented.
                  For example, this could be used to document such a colonoscopy
                  or an appendectomy.
    Composition_RelatesTo:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of relationship that this composition has with anther
                composition or document.
            targetIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: The target composition/document of this relationship.
            targetReference:
              $ref: "#/components/schemas/Reference"
              description: The target composition/document of this relationship.
          required:
            - code
    Composition_Section:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The label for this particular section.  This will be part of the
                rendered content for the document, and is often used to build a
                table of contents.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code identifying the kind of content contained within the
                section. This must be consistent with the section title.
            author:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies who is responsible for the information in this section,
                  not necessarily who typed it in.
            focus:
              $ref: "#/components/schemas/Reference"
              description: The actual focus of the section when it is not the subject of the
                composition, but instead represents something or someone
                associated with the subject such as (for a patient subject) a
                spouse, parent, fetus, or donor. If not focus is specified, the
                focus is assumed to be focus of the parent section, or, for a
                section in the Composition itself, the subject of the
                composition. Sections with a focus SHALL only include resources
                where the logical subject (patient, subject, focus, etc.)
                matches the section focus, or the resources have no logical
                subject (few resources).
            text:
              $ref: "#/components/schemas/Narrative"
              description: A human&ndash;readable narrative that contains the attested content
                of the section, used to represent the content of the resource to
                a human. The narrative need not encode all the structured data,
                but is required to contain sufficient detail to make it
                "clinically safe" for a human to just read the narrative.
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the entry list was prepared &ndash; whether it is a working
                list that is suitable for being maintained on an ongoing basis,
                or if it represents a snapshot of a list of items from another
                source, or whether it is a prepared list where items may be
                marked as added, modified or deleted.
            orderedBy:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specifies the order applied to the items in the section entries.
            entry:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A reference to the actual resource from which the narrative in the
                  section is derived.
            emptyReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: If the section is empty, why the list is empty. An empty section
                typically has some text explaining the empty reason.
            section:
              type: array
              items:
                $ref: "#/components/schemas/Composition_Section"
                description: A nested sub&ndash;section within this section.
    ConceptMap:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this concept map when it
                is referenced in a specification, model, design or an instance;
                also called its canonical identifier. This SHOULD be globally
                unique and SHOULD be a literal address at which at which an
                authoritative instance of this concept map is (or will be)
                published. This URL can be the target of a canonical reference.
                It SHALL remain the same when the concept map is stored on
                different servers.
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: A formal identifier that is used to identify this concept map when
                it is represented in other formats, or referenced in a
                specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the concept
                map when it is referenced in a specification, model, design or
                instance. This is an arbitrary value managed by the concept map
                author and is not expected to be globally unique. For example,
                it might be a timestamp (e.g. yyyymmdd) if a managed version is
                not available. There is also no expectation that versions can be
                placed in a lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the concept map. This name
                should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the concept
                map.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this concept map. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this concept map is authored for
                testing purposes (or education/evaluation/marketing) and is not
                intended to be used for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the concept map was published.
                The date must change when the business version changes and it
                must change if the status code changes. In addition, it should
                change when the substantive content of the concept map changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                concept map.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the concept map from a
                consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate concept map
                  instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the concept map is intended
                  to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this concept map is needed and why it has been
                designed as it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the concept map and/or its
                contents. Copyright statements are generally legal restrictions
                on the use and publishing of the concept map.
            sourceUri:
              type: string
              pattern: \\S*
              description: Identifier for the source value set that contains the concepts that
                are being mapped and provides context for the mappings.
            sourceCanonical:
              type: string
              pattern: \\S*
              description: Identifier for the source value set that contains the concepts that
                are being mapped and provides context for the mappings.
            targetUri:
              type: string
              pattern: \\S*
              description: The target value set provides context for the mappings. Note that
                the mapping is made between concepts, not between value sets,
                but the value set provides important context about how the
                concept mapping choices are made.
            targetCanonical:
              type: string
              pattern: \\S*
              description: The target value set provides context for the mappings. Note that
                the mapping is made between concepts, not between value sets,
                but the value set provides important context about how the
                concept mapping choices are made.
            group:
              type: array
              items:
                $ref: "#/components/schemas/ConceptMap_Group"
                description: A group of mappings that all have the same source and target
                  system.
          required:
            - status
      example:
        resourceType: ConceptMap
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ConceptMap_Group:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            source:
              type: string
              pattern: \\S*
              description: An absolute URI that identifies the source system where the
                concepts to be mapped are defined.
            sourceVersion:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The specific version of the code system, as determined by the code
                system authority.
            target:
              type: string
              pattern: \\S*
              description: An absolute URI that identifies the target system that the concepts
                will be mapped to.
            targetVersion:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The specific version of the code system, as determined by the code
                system authority.
            element:
              type: array
              items:
                $ref: "#/components/schemas/ConceptMap_Group_Element"
                description: Mappings for an individual concept in the source to one or more
                  concepts in the target.
              minItems: 1
            unmapped:
              $ref: "#/components/schemas/ConceptMap_Group_Unmapped"
              description: What to do when there is no mapping for the source concept.
                "Unmapped" does not include codes that are unmatched, and the
                unmapped element is ignored in a code is specified to have
                equivalence = unmatched.
          required:
            - element
    ConceptMap_Group_Element:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identity (code or path) or the element/item being mapped.
            display:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The display for the code. The display is only provided to help
                editors when editing the concept map.
            target:
              type: array
              items:
                $ref: "#/components/schemas/ConceptMap_Group_Element_Target"
                description: A concept from the target value set that this concept maps to.
    ConceptMap_Group_Element_Target:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identity (code or path) or the element/item that the map refers to.
            display:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The display for the code. The display is only provided to help
                editors when editing the concept map.
            equivalence:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The equivalence between the source and target concepts (counting
                for the dependencies and products). The equivalence is read from
                target to source (e.g. the target is 'wider' than the source).
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of status/issues in mapping that conveys additional
                information not represented in  the structured data.
            dependsOn:
              type: array
              items:
                $ref: "#/components/schemas/ConceptMap_Group_Element_Target_DependsOn"
                description: A set of additional dependencies for this mapping to hold. This
                  mapping is only applicable if the specified element can be
                  resolved, and it has the specified value.
            product:
              type: array
              items:
                $ref: "#/components/schemas/ConceptMap_Group_Element_Target_DependsOn"
                description: A set of additional outcomes from this mapping to other elements.
                  To properly execute this mapping, the specified element must
                  be mapped to some data element or source that is in context.
                  The mapping may still be useful without a place for the
                  additional data elements, but the equivalence cannot be relied
                  on.
          required:
            - equivalence
    ConceptMap_Group_Element_Target_DependsOn:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            property:
              type: string
              pattern: \\S*
              description: A reference to an element that holds a coded value that corresponds
                to a code system property. The idea is that the information
                model carries an element somewhere that is labeled to correspond
                with a code system property.
            system:
              type: string
              pattern: \\S*
              description: An absolute URI that identifies the code system of the dependency
                code (if the source/dependency is a value set that crosses code
                systems).
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Identity (code or path) or the element/item/ValueSet/text that the
                map depends on / refers to.
            display:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The display for the code. The display is only provided to help
                editors when editing the concept map.
          required:
            - property
            - value
    ConceptMap_Group_Unmapped:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: "Defines which action to take if there is no match for the source
                concept in the target system designated for the group. One of 3
                actions are possible: use the unmapped code (this is useful when
                doing a mapping between versions, and only a few codes have
                changed), use a fixed code (a default code), or alternatively, a
                reference to a different concept map can be provided (by
                canonical URL)."
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The fixed code to use when the mode = 'fixed'  &ndash; all unmapped
                codes are mapped to a single fixed code.
            display:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The display for the code. The display is only provided to help
                editors when editing the concept map.
            url:
              type: string
              pattern: \\S*
              description: The canonical reference to an additional ConceptMap resource
                instance to use for mapping if this ConceptMap resource contains
                no matching mapping for the source concept.
          required:
            - mode
    Condition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this condition by the performer or
                  other systems which remain constant as the resource is updated
                  and propagates from server to server.
            clinicalStatus:
              $ref: "#/components/schemas/CodeableConcept"
              description: The clinical status of the condition.
            verificationStatus:
              $ref: "#/components/schemas/CodeableConcept"
              description: The verification status to support the clinical status of the
                condition.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A category assigned to the condition.
            severity:
              $ref: "#/components/schemas/CodeableConcept"
              description: A subjective assessment of the severity of the condition as
                evaluated by the clinician.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identification of the condition, problem or diagnosis.
            bodySite:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The anatomical location where this condition manifests itself.
            subject:
              $ref: "#/components/schemas/Reference"
              description: Indicates the patient or group who the condition record is
                associated with.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The Encounter during which this Condition was created or to which
                the creation of this record is tightly associated.
            onsetDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Estimated or actual date or date&ndash;time  the condition began,
                in the opinion of the clinician.
            onsetAge:
              $ref: "#/components/schemas/Age"
              description: Estimated or actual date or date&ndash;time  the condition began,
                in the opinion of the clinician.
            onsetPeriod:
              $ref: "#/components/schemas/Period"
              description: Estimated or actual date or date&ndash;time  the condition began,
                in the opinion of the clinician.
            onsetRange:
              $ref: "#/components/schemas/Range"
              description: Estimated or actual date or date&ndash;time  the condition began,
                in the opinion of the clinician.
            onsetString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Estimated or actual date or date&ndash;time  the condition began,
                in the opinion of the clinician.
            abatementDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date or estimated date that the condition resolved or went into
                remission. This is called "abatement" because of the many
                overloaded connotations associated with "remission" or
                "resolution" &ndash; Conditions are never really resolved, but
                they can abate.
            abatementAge:
              $ref: "#/components/schemas/Age"
              description: The date or estimated date that the condition resolved or went into
                remission. This is called "abatement" because of the many
                overloaded connotations associated with "remission" or
                "resolution" &ndash; Conditions are never really resolved, but
                they can abate.
            abatementPeriod:
              $ref: "#/components/schemas/Period"
              description: The date or estimated date that the condition resolved or went into
                remission. This is called "abatement" because of the many
                overloaded connotations associated with "remission" or
                "resolution" &ndash; Conditions are never really resolved, but
                they can abate.
            abatementRange:
              $ref: "#/components/schemas/Range"
              description: The date or estimated date that the condition resolved or went into
                remission. This is called "abatement" because of the many
                overloaded connotations associated with "remission" or
                "resolution" &ndash; Conditions are never really resolved, but
                they can abate.
            abatementString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The date or estimated date that the condition resolved or went into
                remission. This is called "abatement" because of the many
                overloaded connotations associated with "remission" or
                "resolution" &ndash; Conditions are never really resolved, but
                they can abate.
            recordedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The recordedDate represents when this particular Condition record
                was created in the system, which is often a
                system&ndash;generated date.
            recorder:
              $ref: "#/components/schemas/Reference"
              description: Individual who recorded the record and takes responsibility for its
                content.
            asserter:
              $ref: "#/components/schemas/Reference"
              description: Individual who is making the condition statement.
            stage:
              type: array
              items:
                $ref: "#/components/schemas/Condition_Stage"
                description: Clinical stage or grade of a condition. May include formal severity
                  assessments.
            evidence:
              type: array
              items:
                $ref: "#/components/schemas/Condition_Evidence"
                description: Supporting evidence / manifestations that are the basis of the
                  Condition's verification status, such as evidence that
                  confirmed or refuted the condition.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Additional information about the Condition. This is a general
                  notes/comments entry  for description of the Condition, its
                  diagnosis and prognosis.
          required:
            - subject
      example:
        resourceType: Condition
        meta:
          tag:
            - code: ibm/minimal
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Condition_Evidence:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A manifestation or symptom that led to the recording of this
                  condition.
            detail:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Links to other relevant information, including pathology reports.
    Condition_Stage:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            summary:
              $ref: "#/components/schemas/CodeableConcept"
              description: A simple summary of the stage such as "Stage 3". The determination
                of the stage is disease&ndash;specific.
            assessment:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Reference to a formal record of the evidence on which the staging
                  assessment is based.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of staging, such as pathological or clinical staging.
    Consent:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Unique identifier for this copy of the Consent Statement.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the current state of this consent.
            scope:
              $ref: "#/components/schemas/CodeableConcept"
              description: "A selector of the type of consent being presented: ADR, Privacy,
                Treatment, Research.  This list is now extensible."
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A classification of the type of consents found in the statement.
                  This element supports indexing and retrieval of consent
                  statements.
              minItems: 1
            patient:
              $ref: "#/components/schemas/Reference"
              description: The patient/healthcare consumer to whom this consent applies.
            dateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When this  Consent was issued / created / indexed.
            performer:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Either the Grantor, which is the entity responsible for granting
                  the rights listed in a Consent Directive or the Grantee, which
                  is the entity responsible for complying with the Consent
                  Directive, including any obligations or limitations on
                  authorizations and enforcement of prohibitions.
            organization:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The organization that manages the consent, and the framework within
                  which it is executed.
            sourceAttachment:
              $ref: "#/components/schemas/Attachment"
              description: The source on which this consent statement is based. The source
                might be a scanned original paper form, or a reference to a
                consent that links back to such a source, a reference to a
                document repository (e.g. XDS) that stores the original consent
                document.
            sourceReference:
              $ref: "#/components/schemas/Reference"
              description: The source on which this consent statement is based. The source
                might be a scanned original paper form, or a reference to a
                consent that links back to such a source, a reference to a
                document repository (e.g. XDS) that stores the original consent
                document.
            policy:
              type: array
              items:
                $ref: "#/components/schemas/Consent_Policy"
                description: The references to the policies that are included in this consent
                  scope. Policies may be organizational, but are often defined
                  jurisdictionally, or in law.
            policyRule:
              $ref: "#/components/schemas/CodeableConcept"
              description: A reference to the specific base computable regulation or policy.
            verification:
              type: array
              items:
                $ref: "#/components/schemas/Consent_Verification"
                description: Whether a treatment instruction (e.g. artificial respiration yes or
                  no) was verified with the patient, his/her family or another
                  authorized person.
            provision:
              $ref: "#/components/schemas/Consent_Provision"
              description: An exception to the base policy of this consent. An exception can
                be an addition or removal of access permissions.
          required:
            - status
            - scope
            - category
      example:
        resourceType: Consent
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        scope:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        category:
          - coding:
              - extension:
                  - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                    valueCode: unknown
    Consent_Policy:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            authority:
              type: string
              pattern: \\S*
              description: Entity or Organization having regulatory jurisdiction or
                accountability for  enforcing policies pertaining to Consent
                Directives.
            uri:
              type: string
              pattern: \\S*
              description: The references to the policies that are included in this consent
                scope. Policies may be organizational, but are often defined
                jurisdictionally, or in law.
    Consent_Provision:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Action  to take &ndash; permit or deny &ndash; when the rule
                conditions are met.  Not permitted in root rule, required in all
                nested rules.
            period:
              $ref: "#/components/schemas/Period"
              description: The timeframe in this rule is valid.
            actor:
              type: array
              items:
                $ref: "#/components/schemas/Consent_Provision_Actor"
                description: Who or what is controlled by this rule. Use group to identify a set
                  of actors by some property they share (e.g. 'admitting
                  officers').
            action:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Actions controlled by this Rule.
            securityLabel:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: A security label, comprised of 0..* security label fields (Privacy
                  tags), which define which resources are controlled by this
                  exception.
            purpose:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: The context of the activities a user is taking &ndash; why the user
                  is accessing the data &ndash; that are controlled by this
                  rule.
            class:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: The class of information covered by this rule. The type can be a
                  FHIR resource type, a profile on a type, or a CDA document, or
                  some other type that indicates what sort of information the
                  consent relates to.
            code:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: If this code is found in an instance, then the rule applies.
            dataPeriod:
              $ref: "#/components/schemas/Period"
              description: Clinical or Operational Relevant period of time that bounds the
                data controlled by this rule.
            data:
              type: array
              items:
                $ref: "#/components/schemas/Consent_Provision_Data"
                description: The resources controlled by this rule if specific resources are
                  referenced.
            provision:
              type: array
              items:
                $ref: "#/components/schemas/Consent_Provision"
                description: Rules which provide exceptions to the base rule or subrules.
    Consent_Provision_Actor:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: How the individual is involved in the resources content that is
                described in the exception.
            reference:
              $ref: "#/components/schemas/Reference"
              description: The resource that identifies the actor. To identify actors by type,
                use group to identify a set of actors by some property they
                share (e.g. 'admitting officers').
          required:
            - role
            - reference
    Consent_Provision_Data:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            meaning:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the resource reference is interpreted when testing consent
                restrictions.
            reference:
              $ref: "#/components/schemas/Reference"
              description: A reference to a specific resource that defines which resources are
                covered by this consent.
          required:
            - meaning
            - reference
    Consent_Verification:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            verified:
              type: boolean
              description: Has the instruction been verified.
            verifiedWith:
              $ref: "#/components/schemas/Reference"
              description: Who verified the instruction (Patient, Relative or other Authorized
                Person).
            verificationDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date verification was collected.
          required:
            - verified
    Contract:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Unique identifier for this Contract or a derivative that references
                  a Source Contract.
            url:
              type: string
              pattern: \\S*
              description: Canonical identifier for this contract, represented as a URI
                (globally unique).
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An edition identifier used for business purposes to label business
                significant variants.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            legalState:
              $ref: "#/components/schemas/CodeableConcept"
              description: Legal states of the formation of a legal instrument, which is a
                formally executed written document that can be formally
                attributed to its author, records and formally expresses a
                legally enforceable act, process, or contractual duty,
                obligation, or right, and therefore evidences that act, process,
                or agreement.
            instantiatesCanonical:
              $ref: "#/components/schemas/Reference"
              description: The URL pointing to a FHIR&ndash;defined Contract Definition that
                is adhered to in whole or part by this Contract.
            instantiatesUri:
              type: string
              pattern: \\S*
              description: The URL pointing to an externally maintained definition that is
                adhered to in whole or in part by this Contract.
            contentDerivative:
              $ref: "#/components/schemas/CodeableConcept"
              description: The minimal content derived from the basal information source at a
                specific stage in its lifecycle.
            issued:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When this  Contract was issued.
            applies:
              $ref: "#/components/schemas/Period"
              description: Relevant time or time&ndash;period when this Contract is
                applicable.
            expirationType:
              $ref: "#/components/schemas/CodeableConcept"
              description: Event resulting in discontinuation or termination of this Contract
                instance by one or more parties to the contract.
            subject:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The target entity impacted by or of interest to parties to the
                  agreement.
            authority:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A formally or informally recognized grouping of people, principals,
                  organizations, or jurisdictions formed for the purpose of
                  achieving some form of collective action such as the
                  promulgation, administration and enforcement of contracts and
                  policies.
            domain:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Recognized governance framework or system operating with a
                  circumscribed scope in accordance with specified principles,
                  policies, processes or procedures for managing rights,
                  actions, or behaviors of parties or principals relative to
                  resources.
            site:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Sites in which the contract is complied with,  exercised, or in
                  force.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying this Contract definition,
                derivative, or instance in any legal state. Provides additional
                information about its content. This name should be usable as an
                identifier for the module by machine processing applications
                such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for this Contract
                definition, derivative, or instance in any legal state.t giving
                additional information about its content.
            subtitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An explanatory or alternate user&ndash;friendly title for this
                Contract definition, derivative, or instance in any legal
                state.t giving additional information about its content.
            alias:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Alternative representation of the title for this Contract
                  definition, derivative, or instance in any legal state., e.g.,
                  a domain specific contract number related to legislation.
            author:
              $ref: "#/components/schemas/Reference"
              description: The individual or organization that authored the Contract
                definition, derivative, or instance in any legal state.
            scope:
              $ref: "#/components/schemas/CodeableConcept"
              description: A selector of legal concerns for this Contract definition,
                derivative, or instance in any legal state.
            topicCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Narrows the range of legal concerns to focus on the achievement of
                specific contractual objectives.
            topicReference:
              $ref: "#/components/schemas/Reference"
              description: Narrows the range of legal concerns to focus on the achievement of
                specific contractual objectives.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A high&ndash;level category for the legal instrument, whether
                constructed as a Contract definition, derivative, or instance in
                any legal state.  Provides additional information about its
                content within the context of the Contract's scope to
                distinguish the kinds of systems that would be interested in the
                contract.
            subType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Sub&ndash;category for the Contract that distinguishes the kinds of
                  systems that would be interested in the Contract within the
                  context of the Contract's scope.
            contentDefinition:
              $ref: "#/components/schemas/Contract_ContentDefinition"
              description: Precusory content developed with a focus and intent of supporting
                the formation a Contract instance, which may be associated with
                and transformable into a Contract.
            term:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Term"
                description: One or more Contract Provisions, which may be related and conveyed
                  as a group, and may contain nested groups.
            supportingInfo:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Information that may be needed by/relevant to the performer in
                  their execution of this term action.
            relevantHistory:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Links to Provenance records for past versions of this Contract
                  definition, derivative, or instance, which identify key state
                  transitions or updates that are likely to be relevant to a
                  user looking at the current version of the Contract.  The
                  Provence.entity indicates the target that was changed in the
                  update.
                  http://build.fhir.org/provenance&ndash;definitions.html#Provenance.entity.
            signer:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Signer"
                description: Parties with legal standing in the Contract, including the
                  principal parties, the grantor(s) and grantee(s), which are
                  any person or organization bound by the contract, and any
                  ancillary parties, which facilitate the execution of the
                  contract such as a notary or witness.
            friendly:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Friendly"
                description: The "patient friendly language" versionof the Contract in whole or
                  in parts. "Patient friendly language" means the representation
                  of the Contract and Contract Provisions in a manner that is
                  readily accessible and understandable by a layperson in
                  accordance with best practices for communication styles that
                  ensure that those agreeing to or signing the Contract
                  understand the roles, actions, obligations, responsibilities,
                  and implication of the agreement.
            legal:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Legal"
                description: List of Legal expressions or representations of this Contract.
            rule:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Rule"
                description: List of Computable Policy Rule Language Representations of this
                  Contract.
            legallyBindingAttachment:
              $ref: "#/components/schemas/Attachment"
              description: 'Legally binding Contract: This is the signed and legally
                recognized representation of the Contract, which is considered
                the "source of truth" and which would be the basis for legal
                action related to enforcement of this Contract.'
            legallyBindingReference:
              $ref: "#/components/schemas/Reference"
              description: 'Legally binding Contract: This is the signed and legally
                recognized representation of the Contract, which is considered
                the "source of truth" and which would be the basis for legal
                action related to enforcement of this Contract.'
      example:
        resourceType: Contract
        meta:
          tag:
            - code: ibm/minimal
    Contract_ContentDefinition:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Precusory content structure and use, i.e., a boilerplate, template,
                application for a contract such as an insurance policy or
                benefits under a program, e.g., workers compensation.
            subType:
              $ref: "#/components/schemas/CodeableConcept"
              description: Detailed Precusory content type.
            publisher:
              $ref: "#/components/schemas/Reference"
              description: The  individual or organization that published the Contract
                precursor content.
            publicationDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date (and optionally time) when the contract was published. The
                date must change when the business version changes and it must
                change if the status code changes. In addition, it should change
                when the substantive content of the contract changes.
            publicationStatus:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: amended | appended | cancelled | disputed |
                entered&ndash;in&ndash;error | executable | executed |
                negotiable | offered | policy | rejected | renewed | revoked |
                resolved | terminated.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to Contract precursor content.
                Copyright statements are generally legal restrictions on the use
                and publishing of the Contract precursor content.
          required:
            - type
            - publicationStatus
    Contract_Friendly:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            contentAttachment:
              $ref: "#/components/schemas/Attachment"
              description: Human readable rendering of this Contract in a format and
                representation intended to enhance comprehension and ensure
                understandability.
            contentReference:
              $ref: "#/components/schemas/Reference"
              description: Human readable rendering of this Contract in a format and
                representation intended to enhance comprehension and ensure
                understandability.
    Contract_Legal:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            contentAttachment:
              $ref: "#/components/schemas/Attachment"
              description: Contract legal text in human renderable form.
            contentReference:
              $ref: "#/components/schemas/Reference"
              description: Contract legal text in human renderable form.
    Contract_Rule:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            contentAttachment:
              $ref: "#/components/schemas/Attachment"
              description: Computable Contract conveyed using a policy rule language (e.g.
                XACML, DKAL, SecPal).
            contentReference:
              $ref: "#/components/schemas/Reference"
              description: Computable Contract conveyed using a policy rule language (e.g.
                XACML, DKAL, SecPal).
    Contract_Signer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/Coding"
              description: Role of this Contract signer, e.g. notary, grantee.
            party:
              $ref: "#/components/schemas/Reference"
              description: Party which is a signator to this Contract.
            signature:
              type: array
              items:
                $ref: "#/components/schemas/Signature"
                description: Legally binding Contract DSIG signature contents in Base64.
              minItems: 1
          required:
            - type
            - party
            - signature
    Contract_Term:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Unique identifier for this particular Contract Provision.
            issued:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When this Contract Provision was issued.
            applies:
              $ref: "#/components/schemas/Period"
              description: Relevant time or time&ndash;period when this Contract Provision is
                applicable.
            topicCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The entity that the term applies to.
            topicReference:
              $ref: "#/components/schemas/Reference"
              description: The entity that the term applies to.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A legal clause or condition contained within a contract that
                requires one or both parties to perform a particular requirement
                by some specified time or prevents one or both parties from
                performing a particular requirement by some specified time.
            subType:
              $ref: "#/components/schemas/CodeableConcept"
              description: A specialized legal clause or condition based on overarching
                contract type.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Statement of a provision in a policy or a contract.
            securityLabel:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Term_SecurityLabel"
                description: Security labels that protect the handling of information about the
                  term and its elements, which may be specifically identified..
            offer:
              $ref: "#/components/schemas/Contract_Term_Offer"
              description: The matter of concern in the context of this provision of the
                agrement.
            asset:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Term_Asset"
                description: Contract Term Asset List.
            action:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Term_Action"
                description: An actor taking a role in an activity for which it can be assigned
                  some degree of responsibility for the activity taking place.
            group:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Term"
                description: Nested group of Contract Provisions.
          required:
            - offer
    Contract_Term_Action:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            doNotPerform:
              type: boolean
              description: True if the term prohibits the  action.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Activity or service obligation to be done or not done, performed or
                not performed, effectuated or not by this Contract term.
            subject:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Term_Action_Subject"
                description: Entity of the action.
            intent:
              $ref: "#/components/schemas/CodeableConcept"
              description: Reason or purpose for the action stipulated by this Contract
                Provision.
            linkId:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Id [identifier??] of the clause or question text related to this
                  action in the referenced form or QuestionnaireResponse.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: Current state of the term action.
            context:
              $ref: "#/components/schemas/Reference"
              description: Encounter or Episode with primary association to specified term
                activity.
            contextLinkId:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Id [identifier??] of the clause or question text related to the
                  requester of this action in the referenced form or
                  QuestionnaireResponse.
            occurrenceDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When action happens.
            occurrencePeriod:
              $ref: "#/components/schemas/Period"
              description: When action happens.
            occurrenceTiming:
              $ref: "#/components/schemas/Timing"
              description: When action happens.
            requester:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Who or what initiated the action and has responsibility for its
                  activation.
            requesterLinkId:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Id [identifier??] of the clause or question text related to the
                  requester of this action in the referenced form or
                  QuestionnaireResponse.
            performerType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The type of individual that is desired or required to perform or
                  not perform the action.
            performerRole:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of role or competency of an individual desired or required
                to perform or not perform the action.
            performer:
              $ref: "#/components/schemas/Reference"
              description: Indicates who or what is being asked to perform (or not perform)
                the ction.
            performerLinkId:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Id [identifier??] of the clause or question text related to the
                  reason type or reference of this  action in the referenced
                  form or QuestionnaireResponse.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Rationale for the action to be performed or not performed.
                  Describes why the action is permitted or prohibited.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates another resource whose existence justifies permitting or
                  not permitting this action.
            reason:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Describes why the action is to be performed or not performed in
                  textual form.
            reasonLinkId:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Id [identifier??] of the clause or question text related to the
                  reason type or reference of this  action in the referenced
                  form or QuestionnaireResponse.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Comments made about the term action made by the requester,
                  performer, subject or other participants.
            securityLabelNumber:
              type: array
              items:
                type: integer
                format: int32
                description: Security labels that protects the action.
          required:
            - type
            - intent
            - status
    Contract_Term_Action_Subject:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            reference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The entity the action is performed or not performed on or for.
              minItems: 1
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: Role type of agent assigned roles in this Contract.
          required:
            - reference
    Contract_Term_Asset:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            scope:
              $ref: "#/components/schemas/CodeableConcept"
              description: Differentiates the kind of the asset .
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Target entity type about which the term may be concerned.
            typeReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Associated entities.
            subtype:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: May be a subtype or part of an offered asset.
            relationship:
              $ref: "#/components/schemas/Coding"
              description: Specifies the applicability of the term to an asset resource
                instance, and instances it refers to orinstances that refer to
                it, and/or are owned by the offeree.
            context:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Term_Asset_Context"
                description: Circumstance of the asset.
            condition:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of the quality and completeness of the asset that imay
                be a factor in its valuation.
            periodType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Type of Asset availability for use or ownership.
            period:
              type: array
              items:
                $ref: "#/components/schemas/Period"
                description: Asset relevant contractual time period.
            usePeriod:
              type: array
              items:
                $ref: "#/components/schemas/Period"
                description: Time period of asset use.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Clause or question text (Prose Object) concerning the asset in a
                linked form, such as a QuestionnaireResponse used in the
                formation of the contract.
            linkId:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Id [identifier??] of the clause or question text about the asset in
                  the referenced form or QuestionnaireResponse.
            answer:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Term_Offer_Answer"
                description: Response to assets.
            securityLabelNumber:
              type: array
              items:
                type: integer
                format: int32
                description: Security labels that protects the asset.
            valuedItem:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Term_Asset_ValuedItem"
                description: Contract Valued Item List.
    Contract_Term_Asset_Context:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            reference:
              $ref: "#/components/schemas/Reference"
              description: Asset context reference may include the creator, custodian, or
                owning Person or Organization (e.g., bank,
                repository),  location held, e.g., building,  jurisdiction.
            code:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Coded representation of the context generally or of the Referenced
                  entity, such as the asset holder type or location.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Context description.
    Contract_Term_Asset_ValuedItem:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            entityCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specific type of Contract Valued Item that may be priced.
            entityReference:
              $ref: "#/components/schemas/Reference"
              description: Specific type of Contract Valued Item that may be priced.
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Identifies a Contract Valued Item instance.
            effectiveTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Indicates the time during which this Contract ValuedItem
                information is effective.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Specifies the units by which the Contract Valued Item is measured
                or counted, and quantifies the countable or measurable Contract
                Valued Item instances.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: A Contract Valued Item unit valuation measure.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of the Contract Valued Item delivered. The concept
                of a Factor allows for a discount or surcharge multiplier to be
                applied to a monetary amount.
            points:
              type: number
              description: An amount that expresses the weighting (based on difficulty, cost
                and/or resource intensiveness) associated with the Contract
                Valued Item delivered. The concept of Points allows for
                assignment of point values for a Contract Valued Item, such that
                a monetary amount can be assigned to each point.
            net:
              $ref: "#/components/schemas/Money"
              description: "Expresses the product of the Contract Valued Item unitQuantity and
                the unitPriceAmt. For example, the formula: unit Quantity * unit
                Price (Cost per Point) * factor Number  * points = net Amount.
                Quantity, factor and points are assumed to be 1 if not
                supplied."
            payment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Terms of valuation.
            paymentDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When payment is due.
            responsible:
              $ref: "#/components/schemas/Reference"
              description: Who will make payment.
            recipient:
              $ref: "#/components/schemas/Reference"
              description: Who will receive payment.
            linkId:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Id  of the clause or question text related to the context of this
                  valuedItem in the referenced form or QuestionnaireResponse.
            securityLabelNumber:
              type: array
              items:
                type: integer
                format: int32
                description: A set of security labels that define which terms are controlled by
                  this condition.
    Contract_Term_Offer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Unique identifier for this particular Contract Provision.
            party:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Term_Offer_Party"
                description: Offer Recipient.
            topic:
              $ref: "#/components/schemas/Reference"
              description: "The owner of an asset has the residual control rights over the
                asset: the right to decide all usages of the asset in any way
                not inconsistent with a prior contract, custom, or law (Hart,
                1995, p. 30)."
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of Contract Provision such as specific requirements, purposes
                for actions, obligations, prohibitions, e.g. life time maximum
                benefit.
            decision:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of choice made by accepting party with respect to an offer
                made by an offeror/ grantee.
            decisionMode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: How the decision about a Contract was conveyed.
            answer:
              type: array
              items:
                $ref: "#/components/schemas/Contract_Term_Offer_Answer"
                description: Response to offer text.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Human readable form of this Contract Offer.
            linkId:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: The id of the clause or question text of the offer in the
                  referenced questionnaire/response.
            securityLabelNumber:
              type: array
              items:
                type: integer
                format: int32
                description: Security labels that protects the offer.
    Contract_Term_Offer_Answer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            valueBoolean:
              type: boolean
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
            valueDecimal:
              type: number
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
            valueInteger:
              type: integer
              format: int32
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
            valueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
            valueUri:
              type: string
              pattern: \\S*
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
            valueCoding:
              $ref: "#/components/schemas/Coding"
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: Response to an offer clause or question text,  which enables
                selection of values to be agreed to, e.g., the period of
                participation, the date of occupancy of a rental, warrently
                duration, or whether biospecimen may be used for further
                research.
    Contract_Term_Offer_Party:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            reference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Participant in the offer.
              minItems: 1
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: How the party participates in the offer.
          required:
            - reference
            - role
    Contract_Term_SecurityLabel:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            number:
              type: array
              items:
                type: integer
                format: int32
                description: Number used to link this term or term element to the applicable
                  Security Label.
            classification:
              $ref: "#/components/schemas/Coding"
              description: Security label privacy tag that species the level of
                confidentiality protection required for this term and/or term
                elements.
            category:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: Security label privacy tag that species the applicable privacy and
                  security policies governing this term and/or term elements.
            control:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: Security label privacy tag that species the manner in which term
                  and/or term elements are to be protected.
          required:
            - classification
    Coverage:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this coverage.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: "The type of coverage: social program, medical plan, accident
                coverage (workers compensation, auto), group health or payment
                by an individual or organization."
            policyHolder:
              $ref: "#/components/schemas/Reference"
              description: The party who 'owns' the insurance policy.
            subscriber:
              $ref: "#/components/schemas/Reference"
              description: The party who has signed&ndash;up for or 'owns' the contractual
                relationship to the policy or to whom the benefit of the policy
                for services rendered to them or their family is due.
            subscriberId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The insurer assigned ID for the Subscriber.
            beneficiary:
              $ref: "#/components/schemas/Reference"
              description: The party who benefits from the insurance coverage; the patient
                when products and/or services are provided.
            dependent:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A unique identifier for a dependent under the coverage.
            relationship:
              $ref: "#/components/schemas/CodeableConcept"
              description: The relationship of beneficiary (patient) to the subscriber.
            period:
              $ref: "#/components/schemas/Period"
              description: Time period during which the coverage is in force. A missing start
                date indicates the start date isn't known, a missing end date
                means the coverage is continuing to be in force.
            payor:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The program or plan underwriter or payor including both insurance
                  and non&ndash;insurance agreements, such as patient&ndash;pay
                  agreements.
              minItems: 1
            class:
              type: array
              items:
                $ref: "#/components/schemas/Coverage_Class"
                description: A suite of underwriter specific classifiers.
            order:
              type: integer
              format: int32
              description: The order of applicability of this coverage relative to other
                coverages which are currently in force. Note, there may be gaps
                in the numbering and this does not imply primary, secondary etc.
                as the specific positioning of coverages depends upon the
                episode of care.
            network:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The insurer&ndash;specific identifier for the insurer&ndash;defined
                network of providers to which the beneficiary may seek treatment
                which will be covered at the 'in&ndash;network' rate, otherwise
                'out of network' terms and conditions apply.
            costToBeneficiary:
              type: array
              items:
                $ref: "#/components/schemas/Coverage_CostToBeneficiary"
                description: A suite of codes indicating the cost category and associated amount
                  which have been detailed in the policy and may have
                  been  included on the health card.
            subrogation:
              type: boolean
              description: When 'subrogation=true' this insurance instance has been included
                not for adjudication but to provide insurers with the details to
                recover costs.
            contract:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The policy(s) which constitute this insurance coverage.
          required:
            - status
            - beneficiary
            - payor
      example:
        resourceType: Coverage
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        beneficiary:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        payor:
          - extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
    Coverage_Class:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of classification for which an insurer&ndash;specific
                class label or number and optional name is provided, for example
                may be used to identify a class of coverage or employer group,
                Policy, Plan.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The alphanumeric string value associated with the insurer issued
                label.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short description for the class.
          required:
            - type
            - value
    Coverage_CostToBeneficiary:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The category of patient centric costs associated with treatment.
            valueQuantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The amount due from the patient for the cost category.
            valueMoney:
              $ref: "#/components/schemas/Money"
              description: The amount due from the patient for the cost category.
            exception:
              type: array
              items:
                $ref: "#/components/schemas/Coverage_CostToBeneficiary_Exception"
                description: A suite of codes indicating exceptions or reductions to patient
                  costs and their effective periods.
    Coverage_CostToBeneficiary_Exception:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The code for the specific exception.
            period:
              $ref: "#/components/schemas/Period"
              description: The timeframe during when the exception is in force.
          required:
            - type
    CoverageEligibilityRequest:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this coverage eligiblity request.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            priority:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the requestor expects the processor to complete processing.
            purpose:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: "Code to specify whether requesting: prior authorization
                  requirements for some service categories or billing codes;
                  benefits for coverages specified or discovered; discovery and
                  return of coverages for the patient; and/or validation that
                  the specified coverage is in&ndash;force at the date/period
                  specified or 'now' if not specified."
              minItems: 1
            patient:
              $ref: "#/components/schemas/Reference"
              description: The party who is the beneficiary of the supplied coverage and for
                whom eligibility is sought.
            servicedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date or dates when the enclosed suite of services were
                performed or completed.
            servicedPeriod:
              $ref: "#/components/schemas/Period"
              description: The date or dates when the enclosed suite of services were
                performed or completed.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date when this resource was created.
            enterer:
              $ref: "#/components/schemas/Reference"
              description: Person who created the request.
            provider:
              $ref: "#/components/schemas/Reference"
              description: The provider which is responsible for the request.
            insurer:
              $ref: "#/components/schemas/Reference"
              description: The Insurer who issued the coverage in question and is the
                recipient of the request.
            facility:
              $ref: "#/components/schemas/Reference"
              description: Facility where the services are intended to be provided.
            supportingInfo:
              type: array
              items:
                $ref: "#/components/schemas/CoverageEligibilityRequest_SupportingInfo"
                description: Additional information codes regarding exceptions, special
                  considerations, the condition, situation, prior or concurrent
                  issues.
            insurance:
              type: array
              items:
                $ref: "#/components/schemas/CoverageEligibilityRequest_Insurance"
                description: Financial instruments for reimbursement for the health care
                  products and services.
            item:
              type: array
              items:
                $ref: "#/components/schemas/CoverageEligibilityRequest_Item"
                description: Service categories or billable services for which benefit details
                  and/or an authorization prior to service delivery may be
                  required by the payor.
          required:
            - status
            - purpose
            - patient
            - created
            - insurer
      example:
        resourceType: CoverageEligibilityRequest
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        purpose:
          - null
        _purpose:
          - extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _created:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        insurer:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    CoverageEligibilityRequest_Insurance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            focal:
              type: boolean
              description: A flag to indicate that this Coverage is to be used for evaluation
                of this request when set to true.
            coverage:
              $ref: "#/components/schemas/Reference"
              description: Reference to the insurance card level information contained in the
                Coverage resource. The coverage issuing insurer will use these
                details to locate the patient's actual coverage within the
                insurer's information system.
            businessArrangement:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A business agreement number established between the provider and
                the insurer for special business processing purposes.
          required:
            - coverage
    CoverageEligibilityRequest_Item:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            supportingInfoSequence:
              type: array
              items:
                type: integer
                format: int32
                description: Exceptions, special conditions and supporting information
                  applicable for this service or product line.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code to identify the general type of benefits under which products
                and services are provided.
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: This contains the product, service, drug or other billing code for
                the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            provider:
              $ref: "#/components/schemas/Reference"
              description: The practitioner who is responsible for the product or service to
                be rendered to the patient.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: The amount charged to the patient by the provider for a single
                unit.
            facility:
              $ref: "#/components/schemas/Reference"
              description: Facility where the services will be provided.
            diagnosis:
              type: array
              items:
                $ref: "#/components/schemas/CoverageEligibilityRequest_Item_Diagnosis"
                description: Patient diagnosis for which care is sought.
            detail:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The plan/proposal/order describing the proposed service in detail.
    CoverageEligibilityRequest_Item_Diagnosis:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            diagnosisCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The nature of illness or problem in a coded form or as a reference
                to an external defined Condition.
            diagnosisReference:
              $ref: "#/components/schemas/Reference"
              description: The nature of illness or problem in a coded form or as a reference
                to an external defined Condition.
    CoverageEligibilityRequest_SupportingInfo:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify supporting information entries.
            information:
              $ref: "#/components/schemas/Reference"
              description: Additional data or information such as resources, documents, images
                etc. including references to the data or the actual inclusion of
                the data.
            appliesToAll:
              type: boolean
              description: The supporting materials are applicable for all detail items,
                product/servce categories and specific billing codes.
          required:
            - sequence
            - information
    CoverageEligibilityResponse:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this coverage eligiblity request.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            purpose:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: "Code to specify whether requesting: prior authorization
                  requirements for some service categories or billing codes;
                  benefits for coverages specified or discovered; discovery and
                  return of coverages for the patient; and/or validation that
                  the specified coverage is in&ndash;force at the date/period
                  specified or 'now' if not specified."
              minItems: 1
            patient:
              $ref: "#/components/schemas/Reference"
              description: The party who is the beneficiary of the supplied coverage and for
                whom eligibility is sought.
            servicedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date or dates when the enclosed suite of services were
                performed or completed.
            servicedPeriod:
              $ref: "#/components/schemas/Period"
              description: The date or dates when the enclosed suite of services were
                performed or completed.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date this resource was created.
            requestor:
              $ref: "#/components/schemas/Reference"
              description: The provider which is responsible for the request.
            request:
              $ref: "#/components/schemas/Reference"
              description: Reference to the original request resource.
            outcome:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The outcome of the request processing.
            disposition:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A human readable description of the status of the adjudication.
            insurer:
              $ref: "#/components/schemas/Reference"
              description: The Insurer who issued the coverage in question and is the author
                of the response.
            insurance:
              type: array
              items:
                $ref: "#/components/schemas/CoverageEligibilityResponse_Insurance"
                description: Financial instruments for reimbursement for the health care
                  products and services.
            preAuthRef:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A reference from the Insurer to which these services pertain to be
                used on further communication and as proof that the request
                occurred.
            form:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code for the form to be used for printing the content.
            error:
              type: array
              items:
                $ref: "#/components/schemas/CoverageEligibilityResponse_Error"
                description: Errors encountered during the processing of the request.
          required:
            - status
            - purpose
            - patient
            - created
            - request
            - outcome
            - insurer
      example:
        resourceType: CoverageEligibilityResponse
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        purpose:
          - null
        _purpose:
          - extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _created:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        request:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _outcome:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        insurer:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    CoverageEligibilityResponse_Error:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: An error code,from a specified code system, which details why the
                eligibility check could not be performed.
          required:
            - code
    CoverageEligibilityResponse_Insurance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            coverage:
              $ref: "#/components/schemas/Reference"
              description: Reference to the insurance card level information contained in the
                Coverage resource. The coverage issuing insurer will use these
                details to locate the patient's actual coverage within the
                insurer's information system.
            inforce:
              type: boolean
              description: Flag indicating if the coverage provided is inforce currently if no
                service date(s) specified or for the whole duration of the
                service dates.
            benefitPeriod:
              $ref: "#/components/schemas/Period"
              description: The term of the benefits documented in this response.
            item:
              type: array
              items:
                $ref: "#/components/schemas/CoverageEligibilityResponse_Insurance_Item"
                description: Benefits and optionally current balances, and authorization details
                  by category or service.
          required:
            - coverage
    CoverageEligibilityResponse_Insurance_Item:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code to identify the general type of benefits under which products
                and services are provided.
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: This contains the product, service, drug or other billing code for
                the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            provider:
              $ref: "#/components/schemas/Reference"
              description: The practitioner who is eligible for the provision of the product
                or service.
            excluded:
              type: boolean
              description: True if the indicated class of service is excluded from the plan,
                missing or False indicates the product or service is included in
                the coverage.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short name or tag for the benefit.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A richer description of the benefit or services covered.
            network:
              $ref: "#/components/schemas/CodeableConcept"
              description: Is a flag to indicate whether the benefits refer to
                in&ndash;network providers or out&ndash;of&ndash;network
                providers.
            unit:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates if the benefits apply to an individual or to the family.
            term:
              $ref: "#/components/schemas/CodeableConcept"
              description: The term or period of the values such as 'maximum lifetime benefit'
                or 'maximum annual visits'.
            benefit:
              type: array
              items:
                $ref: "#/components/schemas/CoverageEligibilityResponse_Insurance_Item_Benefit"
                description: Benefits used to date.
            authorizationRequired:
              type: boolean
              description: A boolean flag indicating whether a preauthorization is required
                prior to actual service delivery.
            authorizationSupporting:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Codes or comments regarding information or actions associated with
                  the preauthorization.
            authorizationUrl:
              type: string
              pattern: \\S*
              description: A web location for obtaining requirements or descriptive
                information regarding the preauthorization.
    CoverageEligibilityResponse_Insurance_Item_Benefit:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Classification of benefit being provided.
            allowedUnsignedInt:
              type: integer
              format: int32
              description: The quantity of the benefit which is permitted under the coverage.
            allowedString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The quantity of the benefit which is permitted under the coverage.
            allowedMoney:
              $ref: "#/components/schemas/Money"
              description: The quantity of the benefit which is permitted under the coverage.
            usedUnsignedInt:
              type: integer
              format: int32
              description: The quantity of the benefit which have been consumed to date.
            usedString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The quantity of the benefit which have been consumed to date.
            usedMoney:
              $ref: "#/components/schemas/Money"
              description: The quantity of the benefit which have been consumed to date.
          required:
            - type
    DetectedIssue:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifier associated with the detected issue record.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the status of the detected issue.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the general type of issue identified.
            severity:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the degree of importance associated with the identified
                issue based on the potential impact on the patient.
            patient:
              $ref: "#/components/schemas/Reference"
              description: Indicates the patient whose record the detected issue is associated
                with.
            identifiedDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date or period when the detected issue was initially
                identified.
            identifiedPeriod:
              $ref: "#/components/schemas/Period"
              description: The date or period when the detected issue was initially
                identified.
            author:
              $ref: "#/components/schemas/Reference"
              description: Individual or device responsible for the issue being raised.  For
                example, a decision support application or a pharmacist
                conducting a medication review.
            implicated:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates the resource representing the current activity or
                  proposed activity that is potentially problematic.
            evidence:
              type: array
              items:
                $ref: "#/components/schemas/DetectedIssue_Evidence"
                description: Supporting evidence or manifestations that provide the basis for
                  identifying the detected issue such as a GuidanceResponse or
                  MeasureReport.
            detail:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Links to resources that constitute evidence for the detected issue
                such as a GuidanceResponse or MeasureReport.
            reference:
              type: string
              pattern: \\S*
              description: The literature, knowledge&ndash;base or similar reference that
                describes the propensity for the detected issue identified.
            mitigation:
              type: array
              items:
                $ref: "#/components/schemas/DetectedIssue_Mitigation"
                description: Indicates an action that has been taken or is committed to reduce
                  or eliminate the likelihood of the risk identified by the
                  detected issue from manifesting.  Can also reflect an
                  observation of known mitigating factors that may
                  reduce/eliminate the need for any action.
          required:
            - status
      example:
        resourceType: DetectedIssue
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    DetectedIssue_Evidence:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A manifestation that led to the recording of this detected issue.
            detail:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Links to resources that constitute evidence for the detected issue
                  such as a GuidanceResponse or MeasureReport.
    DetectedIssue_Mitigation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            action:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes the action that was taken or the observation that was
                made that reduces/eliminates the risk associated with the
                identified issue.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Indicates when the mitigating action was documented.
            author:
              $ref: "#/components/schemas/Reference"
              description: Identifies the practitioner who determined the mitigation and takes
                responsibility for the mitigation step occurring.
          required:
            - action
    Device:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Unique instance identifiers assigned to a device by manufacturers
                  other organizations or owners.
            definition:
              $ref: "#/components/schemas/Reference"
              description: The reference to the definition for the device.
            udiCarrier:
              type: array
              items:
                $ref: "#/components/schemas/Device_UdiCarrier"
                description: Unique device identifier (UDI) assigned to device label or
                  package.  Note that the Device may include multiple
                  udiCarriers as it either may include just the udiCarrier for
                  the jurisdiction it is sold, or for multiple jurisdictions it
                  could have been sold.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Status of the Device availability.
            statusReason:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Reason for the dtatus of the Device availability.
            distinctIdentifier:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The distinct identification string as required by regulation for a
                human cell, tissue, or cellular and tissue&ndash;based product.
            manufacturer:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A name of the manufacturer.
            manufactureDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date and time when the device was manufactured.
            expirationDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date and time beyond which this device is no longer valid or
                should not be used (if applicable).
            lotNumber:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Lot number assigned by the manufacturer.
            serialNumber:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The serial number assigned by the organization when the device was
                manufactured.
            deviceName:
              type: array
              items:
                $ref: "#/components/schemas/Device_DeviceName"
                description: This represents the manufacturer's name of the device as provided
                  by the device, from a UDI label, or by a person describing the
                  Device.  This typically would be used when a person provides
                  the name(s) or when the device represents one of the names
                  available from DeviceDefinition.
            modelNumber:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The manufacturer's model number for the device.
            partNumber:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The part number or catalog number of the device.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: >-
                The type of deviceName.

                UDILabelName | UserFriendlyName | PatientReportedName |
                ManufactureDeviceName | ModelName.
            specialization:
              type: array
              items:
                $ref: "#/components/schemas/Device_Specialization"
                description: The capabilities supported on a  device, the standards to which the
                  device conforms for a particular purpose, and used for the
                  communication.
            version:
              type: array
              items:
                $ref: "#/components/schemas/Device_Version"
                description: The version of the standard that is used to operate and
                  communicate.
            property:
              type: array
              items:
                $ref: "#/components/schemas/Device_Property"
                description: The actual configuration settings of a device as it actually
                  operates, e.g., regulation status, time properties.
            patient:
              $ref: "#/components/schemas/Reference"
              description: Patient information, If the device is affixed to a person.
            owner:
              $ref: "#/components/schemas/Reference"
              description: An organization that is responsible for the provision and ongoing
                maintenance of the device.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: Contact details for an organization or a particular human that is
                  responsible for the device.
            location:
              $ref: "#/components/schemas/Reference"
              description: The place where the device can be found.
            url:
              type: string
              pattern: \\S*
              description: A network address on which the device may be contacted directly.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Descriptive information, usage information or implantation
                  information that is not captured in an existing element.
            safety:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Provides additional safety characteristics about a medical
                  device.  For example devices containing latex.
            parent:
              $ref: "#/components/schemas/Reference"
              description: The device that this device is attached to or is part of.
      example:
        resourceType: Device
        meta:
          tag:
            - code: ibm/minimal
    Device_DeviceName:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name that identifies the device.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: >-
                The type of deviceName.

                UDILabelName | UserFriendlyName | PatientReportedName |
                ManufactureDeviceName | ModelName.
          required:
            - name
            - type
    Device_Property:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code that specifies the property DeviceDefinitionPropetyCode
                (Extensible).
            valueQuantity:
              type: array
              items:
                $ref: "#/components/schemas/Quantity"
                description: Property value as a quantity.
            valueCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Property value as a code, e.g., NTP4 (synced to NTP).
          required:
            - type
    Device_Specialization:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            systemType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The standard that is used to operate and communicate.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The version of the standard that is used to operate and
                communicate.
          required:
            - systemType
    Device_UdiCarrier:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            deviceIdentifier:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The device identifier (DI) is a mandatory, fixed portion of a UDI
                that identifies the labeler and the specific version or model of
                a device.
            issuer:
              type: string
              pattern: \\S*
              description: >-
                Organization that is charged with issuing UDIs for devices.  For
                example, the US FDA issuers include :

                1) GS1: 

                http://hl7.org/fhir/NamingSystem/gs1&ndash;di, 

                2) HIBCC:

                http://hl7.org/fhir/NamingSystem/hibcc&ndash;dI, 

                3) ICCBBA for blood containers:

                http://hl7.org/fhir/NamingSystem/iccbba&ndash;blood&ndash;di, 

                4) ICCBA for other devices:

                http://hl7.org/fhir/NamingSystem/iccbba&ndash;other&ndash;di.
            jurisdiction:
              type: string
              pattern: \\S*
              description: The identity of the authoritative source for UDI generation within
                a  jurisdiction.  All UDIs are globally unique within a single
                namespace with the appropriate repository uri as the
                system.  For example,  UDIs of devices managed in the U.S. by
                the FDA, the value
                is  http://hl7.org/fhir/NamingSystem/fda&ndash;udi.
            carrierAIDC:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: The full UDI carrier of the Automatic Identification and Data
                Capture (AIDC) technology representation of the barcode string
                as printed on the packaging of the device &ndash; e.g., a
                barcode or RFID.   Because of limitations on character sets in
                XML and the need to round&ndash;trip JSON data through XML, AIDC
                Formats *SHALL* be base64 encoded.
            carrierHRF:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The full UDI carrier as the human readable form (HRF)
                representation of the barcode string as printed on the packaging
                of the device.
            entryType:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A coded entry to indicate how the data was entered.
    Device_Version:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of the device version, e.g. manufacturer, approved,
                internal.
            component:
              $ref: "#/components/schemas/Identifier"
              description: A single component of the device version.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The version text.
          required:
            - value
    RiskAssessment:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifier assigned to the risk assessment.
            basedOn:
              $ref: "#/components/schemas/Reference"
              description: A reference to the request that is fulfilled by this risk
                assessment.
            parent:
              $ref: "#/components/schemas/Reference"
              description: A reference to a resource that this risk assessment is part of,
                such as a Procedure.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the RiskAssessment, using the same statuses as an
                Observation.
            method:
              $ref: "#/components/schemas/CodeableConcept"
              description: The algorithm, process or mechanism used to evaluate the risk.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of the risk assessment performed.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The patient or group the risk assessment applies to.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The encounter where the assessment was performed.
            occurrenceDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date (and possibly time) the risk assessment was performed.
            occurrencePeriod:
              $ref: "#/components/schemas/Period"
              description: The date (and possibly time) the risk assessment was performed.
            condition:
              $ref: "#/components/schemas/Reference"
              description: For assessments or prognosis specific to a particular condition,
                indicates the condition being assessed.
            performer:
              $ref: "#/components/schemas/Reference"
              description: The provider or software application that performed the assessment.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The reason the risk assessment was performed.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Resources supporting the reason the risk assessment was performed.
            basis:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates the source data considered as part of the assessment (for
                  example, FamilyHistory, Observations, Procedures, Conditions,
                  etc.).
            prediction:
              type: array
              items:
                $ref: "#/components/schemas/RiskAssessment_Prediction"
                description: Describes the expected outcome for the subject.
            mitigation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of the steps that might be taken to reduce the
                identified risk(s).
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Additional comments about the risk assessment.
          required:
            - status
            - subject
      example:
        resourceType: RiskAssessment
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    RiskAssessment_Prediction:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            outcome:
              $ref: "#/components/schemas/CodeableConcept"
              description: One of the potential outcomes for the patient (e.g. remission,
                death,  a particular condition).
            probabilityDecimal:
              type: number
              description: Indicates how likely the outcome is (in the specified timeframe).
            probabilityRange:
              $ref: "#/components/schemas/Range"
              description: Indicates how likely the outcome is (in the specified timeframe).
            qualitativeRisk:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates how likely the outcome is (in the specified timeframe),
                expressed as a qualitative value (e.g. low, medium, or high).
            relativeRisk:
              type: number
              description: Indicates the risk for this particular subject (with their specific
                characteristics) divided by the risk of the population in
                general.  (Numbers greater than 1 = higher risk than the
                population, numbers less than 1 = lower risk.).
            whenPeriod:
              $ref: "#/components/schemas/Period"
              description: Indicates the period of time or age range of the subject to which
                the specified probability applies.
            whenRange:
              $ref: "#/components/schemas/Range"
              description: Indicates the period of time or age range of the subject to which
                the specified probability applies.
            rationale:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional information explaining the basis for the prediction.
    Group:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique business identifier for this group.
            active:
              type: boolean
              description: Indicates whether the record for the group is available for use or
                is merely being retained for historical purposes.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identifies the broad classification of the kind of resources the
                group includes.
            actual:
              type: boolean
              description: If true, indicates that the resource refers to a specific group of
                real individuals.  If false, the group defines a set of intended
                individuals.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Provides a specific type of resource the group includes; e.g.
                "cow", "syringe", etc.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A label assigned to the group for human identification and
                communication.
            quantity:
              type: integer
              format: int32
              description: A count of the number of resource instances that are part of the
                group.
            managingEntity:
              $ref: "#/components/schemas/Reference"
              description: Entity responsible for defining and maintaining Group
                characteristics and/or registered members.
            characteristic:
              type: array
              items:
                $ref: "#/components/schemas/Group_Characteristic"
                description: Identifies traits whose presence r absence is shared by members of
                  the group.
            member:
              type: array
              items:
                $ref: "#/components/schemas/Group_Member"
                description: Identifies the resource instances that are members of the group.
          required:
            - type
            - actual
      example:
        resourceType: Group
        meta:
          tag:
            - code: ibm/minimal
        _type:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _actual:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Group_Characteristic:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code that identifies the kind of trait being asserted.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The value of the trait that holds (or does not hold &ndash; see
                'exclude') for members of the group.
            valueBoolean:
              type: boolean
              description: The value of the trait that holds (or does not hold &ndash; see
                'exclude') for members of the group.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The value of the trait that holds (or does not hold &ndash; see
                'exclude') for members of the group.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: The value of the trait that holds (or does not hold &ndash; see
                'exclude') for members of the group.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: The value of the trait that holds (or does not hold &ndash; see
                'exclude') for members of the group.
            exclude:
              type: boolean
              description: If true, indicates the characteristic is one that is NOT held by
                members of the group.
            period:
              $ref: "#/components/schemas/Period"
              description: The period over which the characteristic is tested; e.g. the
                patient had an operation during the month of June.
          required:
            - code
            - exclude
    Group_Member:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            entity:
              $ref: "#/components/schemas/Reference"
              description: A reference to the entity that is a member of the group. Must be
                consistent with Group.type. If the entity is another group, then
                the type must be the same.
            period:
              $ref: "#/components/schemas/Period"
              description: The period that the member was in the group, if known.
            inactive:
              type: boolean
              description: A flag to indicate that the member is no longer in the group, but
                previously may have been a member.
          required:
            - entity
    Provenance:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            target:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The Reference(s) that were generated or updated by  the activity
                  described in this resource. A provenance can point to more
                  than one target if multiple resources were created/updated by
                  the same activity.
              minItems: 1
            occurredPeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the activity occurred.
            occurredDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The period during which the activity occurred.
            recorded:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The instant of time at which the activity was recorded.
            policy:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Policy or plan the activity was defined by. Typically, a single
                  activity may have multiple applicable policy documents, such
                  as patient consent, guarantor funding, etc.
            location:
              $ref: "#/components/schemas/Reference"
              description: Where the activity occurred, if relevant.
            reason:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The reason that the activity was taking place.
            activity:
              $ref: "#/components/schemas/CodeableConcept"
              description: An activity is something that occurs over a period of time and acts
                upon or with entities; it may include consuming, processing,
                transforming, modifying, relocating, using, or generating
                entities.
            agent:
              type: array
              items:
                $ref: "#/components/schemas/Provenance_Agent"
                description: An actor taking a role in an activity  for which it can be assigned
                  some degree of responsibility for the activity taking place.
              minItems: 1
            entity:
              type: array
              items:
                $ref: "#/components/schemas/Provenance_Entity"
                description: An entity used in this activity.
            signature:
              type: array
              items:
                $ref: "#/components/schemas/Signature"
                description: A digital signature on the target Reference(s). The signer should
                  match a Provenance.agent. The purpose of the signature is
                  indicated.
          required:
            - target
            - recorded
            - agent
      example:
        resourceType: Provenance
        meta:
          tag:
            - code: ibm/minimal
        target:
          - extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
        _recorded:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        agent:
          - who:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    Provenance_Agent:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The participation the agent had with respect to the activity.
            role:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The function of the agent with respect to the activity. The
                  security role enabling the agent with respect to the activity.
            who:
              $ref: "#/components/schemas/Reference"
              description: The individual, device or organization that participated in the
                event.
            onBehalfOf:
              $ref: "#/components/schemas/Reference"
              description: The individual, device, or organization for whom the change was
                made.
          required:
            - who
    Provenance_Entity:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            role:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the entity was used during the activity.
            what:
              $ref: "#/components/schemas/Reference"
              description: Identity of the  Entity used. May be a logical or physical uri and
                maybe absolute or relative.
            agent:
              type: array
              items:
                $ref: "#/components/schemas/Provenance_Agent"
                description: The entity is attributed to an agent to express the agent's
                  responsibility for that entity, possibly along with other
                  agents. This description can be understood as shorthand for
                  saying that the agent was responsible for the activity which
                  generated the entity.
          required:
            - role
            - what
    Invoice:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier of this Invoice, often used for reference in
                  correspondence about this invoice or for tracking of payments.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of the Invoice.
            cancelledReason:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: In case of Invoice cancellation a reason must be given (entered in
                error, superseded by corrected invoice etc.).
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of Invoice depending on domain, realm an usage (e.g.
                internal/external, dental, preliminary).
            subject:
              $ref: "#/components/schemas/Reference"
              description: The individual or set of individuals receiving the goods and
                services billed in this invoice.
            recipient:
              $ref: "#/components/schemas/Reference"
              description: The individual or Organization responsible for balancing of this
                invoice.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date/time(s) of when this Invoice was posted.
            participant:
              type: array
              items:
                $ref: "#/components/schemas/Invoice_Participant"
                description: Indicates who or what performed or participated in the charged
                  service.
            issuer:
              $ref: "#/components/schemas/Reference"
              description: The organizationissuing the Invoice.
            account:
              $ref: "#/components/schemas/Reference"
              description: Account which is supposed to be balanced with this Invoice.
            lineItem:
              type: array
              items:
                $ref: "#/components/schemas/Invoice_LineItem"
                description: Each line item represents one charge for goods and services
                  rendered. Details such as date, code and amount are found in
                  the referenced ChargeItem resource.
            totalPriceComponent:
              type: array
              items:
                $ref: "#/components/schemas/Invoice_LineItem_PriceComponent"
                description: The total amount for the Invoice may be calculated as the sum of
                  the line items with surcharges/deductions that apply in
                  certain conditions.  The priceComponent element can be used to
                  offer transparency to the recipient of the Invoice of how the
                  total price was calculated.
            totalNet:
              $ref: "#/components/schemas/Money"
              description: Invoice total , taxes excluded.
            totalGross:
              $ref: "#/components/schemas/Money"
              description: Invoice total, tax included.
            paymentTerms:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Payment details such as banking details, period of payment,
                deductibles, methods of payment.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Comments made about the invoice by the issuer, subject, or other
                  participants.
          required:
            - status
      example:
        resourceType: Invoice
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Invoice_LineItem:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: Sequence in which the items appear on the invoice.
            chargeItemReference:
              $ref: "#/components/schemas/Reference"
              description: The ChargeItem contains information such as the billing code, date,
                amount etc. If no further details are required for the lineItem,
                inline billing codes can be added using the CodeableConcept data
                type instead of the Reference.
            chargeItemCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The ChargeItem contains information such as the billing code, date,
                amount etc. If no further details are required for the lineItem,
                inline billing codes can be added using the CodeableConcept data
                type instead of the Reference.
            priceComponent:
              type: array
              items:
                $ref: "#/components/schemas/Invoice_LineItem_PriceComponent"
                description: The price for a ChargeItem may be calculated as a base price with
                  surcharges/deductions that apply in certain conditions. A
                  ChargeItemDefinition resource that defines the prices, factors
                  and conditions that apply to a billing code is currently under
                  development. The priceComponent element can be used to offer
                  transparency to the recipient of the Invoice as to how the
                  prices have been calculated.
    Invoice_LineItem_PriceComponent:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: This code identifies the type of the component.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code that identifies the component. Codes may be used to
                differentiate between kinds of taxes, surcharges, discounts etc.
            factor:
              type: number
              description: The factor that has been applied on the base price for calculating
                this component.
            amount:
              $ref: "#/components/schemas/Money"
              description: The amount calculated for this component.
          required:
            - type
    Invoice_Participant:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes the type of involvement (e.g. transcriptionist, creator
                etc.). If the invoice has been created automatically, the
                Participant may be a billing engine or another kind of device.
            actor:
              $ref: "#/components/schemas/Reference"
              description: The device, practitioner, etc. who performed or participated in the
                service.
          required:
            - actor
    DiagnosticReport:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers assigned to this report by the performer or other
                  systems.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Details concerning a service requested.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the diagnostic report.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A code that classifies the clinical discipline, department or
                  diagnostic service that created the report (e.g. cardiology,
                  biochemistry, hematology, MRI). This is used for searching,
                  sorting and display purposes.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code or name that describes this diagnostic report.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The subject of the report. Usually, but not always, this is a
                patient. However, diagnostic services also perform analyses on
                specimens collected from a variety of other sources.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The healthcare event  (e.g. a patient and healthcare provider
                interaction) which this DiagnosticReport is about.
            effectiveDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time or time&ndash;period the observed values are related to.
                When the subject of the report is a patient, this is usually
                either the time of the procedure or of specimen collection(s),
                but very often the source of the date/time is not known, only
                the date/time itself.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The time or time&ndash;period the observed values are related to.
                When the subject of the report is a patient, this is usually
                either the time of the procedure or of specimen collection(s),
                but very often the source of the date/time is not known, only
                the date/time itself.
            issued:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The date and time that this version of the report was made
                available to providers, typically after the report was reviewed
                and verified.
            performer:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The diagnostic service that is responsible for issuing the report.
            resultsInterpreter:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The practitioner or organization that is responsible for the
                  report's conclusions and interpretations.
            specimen:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Details about the specimens on which this diagnostic report is
                  based.
            result:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: "[Observations](observation.html)  that are part of this diagnostic
                  report."
            imagingStudy:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: One or more links to full details of any imaging performed during
                  the diagnostic investigation. Typically, this is imaging
                  performed by DICOM enabled modalities, but this is not
                  required. A fully enabled PACS viewer can use this information
                  to provide views of the source images.
            media:
              type: array
              items:
                $ref: "#/components/schemas/DiagnosticReport_Media"
                description: A list of key images associated with this report. The images are
                  generally created during the diagnostic process, and may be
                  directly of the patient, or of treated specimens (i.e. slides
                  of interest).
            conclusion:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Concise and clinically contextualized summary conclusion
                (interpretation/impression) of the diagnostic report.
            conclusionCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: One or more codes that represent the summary conclusion
                  (interpretation/impression) of the diagnostic report.
            presentedForm:
              type: array
              items:
                $ref: "#/components/schemas/Attachment"
                description: Rich text representation of the entire result as issued by the
                  diagnostic service. Multiple formats are allowed but they
                  SHALL be semantically equivalent.
          required:
            - status
            - code
      example:
        resourceType: DiagnosticReport
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        code:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    DiagnosticReport_Media:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A comment about the image. Typically, this is used to provide an
                explanation for why the image is included, or to draw the
                viewer's attention to important features.
            link:
              $ref: "#/components/schemas/Reference"
              description: Reference to the image source.
          required:
            - link
    ExplanationOfBenefit:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this explanation of benefit.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The category of claim, e.g. oral, pharmacy, vision, institutional,
                professional.
            subType:
              $ref: "#/components/schemas/CodeableConcept"
              description: A finer grained suite of claim type codes which may convey
                additional information such as Inpatient vs Outpatient and/or a
                specialty service.
            use:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: "A code to indicate whether the nature of the request is: to
                request adjudication of products and services previously
                rendered; or requesting authorization and adjudication for
                provision in the future; or requesting the non&ndash;binding
                adjudication of the listed products and services which could be
                provided in the future."
            patient:
              $ref: "#/components/schemas/Reference"
              description: The party to whom the professional services and/or products have
                been supplied or are being considered and for whom actual for
                forecast reimbursement is sought.
            billablePeriod:
              $ref: "#/components/schemas/Period"
              description: The period for which charges are being submitted.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date this resource was created.
            enterer:
              $ref: "#/components/schemas/Reference"
              description: Individual who created the claim, predetermination or
                preauthorization.
            insurer:
              $ref: "#/components/schemas/Reference"
              description: The party responsible for authorization, adjudication and
                reimbursement.
            provider:
              $ref: "#/components/schemas/Reference"
              description: The provider which is responsible for the claim, predetermination
                or preauthorization.
            priority:
              $ref: "#/components/schemas/CodeableConcept"
              description: "The provider&ndash;required urgency of processing the request.
                Typical values include: stat, routine deferred."
            fundsReserveRequested:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code to indicate whether and for whom funds are to be reserved
                for future claims.
            fundsReserve:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code, used only on a response to a preauthorization, to indicate
                whether the benefits payable have been reserved and for whom.
            related:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Related"
                description: Other claims which are related to this claim such as prior
                  submissions or claims for related services or for the same
                  event.
            prescription:
              $ref: "#/components/schemas/Reference"
              description: Prescription to support the dispensing of pharmacy, device or
                vision products.
            originalPrescription:
              $ref: "#/components/schemas/Reference"
              description: Original prescription which has been superseded by this
                prescription to support the dispensing of pharmacy services,
                medications or products.
            payee:
              $ref: "#/components/schemas/ExplanationOfBenefit_Payee"
              description: The party to be reimbursed for cost of the products and services
                according to the terms of the policy.
            referral:
              $ref: "#/components/schemas/Reference"
              description: A reference to a referral resource.
            facility:
              $ref: "#/components/schemas/Reference"
              description: Facility where the services were provided.
            claim:
              $ref: "#/components/schemas/Reference"
              description: Reference to a related claim.
            claimResponse:
              $ref: "#/components/schemas/Reference"
              description: "The business identifier for the instance of the adjudication
                response: claim, predetermination or preauthorization response."
            outcome:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The outcome of the claim, predetermination, or preauthorization
                processing.
            disposition:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A human readable description of the status of the adjudication.
            preAuthRef:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Reference from the Insurer which is used in later communications
                  which refers to this adjudication.
            preAuthRefPeriod:
              type: array
              items:
                $ref: "#/components/schemas/Period"
                description: The timeframe during which the supplied preauthorization reference
                  may be quoted on claims to obtain the adjudication as
                  provided.
            careTeam:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_CareTeam"
                description: The members of the team who provided the products and services.
            supportingInfo:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_SupportingInfo"
                description: Additional information codes regarding exceptions, special
                  considerations, the condition, situation, prior or concurrent
                  issues.
            diagnosis:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Diagnosis"
                description: Information about diagnoses relevant to the claim items.
            procedure:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Procedure"
                description: Procedures performed on the patient relevant to the billing items
                  with the claim.
            precedence:
              type: integer
              format: int32
              description: This indicates the relative order of a series of EOBs related to
                different coverages for the same suite of services.
            insurance:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Insurance"
                description: Financial instruments for reimbursement for the health care
                  products and services specified on the claim.
              minItems: 1
            accident:
              $ref: "#/components/schemas/ExplanationOfBenefit_Accident"
              description: Details of a accident which resulted in injuries which required the
                products and services listed in the claim.
            item:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Item"
                description: A claim line. Either a simple (a product or service) or a 'group'
                  of details which can also be a simple items or groups of
                  sub&ndash;details.
            addItem:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_AddItem"
                description: The first&ndash;tier service adjudications for payor added product
                  or service lines.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Item_Adjudication"
                description: If this item is a group then the values here are a summary of the
                  adjudication of the detail items. If this item is a simple
                  product or service then this is the result of the adjudication
                  of this item.
            total:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Total"
                description: Categorized monetary totals for the adjudication.
            payment:
              $ref: "#/components/schemas/ExplanationOfBenefit_Payment"
              description: Payment details for the adjudication of the claim.
            formCode:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code for the form to be used for printing the content.
            form:
              $ref: "#/components/schemas/Attachment"
              description: The actual form, by reference or inclusion, for printing the
                content or an EOB.
            processNote:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_ProcessNote"
                description: A note that describes or explains adjudication results in a human
                  readable form.
            benefitPeriod:
              $ref: "#/components/schemas/Period"
              description: The term of the benefits documented in this response.
            benefitBalance:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_BenefitBalance"
                description: Balance by Benefit Category.
          required:
            - status
            - type
            - use
            - patient
            - created
            - insurer
            - provider
            - outcome
            - insurance
      example:
        resourceType: ExplanationOfBenefit
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        type:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        _use:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _created:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        insurer:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        provider:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _outcome:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        insurance:
          - _focal:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
            coverage:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    ExplanationOfBenefit_Accident:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Date of an accident event  related to the products and services
                contained in the claim.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type or context of the accident event for the purposes of
                selection of potential insurance coverages and determination of
                coordination between insurers.
            locationAddress:
              $ref: "#/components/schemas/Address"
              description: The physical location of the accident event.
            locationReference:
              $ref: "#/components/schemas/Reference"
              description: The physical location of the accident event.
    ExplanationOfBenefit_AddItem:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            itemSequence:
              type: array
              items:
                type: integer
                format: int32
                description: Claim items which this service line is intended to replace.
            detailSequence:
              type: array
              items:
                type: integer
                format: int32
                description: The sequence number of the details within the claim item which this
                  line is intended to replace.
            subDetailSequence:
              type: array
              items:
                type: integer
                format: int32
                description: The sequence number of the sub&ndash;details woithin the details
                  within the claim item which this line is intended to replace.
            provider:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The providers who are authorized for the services rendered to the
                  patient.
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            programCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies the program under which this may be recovered.
            servicedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date or dates when the service or product was supplied,
                performed or completed.
            servicedPeriod:
              $ref: "#/components/schemas/Period"
              description: The date or dates when the service or product was supplied,
                performed or completed.
            locationCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Where the product or service was provided.
            locationAddress:
              $ref: "#/components/schemas/Address"
              description: Where the product or service was provided.
            locationReference:
              $ref: "#/components/schemas/Reference"
              description: Where the product or service was provided.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            bodySite:
              $ref: "#/components/schemas/CodeableConcept"
              description: Physical service site on the patient (limb, tooth, etc.).
            subSite:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A region or surface of the bodySite, e.g. limb region or tooth
                  surface(s).
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Item_Adjudication"
                description: The adjudication results.
            detail:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_AddItem_Detail"
                description: The second&ndash;tier service adjudications for payor added
                  services.
          required:
            - productOrService
    ExplanationOfBenefit_AddItem_Detail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Item_Adjudication"
                description: The adjudication results.
            subDetail:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_AddItem_Detail_SubDetail"
                description: Third&ndash;tier of goods and services.
          required:
            - productOrService
    ExplanationOfBenefit_AddItem_Detail_SubDetail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Item_Adjudication"
                description: The adjudication results.
          required:
            - productOrService
    ExplanationOfBenefit_BenefitBalance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code to identify the general type of benefits under which products
                and services are provided.
            excluded:
              type: boolean
              description: True if the indicated class of service is excluded from the plan,
                missing or False indicates the product or service is included in
                the coverage.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short name or tag for the benefit.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A richer description of the benefit or services covered.
            network:
              $ref: "#/components/schemas/CodeableConcept"
              description: Is a flag to indicate whether the benefits refer to
                in&ndash;network providers or out&ndash;of&ndash;network
                providers.
            unit:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates if the benefits apply to an individual or to the family.
            term:
              $ref: "#/components/schemas/CodeableConcept"
              description: The term or period of the values such as 'maximum lifetime benefit'
                or 'maximum annual visits'.
            financial:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_BenefitBalance_Financial"
                description: Benefits Used to date.
          required:
            - category
    ExplanationOfBenefit_BenefitBalance_Financial:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Classification of benefit being provided.
            allowedUnsignedInt:
              type: integer
              format: int32
              description: The quantity of the benefit which is permitted under the coverage.
            allowedString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The quantity of the benefit which is permitted under the coverage.
            allowedMoney:
              $ref: "#/components/schemas/Money"
              description: The quantity of the benefit which is permitted under the coverage.
            usedUnsignedInt:
              type: integer
              format: int32
              description: The quantity of the benefit which have been consumed to date.
            usedMoney:
              $ref: "#/components/schemas/Money"
              description: The quantity of the benefit which have been consumed to date.
          required:
            - type
    ExplanationOfBenefit_CareTeam:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify care team entries.
            provider:
              $ref: "#/components/schemas/Reference"
              description: Member of the team who provided the product or service.
            responsible:
              type: boolean
              description: The party who is billing and/or responsible for the claimed
                products or services.
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: The lead, assisting or supervising practitioner and their
                discipline if a multidisciplinary team.
            qualification:
              $ref: "#/components/schemas/CodeableConcept"
              description: The qualification of the practitioner which is applicable for this
                service.
          required:
            - sequence
            - provider
    ExplanationOfBenefit_Diagnosis:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify diagnosis entries.
            diagnosisCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The nature of illness or problem in a coded form or as a reference
                to an external defined Condition.
            diagnosisReference:
              $ref: "#/components/schemas/Reference"
              description: The nature of illness or problem in a coded form or as a reference
                to an external defined Condition.
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: When the condition was observed or the relative ranking.
            onAdmission:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indication of whether the diagnosis was present on admission to a
                facility.
            packageCode:
              $ref: "#/components/schemas/CodeableConcept"
              description: A package billing code or bundle code used to group products and
                services to a particular health condition (such as heart attack)
                which is based on a predetermined grouping code system.
          required:
            - sequence
    ExplanationOfBenefit_Insurance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            focal:
              type: boolean
              description: A flag to indicate that this Coverage is to be used for
                adjudication of this claim when set to true.
            coverage:
              $ref: "#/components/schemas/Reference"
              description: Reference to the insurance card level information contained in the
                Coverage resource. The coverage issuing insurer will use these
                details to locate the patient's actual coverage within the
                insurer's information system.
            preAuthRef:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Reference numbers previously provided by the insurer to the
                  provider to be quoted on subsequent claims containing services
                  or products related to the prior authorization.
          required:
            - focal
            - coverage
    ExplanationOfBenefit_Item:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify item entries.
            careTeamSequence:
              type: array
              items:
                type: integer
                format: int32
                description: Care team members related to this service or product.
            diagnosisSequence:
              type: array
              items:
                type: integer
                format: int32
                description: Diagnoses applicable for this service or product.
            procedureSequence:
              type: array
              items:
                type: integer
                format: int32
                description: Procedures applicable for this service or product.
            informationSequence:
              type: array
              items:
                type: integer
                format: int32
                description: Exceptions, special conditions and supporting information
                  applicable for this service or product.
            revenue:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of revenue or cost center providing the product and/or
                service.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code to identify the general type of benefits under which products
                and services are provided.
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            programCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies the program under which this may be recovered.
            servicedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date or dates when the service or product was supplied,
                performed or completed.
            servicedPeriod:
              $ref: "#/components/schemas/Period"
              description: The date or dates when the service or product was supplied,
                performed or completed.
            locationCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Where the product or service was provided.
            locationAddress:
              $ref: "#/components/schemas/Address"
              description: Where the product or service was provided.
            locationReference:
              $ref: "#/components/schemas/Reference"
              description: Where the product or service was provided.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            udi:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Unique Device Identifiers associated with this line item.
            bodySite:
              $ref: "#/components/schemas/CodeableConcept"
              description: Physical service site on the patient (limb, tooth, etc.).
            subSite:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A region or surface of the bodySite, e.g. limb region or tooth
                  surface(s).
            encounter:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A billed item may include goods or services provided in multiple
                  encounters.
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Item_Adjudication"
                description: If this item is a group then the values here are a summary of the
                  adjudication of the detail items. If this item is a simple
                  product or service then this is the result of the adjudication
                  of this item.
            detail:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Item_Detail"
                description: Second&ndash;tier of goods and services.
          required:
            - sequence
            - productOrService
    ExplanationOfBenefit_Item_Adjudication:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: "A code to indicate the information type of this adjudication
                record. Information types may include: the value submitted,
                maximum values or percentages allowed or payable under the plan,
                amounts that the patient is responsible for in&ndash;aggregate
                or pertaining to this item, amounts paid by other coverages, and
                the benefit payable for this item."
            reason:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code supporting the understanding of the adjudication result and
                explaining variance from expected amount.
            amount:
              $ref: "#/components/schemas/Money"
              description: Monetary amount associated with the category.
            value:
              type: number
              description: A non&ndash;monetary value associated with the category. Mutually
                exclusive to the amount element above.
          required:
            - category
    ExplanationOfBenefit_Item_Detail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A claim detail line. Either a simple (a product or service) or a
                'group' of sub&ndash;details which are simple items.
            revenue:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of revenue or cost center providing the product and/or
                service.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code to identify the general type of benefits under which products
                and services are provided.
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            programCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies the program under which this may be recovered.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            udi:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Unique Device Identifiers associated with this line item.
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Item_Adjudication"
                description: The adjudication results.
            subDetail:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Item_Detail_SubDetail"
                description: Third&ndash;tier of goods and services.
          required:
            - sequence
            - productOrService
    ExplanationOfBenefit_Item_Detail_SubDetail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A claim detail line. Either a simple (a product or service) or a
                'group' of sub&ndash;details which are simple items.
            revenue:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of revenue or cost center providing the product and/or
                service.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code to identify the general type of benefits under which products
                and services are provided.
            productOrService:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the value is a group code then this item collects a set of
                related claim details, otherwise this contains the product,
                service, drug or other billing code for the item.
            modifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Item typification or modifiers codes to convey additional context
                  for the product or service.
            programCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies the program under which this may be recovered.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of repetitions of a service or product.
            unitPrice:
              $ref: "#/components/schemas/Money"
              description: If the item is not a group then this is the fee for the product or
                service, otherwise this is the total of the fees for the details
                of the group.
            factor:
              type: number
              description: A real number that represents a multiplier used in determining the
                overall value of services delivered and/or goods received. The
                concept of a Factor allows for a discount or surcharge
                multiplier to be applied to a monetary amount.
            net:
              $ref: "#/components/schemas/Money"
              description: The quantity times the unit price for an additional service or
                product or charge.
            udi:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Unique Device Identifiers associated with this line item.
            noteNumber:
              type: array
              items:
                type: integer
                format: int32
                description: The numbers associated with notes below which apply to the
                  adjudication of this item.
            adjudication:
              type: array
              items:
                $ref: "#/components/schemas/ExplanationOfBenefit_Item_Adjudication"
                description: The adjudication results.
          required:
            - sequence
            - productOrService
    ExplanationOfBenefit_Payee:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: "Type of Party to be reimbursed: Subscriber, provider, other."
            party:
              $ref: "#/components/schemas/Reference"
              description: Reference to the individual or organization to whom any payment
                will be made.
    ExplanationOfBenefit_Payment:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Whether this represents partial or complete payment of the benefits
                payable.
            adjustment:
              $ref: "#/components/schemas/Money"
              description: Total amount of all adjustments to this payment included in this
                transaction which are not related to this claim's adjudication.
            adjustmentReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Reason for the payment adjustment.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Estimated date the payment will be issued or the actual issue date
                of payment.
            amount:
              $ref: "#/components/schemas/Money"
              description: Benefits payable less any payment adjustment.
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Issuer's unique identifier for the payment instrument.
    ExplanationOfBenefit_Procedure:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify procedure entries.
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: When the condition was observed or the relative ranking.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date and optionally time the procedure was performed.
            procedureCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The code or reference to a Procedure resource which identifies the
                clinical intervention performed.
            procedureReference:
              $ref: "#/components/schemas/Reference"
              description: The code or reference to a Procedure resource which identifies the
                clinical intervention performed.
            udi:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Unique Device Identifiers associated with this line item.
          required:
            - sequence
    ExplanationOfBenefit_ProcessNote:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            number:
              type: integer
              format: int32
              description: A number to uniquely identify a note entry.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The business purpose of the note text.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The explanation or description associated with the processing.
            language:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code to define the language used in the text of the note.
    ExplanationOfBenefit_Related:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            claim:
              $ref: "#/components/schemas/Reference"
              description: Reference to a related claim.
            relationship:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code to convey how the claims are related.
            reference:
              $ref: "#/components/schemas/Identifier"
              description: An alternate organizational reference to the case or file to which
                this particular claim pertains.
    ExplanationOfBenefit_SupportingInfo:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            sequence:
              type: integer
              format: int32
              description: A number to uniquely identify supporting information entries.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: "The general class of the information supplied: information;
                exception; accident, employment; onset, etc."
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: System and code pertaining to the specific information regarding
                special conditions relating to the setting, treatment or
                patient  for which care is sought.
            timingDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date when or period to which this information refers.
            timingPeriod:
              $ref: "#/components/schemas/Period"
              description: The date when or period to which this information refers.
            valueBoolean:
              type: boolean
              description: Additional data or information such as resources, documents, images
                etc. including references to the data or the actual inclusion of
                the data.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional data or information such as resources, documents, images
                etc. including references to the data or the actual inclusion of
                the data.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: Additional data or information such as resources, documents, images
                etc. including references to the data or the actual inclusion of
                the data.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: Additional data or information such as resources, documents, images
                etc. including references to the data or the actual inclusion of
                the data.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: Additional data or information such as resources, documents, images
                etc. including references to the data or the actual inclusion of
                the data.
            reason:
              $ref: "#/components/schemas/Coding"
              description: Provides the reason in the situation where a reason code is
                required in addition to the content.
          required:
            - sequence
            - category
    ExplanationOfBenefit_Total:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: "A code to indicate the information type of this adjudication
                record. Information types may include: the value submitted,
                maximum values or percentages allowed or payable under the plan,
                amounts that the patient is responsible for in aggregate or
                pertaining to this item, amounts paid by other coverages, and
                the benefit payable for this item."
            amount:
              $ref: "#/components/schemas/Money"
              description: Monetary total amount associated with the category.
          required:
            - category
            - amount
    DocumentManifest:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            masterIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: A single identifier that uniquely identifies this manifest.
                Principally used to refer to the manifest in non&ndash;FHIR
                contexts.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Other identifiers associated with the document manifest, including
                  version independent  identifiers.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this document manifest.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The code specifying the type of clinical activity that resulted in
                placing the associated content into the DocumentManifest.
            subject:
              $ref: "#/components/schemas/Reference"
              description: Who or what the set of documents is about. The documents can be
                about a person, (patient or healthcare practitioner), a device
                (i.e. machine) or even a group of subjects (such as a document
                about a herd of farm animals, or a set of patients that share a
                common exposure). If the documents cross more than one subject,
                then more than one subject is allowed here (unusual use case).
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When the document manifest was created for submission to the server
                (not necessarily the same thing as the actual resource last
                modified time, since it may be modified, replicated, etc.).
            author:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies who is the author of the manifest. Manifest author is
                  not necessarly the author of the references included.
            recipient:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A patient, practitioner, or organization for which this set of
                  documents is intended.
            source:
              type: string
              pattern: \\S*
              description: Identifies the source system, application, or software that
                produced the document manifest.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Human&ndash;readable description of the source document. This is
                sometimes known as the "title".
            content:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The list of Resources that consist of the parts of this manifest.
              minItems: 1
            related:
              type: array
              items:
                $ref: "#/components/schemas/DocumentManifest_Related"
                description: Related identifiers or resources associated with the
                  DocumentManifest.
          required:
            - status
            - content
      example:
        resourceType: DocumentManifest
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        content:
          - extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
    DocumentManifest_Related:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Related identifier to this DocumentManifest.  For example, Order
                numbers, accession numbers, XDW workflow numbers.
            ref:
              $ref: "#/components/schemas/Reference"
              description: Related Resource to this DocumentManifest. For example, Order,
                ServiceRequest,  Procedure, EligibilityRequest, etc.
    Specimen:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Id for specimen.
            accessionIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: The identifier assigned by the lab when accessioning specimen(s).
                This is not necessarily the same as the specimen identifier,
                depending on local lab procedures.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The availability of the specimen.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of material that forms the specimen.
            subject:
              $ref: "#/components/schemas/Reference"
              description: Where the specimen came from. This may be from patient(s), from a
                location (e.g., the source of an environmental sample), or a
                sampling of a substance or a device.
            receivedTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Time when specimen was received for processing or testing.
            parent:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Reference to the parent (source) specimen which is used when the
                  specimen was either derived from or a component of another
                  specimen.
            request:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Details concerning a service request that required a specimen to be
                  collected.
            collection:
              $ref: "#/components/schemas/Specimen_Collection"
              description: Details concerning the specimen collection.
            processing:
              type: array
              items:
                $ref: "#/components/schemas/Specimen_Processing"
                description: Details concerning processing and processing steps for the
                  specimen.
            container:
              type: array
              items:
                $ref: "#/components/schemas/Specimen_Container"
                description: The container holding the specimen.  The recursive nature of
                  containers; i.e. blood in tube in tray in rack is not
                  addressed here.
            condition:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A mode or state of being that describes the nature of the specimen.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: "To communicate any details or issues about the specimen or during
                  the specimen collection. (for example: broken vial, sent with
                  patient, frozen)."
      example:
        resourceType: Specimen
        meta:
          tag:
            - code: ibm/minimal
    Specimen_Collection:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            collector:
              $ref: "#/components/schemas/Reference"
              description: Person who collected the specimen.
            collectedDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Time when specimen was collected from subject &ndash; the
                physiologically relevant time.
            collectedPeriod:
              $ref: "#/components/schemas/Period"
              description: Time when specimen was collected from subject &ndash; the
                physiologically relevant time.
            duration:
              $ref: "#/components/schemas/Duration"
              description: The span of time over which the collection of a specimen occurred.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The quantity of specimen collected; for instance the volume of a
                blood sample, or the physical measurement of an anatomic
                pathology sample.
            method:
              $ref: "#/components/schemas/CodeableConcept"
              description: A coded value specifying the technique that is used to perform the
                procedure.
            bodySite:
              $ref: "#/components/schemas/CodeableConcept"
              description: Anatomical location from which the specimen was collected (if
                subject is a patient). This is the target site.  This element is
                not used for environmental specimens.
            fastingStatusCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Abstinence or reduction from some or all food, drink, or both, for
                a period of time prior to sample collection.
            fastingStatusDuration:
              $ref: "#/components/schemas/Duration"
              description: Abstinence or reduction from some or all food, drink, or both, for
                a period of time prior to sample collection.
    Specimen_Container:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Id for container. There may be multiple; a manufacturer's bar code,
                  lab assigned identifier, etc. The container ID may differ from
                  the specimen id in some circumstances.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Textual description of the container.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of container associated with the specimen (e.g. slide,
                aliquot, etc.).
            capacity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The capacity (volume or other measure) the container may contain.
            specimenQuantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The quantity of specimen in the container; may be volume,
                dimensions, or other appropriate measurements, depending on the
                specimen type.
            additiveCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: "Introduced substance to preserve, maintain or enhance the
                specimen. Examples: Formalin, Citrate, EDTA."
            additiveReference:
              $ref: "#/components/schemas/Reference"
              description: "Introduced substance to preserve, maintain or enhance the
                specimen. Examples: Formalin, Citrate, EDTA."
    Specimen_Processing:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Textual description of procedure.
            procedure:
              $ref: "#/components/schemas/CodeableConcept"
              description: A coded value specifying the procedure used to process the
                specimen.
            additive:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Material used in the processing step.
            timeDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: A record of the time or period when the specimen processing
                occurred.  For example the time of sample fixation or the period
                of time the sample was in formalin.
            timePeriod:
              $ref: "#/components/schemas/Period"
              description: A record of the time or period when the specimen processing
                occurred.  For example the time of sample fixation or the period
                of time the sample was in formalin.
    List:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier for the List assigned for business purposes outside the
                  context of FHIR.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the current state of this list.
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How this list was prepared &ndash; whether it is a working list
                that is suitable for being maintained on an ongoing basis, or if
                it represents a snapshot of a list of items from another source,
                or whether it is a prepared list where items may be marked as
                added, modified or deleted.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A label for the list assigned by the author.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: This code defines the purpose of the list &ndash; why it was
                created.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The common subject (or patient) of the resources that are in the
                list if there is one.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The encounter that is the context in which this list was created.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date that the list was prepared.
            source:
              $ref: "#/components/schemas/Reference"
              description: The entity responsible for deciding what the contents of the list
                were. Where the list was created by a human, this is the same as
                the author of the list.
            orderedBy:
              $ref: "#/components/schemas/CodeableConcept"
              description: What order applies to the items in the list.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Comments that apply to the overall list.
            entry:
              type: array
              items:
                $ref: "#/components/schemas/List_Entry"
                description: Entries in this list.
            emptyReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: If the list is empty, why the list is empty.
          required:
            - status
            - mode
      example:
        resourceType: List
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _mode:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    List_Entry:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            flag:
              $ref: "#/components/schemas/CodeableConcept"
              description: The flag allows the system constructing the list to indicate the
                role and significance of the item in the list.
            deleted:
              type: boolean
              description: True if this item is marked as deleted in the list.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When this item was added to the list.
            item:
              $ref: "#/components/schemas/Reference"
              description: A reference to the actual resource from which data was derived.
          required:
            - item
    DocumentReference:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            masterIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: Document identifier as assigned by the source of the document. This
                identifier is specific to this version of the document. This
                unique identifier may be used elsewhere to identify this version
                of the document.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Other identifiers associated with the document, including version
                  independent identifiers.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this document reference.
            docStatus:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the underlying document.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specifies the particular kind of document referenced  (e.g. History
                and Physical, Discharge Summary, Progress Note). This usually
                equates to the purpose of making the document referenced.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A categorization for the type of document referenced &ndash; helps
                  for indexing and searching. This may be implied by or derived
                  from the code specified in the DocumentReference.type.
            subject:
              $ref: "#/components/schemas/Reference"
              description: Who or what the document is about. The document can be about a
                person, (patient or healthcare practitioner), a device (e.g. a
                machine) or even a group of subjects (such as a document about a
                herd of farm animals, or a set of patients that share a common
                exposure).
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: When the document reference was created.
            author:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies who is responsible for adding the information to the
                  document.
            authenticator:
              $ref: "#/components/schemas/Reference"
              description: Which person or organization authenticates that this document is
                valid.
            custodian:
              $ref: "#/components/schemas/Reference"
              description: Identifies the organization or group who is responsible for ongoing
                maintenance of and access to the document.
            relatesTo:
              type: array
              items:
                $ref: "#/components/schemas/DocumentReference_RelatesTo"
                description: Relationships that this document has with other document references
                  that already exist.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Human&ndash;readable description of the source document.
            securityLabel:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A set of Security&ndash;Tag codes specifying the level of
                  privacy/security of the Document. Note that
                  DocumentReference.meta.security contains the security labels
                  of the "reference" to the document, while
                  DocumentReference.securityLabel contains a snapshot of the
                  security labels on the document the reference refers to.
            content:
              type: array
              items:
                $ref: "#/components/schemas/DocumentReference_Content"
                description: The document and format referenced. There may be multiple content
                  element repetitions, each with a different format.
              minItems: 1
            context:
              $ref: "#/components/schemas/DocumentReference_Context"
              description: The clinical context in which the document was prepared.
          required:
            - status
            - content
      example:
        resourceType: DocumentReference
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        content:
          - attachment:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    DocumentReference_Content:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            attachment:
              $ref: "#/components/schemas/Attachment"
              description: The document or URL of the document along with critical metadata to
                prove content has integrity.
            format:
              $ref: "#/components/schemas/Coding"
              description: An identifier of the document encoding, structure, and template
                that the document conforms to beyond the base format indicated
                in the mimeType.
          required:
            - attachment
    DocumentReference_Context:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            encounter:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Describes the clinical encounter or type of care that the document
                  content is associated with.
            event:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: This list of codes represents the main clinical acts, such as a
                  colonoscopy or an appendectomy, being documented. In some
                  cases, the event is inherent in the type Code, such as a
                  "History and Physical Report" in which the procedure being
                  documented is necessarily a "History and Physical" act.
            period:
              $ref: "#/components/schemas/Period"
              description: The time period over which the service that is described by the
                document was provided.
            facilityType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of facility where the patient was seen.
            practiceSetting:
              $ref: "#/components/schemas/CodeableConcept"
              description: This property may convey specifics about the practice setting where
                the content was created, often reflecting the clinical
                specialty.
            sourcePatientInfo:
              $ref: "#/components/schemas/Reference"
              description: The Patient Information as known when the document was published.
                May be a reference to a version specific, or contained.
            related:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Related identifiers or resources associated with the
                  DocumentReference.
    DocumentReference_RelatesTo:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of relationship that this document has with anther
                document.
            target:
              $ref: "#/components/schemas/Reference"
              description: The target document of this relationship.
          required:
            - code
            - target
    Media:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers associated with the image &ndash; these may include
                  identifiers for the image itself, identifiers for the context
                  of its collection (e.g. series ids) and context ids such as
                  accession numbers or other workflow identifiers.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A procedure that is fulfilled in whole or in part by the creation
                  of this media.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A larger event of which this particular event is a component or
                  step.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of the {{title}}.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code that classifies whether the media is an image, video or
                audio recording or some other media category.
            modality:
              $ref: "#/components/schemas/CodeableConcept"
              description: Details of the type of the media &ndash; usually, how it was
                acquired (what type of device). If images sourced from a DICOM
                system, are wrapped in a Media resource, then this is the
                modality.
            view:
              $ref: "#/components/schemas/CodeableConcept"
              description: The name of the imaging view e.g. Lateral or Antero&ndash;posterior
                (AP).
            subject:
              $ref: "#/components/schemas/Reference"
              description: Who/What this Media is a record of.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The encounter that establishes the context for this media.
            createdDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date and time(s) at which the media was collected.
            createdPeriod:
              $ref: "#/components/schemas/Period"
              description: The date and time(s) at which the media was collected.
            issued:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The date and time this version of the media was made available to
                providers, typically after having been reviewed.
            operator:
              $ref: "#/components/schemas/Reference"
              description: The person who administered the collection of the image.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Describes why the event occurred in coded or textual form.
            bodySite:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the site on the subject's body where the observation was
                made (i.e. the target site).
            deviceName:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the device / manufacturer of the device  that was used
                to make the recording.
            device:
              $ref: "#/components/schemas/Reference"
              description: The device used to collect the media.
            height:
              type: integer
              format: int32
              description: Height of the image in pixels (photo/video).
            width:
              type: integer
              format: int32
              description: Width of the image in pixels (photo/video).
            frames:
              type: integer
              format: int32
              description: The number of frames in a photo. This is used with a
                multi&ndash;page fax, or an imaging acquisition context that
                takes multiple slices in a single image, or an animated gif. If
                there is more than one frame, this SHALL have a value in order
                to alert interface software that a multi&ndash;frame capable
                rendering widget is required.
            duration:
              type: number
              description: The duration of the recording in seconds &ndash; for audio and
                video.
            content:
              $ref: "#/components/schemas/Attachment"
              description: The actual content of the media &ndash; inline or by direct
                reference to the media source file.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Comments made about the media by the performer, subject or other
                  participants.
          required:
            - status
            - content
      example:
        resourceType: Media
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        content:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Flag:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this flag by the performer or
                  other systems which remain constant as the resource is updated
                  and propagates from server to server.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Supports basic workflow.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Allows a flag to be divided into different categories like
                  clinical, administrative etc. Intended to be used as a means
                  of filtering which flags are displayed to particular user or
                  in a given context.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The coded value or textual component of the flag to display to the
                user.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The patient, location, group, organization, or practitioner etc.
                this is about record this flag is associated with.
            period:
              $ref: "#/components/schemas/Period"
              description: The period of time from the activation of the flag to inactivation
                of the flag. If the flag is active, the end of the period should
                be unspecified.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: This alert is only relevant during the encounter.
            author:
              $ref: "#/components/schemas/Reference"
              description: The person, organization or device that created the flag.
          required:
            - status
            - code
            - subject
      example:
        resourceType: Flag
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        code:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    QuestionnaireResponse:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: A business identifier assigned to a particular completed (or
                partially completed) questionnaire.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The order, proposal or plan that is fulfilled in whole or in part
                  by this QuestionnaireResponse.  For example, a ServiceRequest
                  seeking an intake assessment or a decision support
                  recommendation to assess for post&ndash;partum depression.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A procedure or observation that this questionnaire was performed as
                  part of the execution of.  For example, the surgery a
                  checklist was executed as part of.
            questionnaire:
              type: string
              pattern: \\S*
              description: The Questionnaire that defines and organizes the questions for
                which answers are being provided.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The position of the questionnaire response within its overall
                lifecycle.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The subject of the questionnaire response.  This could be a
                patient, organization, practitioner, device, etc.  This is
                who/what the answers apply to, but is not necessarily the source
                of information.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The Encounter during which this questionnaire response was created
                or to which the creation of this record is tightly associated.
            authored:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date and/or time that this set of answers were last changed.
            author:
              $ref: "#/components/schemas/Reference"
              description: Person who received the answers to the questions in the
                QuestionnaireResponse and recorded them in the system.
            source:
              $ref: "#/components/schemas/Reference"
              description: The person who answered the questions about the subject.
            item:
              type: array
              items:
                $ref: "#/components/schemas/QuestionnaireResponse_Item"
                description: A group or question item from the original questionnaire for which
                  answers are provided.
          required:
            - status
      example:
        resourceType: QuestionnaireResponse
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    QuestionnaireResponse_Item:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            linkId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The item from the Questionnaire that corresponds to this item in
                the QuestionnaireResponse resource.
            definition:
              type: string
              pattern: \\S*
              description: A reference to an [ElementDefinition](elementdefinition.html) that
                provides the details for the item.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Text that is displayed above the contents of the group or as the
                text of the question being answered.
            answer:
              type: array
              items:
                $ref: "#/components/schemas/QuestionnaireResponse_Item_Answer"
                description: The respondent's answer(s) to the question.
            item:
              type: array
              items:
                $ref: "#/components/schemas/QuestionnaireResponse_Item"
                description: Questions or sub&ndash;groups nested beneath a question or group.
          required:
            - linkId
    QuestionnaireResponse_Item_Answer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            valueBoolean:
              type: boolean
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            valueDecimal:
              type: number
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            valueInteger:
              type: integer
              format: int32
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            valueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            valueUri:
              type: string
              pattern: \\S*
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            valueCoding:
              $ref: "#/components/schemas/Coding"
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: The answer (or one of the answers) provided by the respondent to
                the question.
            item:
              type: array
              items:
                $ref: "#/components/schemas/QuestionnaireResponse_Item"
                description: Nested groups and/or questions found within this particular answer.
    ServiceRequest:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers assigned to this order instance by the orderer and/or
                  the receiver and/or order fulfiller.
            instantiatesCanonical:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to a FHIR&ndash;defined protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this ServiceRequest.
            instantiatesUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to an externally maintained protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this ServiceRequest.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Plan/proposal/order fulfilled by this request.
            replaces:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The request takes the place of the referenced completed or
                  terminated request(s).
            requisition:
              $ref: "#/components/schemas/Identifier"
              description: A shared identifier common to all service requests that were
                authorized more or less simultaneously by a single author,
                representing the composite or group identifier.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the order.
            intent:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Whether the request is a proposal, plan, an original order or a
                reflex order.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A code that classifies the service for searching, sorting and
                  display purposes (e.g. "Surgical Procedure").
            priority:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how quickly the ServiceRequest should be addressed with
                respect to other requests.
            doNotPerform:
              type: boolean
              description: Set this to true if the record is saying that the service/procedure
                should NOT be performed.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code that identifies a particular service (i.e., procedure,
                diagnostic investigation, or panel of investigations) that have
                been requested.
            orderDetail:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Additional details and instructions about the how the services are
                  to be delivered.   For example, and order for a urinary
                  catheter may have an order detail for an external or
                  indwelling catheter, or an order for a bandage may require
                  additional instructions specifying how the bandage should be
                  applied.
            quantityQuantity:
              $ref: "#/components/schemas/Quantity"
              description: An amount of service being requested which can be a quantity ( for
                example $1,500 home modification), a ratio ( for example, 20
                half day visits per month), or a range (2.0 to 1.8 Gy per
                fraction).
            quantityRatio:
              $ref: "#/components/schemas/Ratio"
              description: An amount of service being requested which can be a quantity ( for
                example $1,500 home modification), a ratio ( for example, 20
                half day visits per month), or a range (2.0 to 1.8 Gy per
                fraction).
            quantityRange:
              $ref: "#/components/schemas/Range"
              description: An amount of service being requested which can be a quantity ( for
                example $1,500 home modification), a ratio ( for example, 20
                half day visits per month), or a range (2.0 to 1.8 Gy per
                fraction).
            subject:
              $ref: "#/components/schemas/Reference"
              description: On whom or what the service is to be performed. This is usually a
                human patient, but can also be requested on animals, groups of
                humans or animals, devices such as dialysis machines, or even
                locations (typically for environmental scans).
            encounter:
              $ref: "#/components/schemas/Reference"
              description: An encounter that provides additional information about the
                healthcare context in which this request is made.
            occurrenceDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date/time at which the requested service should occur.
            occurrencePeriod:
              $ref: "#/components/schemas/Period"
              description: The date/time at which the requested service should occur.
            occurrenceTiming:
              $ref: "#/components/schemas/Timing"
              description: The date/time at which the requested service should occur.
            asNeededBoolean:
              type: boolean
              description: If a CodeableConcept is present, it indicates the
                pre&ndash;condition for performing the service.  For example
                "pain", "on flare&ndash;up", etc.
            asNeededCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: If a CodeableConcept is present, it indicates the
                pre&ndash;condition for performing the service.  For example
                "pain", "on flare&ndash;up", etc.
            authoredOn:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When the request transitioned to being actionable.
            requester:
              $ref: "#/components/schemas/Reference"
              description: The individual who initiated the request and has responsibility for
                its activation.
            performerType:
              $ref: "#/components/schemas/CodeableConcept"
              description: Desired type of performer for doing the requested service.
            performer:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The desired performer for doing the requested service.  For
                  example, the surgeon, dermatopathologist, endoscopist, etc.
            locationCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The preferred location(s) where the procedure should actually
                  happen in coded or free text form. E.g. at home or nursing day
                  care center.
            locationReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A reference to the the preferred location(s) where the procedure
                  should actually happen. E.g. at home or nursing day care
                  center.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: An explanation or justification for why this service is being
                  requested in coded or textual form.   This is often for
                  billing purposes.  May relate to the resources referred to in
                  `supportingInfo`.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates another resource that provides a justification for why
                  this service is being requested.   May relate to the resources
                  referred to in `supportingInfo`.
            insurance:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Insurance plans, coverage extensions, pre&ndash;authorizations
                  and/or pre&ndash;determinations that may be needed for
                  delivering the requested service.
            supportingInfo:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Additional clinical information about the patient or specimen that
                  may influence the services or their interpretations.     This
                  information includes diagnosis, clinical findings and other
                  observations.  In laboratory ordering these are typically
                  referred to as "ask at order entry questions (AOEs)".  This
                  includes observations explicitly requested by the producer
                  (filler) to provide context or supporting information needed
                  to complete the order. For example,  reporting the amount of
                  inspired oxygen for blood gas measurements.
            specimen:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: One or more specimens that the laboratory procedure will use.
            bodySite:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Anatomic location where the procedure should be performed. This is
                  the target site.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Any other notes and comments made about the service request. For
                  example, internal billing notes.
            patientInstruction:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Instructions in terms that are understood by the patient or
                consumer.
            relevantHistory:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Key events in the history of the request.
          required:
            - status
            - intent
            - subject
      example:
        resourceType: ServiceRequest
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _intent:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    DeviceUseStatement:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: An external identifier for this statement such as an IRI.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A plan, proposal or order that is fulfilled in whole or in part by
                  this DeviceUseStatement.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code representing the patient or other source's judgment about
                the state of the device used that this statement is
                about.  Generally this will be active or completed.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The patient who used the device.
            derivedFrom:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Allows linking the DeviceUseStatement to the underlying Request, or
                  to other information that supports or is used to derive the
                  DeviceUseStatement.
            timingTiming:
              $ref: "#/components/schemas/Timing"
              description: How often the device was used.
            timingPeriod:
              $ref: "#/components/schemas/Period"
              description: How often the device was used.
            timingDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: How often the device was used.
            recordedOn:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time at which the statement was made/recorded.
            source:
              $ref: "#/components/schemas/Reference"
              description: Who reported the device was being used by the patient.
            device:
              $ref: "#/components/schemas/Reference"
              description: The details of the device used.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Reason or justification for the use of the device.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates another resource whose existence justifies this
                  DeviceUseStatement.
            bodySite:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the anotomic location on the subject's body where the
                device was used ( i.e. the target).
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Details about the device statement that were not represented at all
                  or sufficiently in one of the attributes provided in a class.
                  These may include for example a comment, an instruction, or a
                  note associated with the statement.
          required:
            - status
            - subject
            - device
      example:
        resourceType: DeviceUseStatement
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        device:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    SupplyRequest:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this SupplyRequest by the author
                  and/or other systems. These identifiers remain constant as the
                  resource is updated and propagates from server to server.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Status of the supply request.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Category of supply, e.g.  central, non&ndash;stock, etc. This is
                used to support work flows associated with the supply process.
            priority:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how quickly this SupplyRequest should be addressed with
                respect to other requests.
            itemCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The item that is requested to be supplied. This is either a link to
                a resource representing the details of the item or a code that
                identifies the item from a known list.
            itemReference:
              $ref: "#/components/schemas/Reference"
              description: The item that is requested to be supplied. This is either a link to
                a resource representing the details of the item or a code that
                identifies the item from a known list.
            quantity:
              $ref: "#/components/schemas/Quantity"
              description: The amount that is being ordered of the indicated item.
            parameter:
              type: array
              items:
                $ref: "#/components/schemas/SupplyRequest_Parameter"
                description: Specific parameters for the ordered item.  For example, the size of
                  the indicated item.
            occurrenceDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When the request should be fulfilled.
            occurrencePeriod:
              $ref: "#/components/schemas/Period"
              description: When the request should be fulfilled.
            occurrenceTiming:
              $ref: "#/components/schemas/Timing"
              description: When the request should be fulfilled.
            authoredOn:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When the request was made.
            requester:
              $ref: "#/components/schemas/Reference"
              description: The device, practitioner, etc. who initiated the request.
            supplier:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Who is intended to fulfill the request.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The reason why the supply item was requested.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The reason why the supply item was requested.
            deliverFrom:
              $ref: "#/components/schemas/Reference"
              description: Where the supply is expected to come from.
            deliverTo:
              $ref: "#/components/schemas/Reference"
              description: Where the supply is destined to go.
          required:
            - quantity
      example:
        resourceType: SupplyRequest
        meta:
          tag:
            - code: ibm/minimal
        itemCodeableConcept:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        quantity:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    SupplyRequest_Parameter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code or string that identifies the device detail being asserted.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The value of the device detail.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The value of the device detail.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: The value of the device detail.
            valueBoolean:
              type: boolean
              description: The value of the device detail.
    RequestGroup:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Allows a service to provide a unique, business identifier for the
                  request.
            instantiatesCanonical:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A canonical URL referencing a FHIR&ndash;defined protocol,
                  guideline, orderset or other definition that is adhered to in
                  whole or in part by this request.
            instantiatesUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A URL referencing an externally defined protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this request.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A plan, proposal or order that is fulfilled in whole or in part by
                  this request.
            replaces:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Completed or terminated request(s) whose function is taken by this
                  new request.
            groupIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: A shared identifier common to all requests that were authorized
                more or less simultaneously by a single author, representing the
                identifier of the requisition, prescription or similar form.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of the request. For request groups, the status
                reflects the status of all the requests in the group.
            intent:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the level of authority/intentionality associated with the
                request and where the request fits into the workflow chain.
            priority:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how quickly the request should be addressed with respect
                to other requests.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code that identifies what the overall request group is.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The subject for which the request group was created.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: Describes the context of the request group, if any.
            authoredOn:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Indicates when the request group was created.
            author:
              $ref: "#/components/schemas/Reference"
              description: Provides a reference to the author of the request group.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Describes the reason for the request group in coded or textual
                  form.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates another resource whose existence justifies this request
                  group.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Provides a mechanism to communicate additional information about
                  the response.
            action:
              type: array
              items:
                $ref: "#/components/schemas/RequestGroup_Action"
                description: The actions, if any, produced by the evaluation of the artifact.
          required:
            - status
            - intent
      example:
        resourceType: RequestGroup
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _intent:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    RequestGroup_Action:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            prefix:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A user&ndash;visible prefix for the action.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The title of the action displayed to a user.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short description of the action used to provide a summary to
                display to the user.
            textEquivalent:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A text equivalent of the action to be performed. This provides a
                human&ndash;interpretable description of the action when the
                definition is consumed by a system that might not be capable of
                interpreting it dynamically.
            priority:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how quickly the action should be addressed with respect
                to other actions.
            code:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A code that provides meaning for the action or action group. For
                  example, a section may have a LOINC code for a section of a
                  documentation template.
            documentation:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Didactic or other informational resources associated with the
                  action that can be provided to the CDS recipient. Information
                  resources can include inline text commentary and links to web
                  resources.
            condition:
              type: array
              items:
                $ref: "#/components/schemas/RequestGroup_Action_Condition"
                description: An expression that describes applicability criteria, or start/stop
                  conditions for the action.
            relatedAction:
              type: array
              items:
                $ref: "#/components/schemas/RequestGroup_Action_RelatedAction"
                description: A relationship to another action such as "before" or "30&ndash;60
                  minutes after start of".
            timingDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: An optional value describing when the action should be performed.
            timingAge:
              $ref: "#/components/schemas/Age"
              description: An optional value describing when the action should be performed.
            timingPeriod:
              $ref: "#/components/schemas/Period"
              description: An optional value describing when the action should be performed.
            timingDuration:
              $ref: "#/components/schemas/Duration"
              description: An optional value describing when the action should be performed.
            timingRange:
              $ref: "#/components/schemas/Range"
              description: An optional value describing when the action should be performed.
            timingTiming:
              $ref: "#/components/schemas/Timing"
              description: An optional value describing when the action should be performed.
            participant:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The participant that should perform or be responsible for this
                  action.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of action to perform (create, update, remove).
            groupingBehavior:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines the grouping behavior for the action and its children.
            selectionBehavior:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines the selection behavior for the action and its children.
            requiredBehavior:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines expectations around whether an action is required.
            precheckBehavior:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines whether the action should usually be preselected.
            cardinalityBehavior:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines whether the action can be selected multiple times.
            resource:
              $ref: "#/components/schemas/Reference"
              description: The resource that is the target of the action (e.g.
                CommunicationRequest).
            action:
              type: array
              items:
                $ref: "#/components/schemas/RequestGroup_Action"
                description: Sub actions.
    RequestGroup_Action_Condition:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            kind:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The kind of condition.
            expression:
              $ref: "#/components/schemas/Expression"
              description: An expression that returns true or false, indicating whether or not
                the condition is satisfied.
          required:
            - kind
    RequestGroup_Action_RelatedAction:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            actionId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The element id of the action this is related to.
            relationship:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The relationship of this action to the related action.
            offsetDuration:
              $ref: "#/components/schemas/Duration"
              description: A duration or range of durations to apply to the relationship. For
                example, 30&ndash;60 minutes before.
            offsetRange:
              $ref: "#/components/schemas/Range"
              description: A duration or range of durations to apply to the relationship. For
                example, 30&ndash;60 minutes before.
          required:
            - actionId
            - relationship
    Schedule:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: External Ids for this item.
            active:
              type: boolean
              description: Whether this schedule record is in active use or should not be used
                (such as was entered in error).
            serviceCategory:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A broad categorization of the service that is to be performed
                  during this appointment.
            serviceType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The specific service that is to be performed during this
                  appointment.
            specialty:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The specialty of a practitioner that would be required to perform
                  the service requested in this appointment.
            actor:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Slots that reference this schedule resource provide the
                  availability details to these referenced resource(s).
              minItems: 1
            planningHorizon:
              $ref: "#/components/schemas/Period"
              description: The period of time that the slots that reference this Schedule
                resource cover (even if none exist). These  cover the amount of
                time that an organization's planning horizon; the interval for
                which they are currently accepting appointments. This does not
                define a "template" for planning outside these dates.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Comments on the availability to describe any extended information.
                Such as custom constraints on the slots that may be associated.
          required:
            - actor
      example:
        resourceType: Schedule
        meta:
          tag:
            - code: ibm/minimal
        actor:
          - extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
    Observation:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this observation.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A plan, proposal or order that is fulfilled in whole or in part by
                  this event.  For example, a MedicationRequest may require a
                  patient to have laboratory test performed before  it is
                  dispensed.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A larger event of which this particular Observation is a component
                  or step.  For example,  an observation as part of a procedure.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the result value.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A code that classifies the general type of observation being made.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes what was observed. Sometimes this is called the
                observation "name".
            subject:
              $ref: "#/components/schemas/Reference"
              description: The patient, or group of patients, location, or device this
                observation is about and into whose record the observation is
                placed. If the actual focus of the observation is different from
                the subject (or a sample of, part, or region of the subject),
                the `focus` element or the `code` itself specifies the actual
                focus of the observation.
            focus:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The actual focus of an observation when it is not the patient of
                  record representing something or someone associated with the
                  patient such as a spouse, parent, fetus, or donor. For
                  example, fetus observations in a mother's record.  The focus
                  of an observation could also be an existing condition,  an
                  intervention, the subject's diet,  another observation of the
                  subject,  or a body structure such as tumor or implanted
                  device.   An example use case would be using the Observation
                  resource to capture whether the mother is trained to change
                  her child's tracheostomy tube. In this example, the child is
                  the patient of record and the mother is the focus.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The healthcare event  (e.g. a patient and healthcare provider
                interaction) during which this observation is made.
            effectiveDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time or time&ndash;period the observed value is asserted as
                being true. For biological subjects &ndash; e.g. human patients
                &ndash; this is usually called the "physiologically relevant
                time". This is usually either the time of the procedure or of
                specimen collection, but very often the source of the date/time
                is not known, only the date/time itself.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The time or time&ndash;period the observed value is asserted as
                being true. For biological subjects &ndash; e.g. human patients
                &ndash; this is usually called the "physiologically relevant
                time". This is usually either the time of the procedure or of
                specimen collection, but very often the source of the date/time
                is not known, only the date/time itself.
            effectiveTiming:
              $ref: "#/components/schemas/Timing"
              description: The time or time&ndash;period the observed value is asserted as
                being true. For biological subjects &ndash; e.g. human patients
                &ndash; this is usually called the "physiologically relevant
                time". This is usually either the time of the procedure or of
                specimen collection, but very often the source of the date/time
                is not known, only the date/time itself.
            effectiveInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The time or time&ndash;period the observed value is asserted as
                being true. For biological subjects &ndash; e.g. human patients
                &ndash; this is usually called the "physiologically relevant
                time". This is usually either the time of the procedure or of
                specimen collection, but very often the source of the date/time
                is not known, only the date/time itself.
            issued:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The date and time this version of the observation was made
                available to providers, typically after the results have been
                reviewed and verified.
            performer:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Who was responsible for asserting the observed value as "true".
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueBoolean:
              type: boolean
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueInteger:
              type: integer
              format: int32
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueRatio:
              $ref: "#/components/schemas/Ratio"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueSampledData:
              $ref: "#/components/schemas/SampledData"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valuePeriod:
              $ref: "#/components/schemas/Period"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            dataAbsentReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Provides a reason why the expected value in the element
                Observation.value[x] is missing.
            interpretation:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A categorical assessment of an observation value.  For example,
                  high, low, normal.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Comments about the observation or the results.
            bodySite:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the site on the subject's body where the observation was
                made (i.e. the target site).
            method:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the mechanism used to perform the observation.
            specimen:
              $ref: "#/components/schemas/Reference"
              description: The specimen that was used when this observation was made.
            device:
              $ref: "#/components/schemas/Reference"
              description: The device used to generate the observation data.
            referenceRange:
              type: array
              items:
                $ref: "#/components/schemas/Observation_ReferenceRange"
                description: Guidance on how to interpret the value by comparison to a normal or
                  recommended range.  Multiple reference ranges are interpreted
                  as an "OR".   In other words, to represent two distinct target
                  populations, two `referenceRange` elements would be used.
            hasMember:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: This observation is a group observation (e.g. a battery, a panel of
                  tests, a set of vital sign measurements) that includes the
                  target as a member of the group.
            derivedFrom:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The target resource that represents a measurement from which this
                  observation value is derived. For example, a calculated anion
                  gap or a fetal measurement based on an ultrasound image.
            component:
              type: array
              items:
                $ref: "#/components/schemas/Observation_Component"
                description: Some observations have multiple component observations.  These
                  component observations are expressed as separate code value
                  pairs that share the same attributes.  Examples include
                  systolic and diastolic component observations for blood
                  pressure measurement and multiple component observations for
                  genetics observations.
          required:
            - status
            - code
      example:
        resourceType: Observation
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        code:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    Observation_Component:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes what was observed. Sometimes this is called the
                observation "code".
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueBoolean:
              type: boolean
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueInteger:
              type: integer
              format: int32
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueRatio:
              $ref: "#/components/schemas/Ratio"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueSampledData:
              $ref: "#/components/schemas/SampledData"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            valuePeriod:
              $ref: "#/components/schemas/Period"
              description: The information determined as a result of making the observation,
                if the information has a simple value.
            dataAbsentReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Provides a reason why the expected value in the element
                Observation.component.value[x] is missing.
            interpretation:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A categorical assessment of an observation value.  For example,
                  high, low, normal.
            referenceRange:
              type: array
              items:
                $ref: "#/components/schemas/Observation_ReferenceRange"
                description: Guidance on how to interpret the value by comparison to a normal or
                  recommended range.
          required:
            - code
    Observation_ReferenceRange:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            low:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The value of the low bound of the reference range.  The low bound
                of the reference range endpoint is inclusive of the value
                (e.g.  reference range is >=5 &ndash; <=9). If the low bound is
                omitted,  it is assumed to be meaningless (e.g. reference range
                is <=2.3).
            high:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The value of the high bound of the reference range.  The high bound
                of the reference range endpoint is inclusive of the value
                (e.g.  reference range is >=5 &ndash; <=9). If the high bound is
                omitted,  it is assumed to be meaningless (e.g. reference range
                is >= 2.3).
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Codes to indicate the what part of the targeted reference
                population it applies to. For example, the normal or therapeutic
                range.
            appliesTo:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Codes to indicate the target population this reference range
                  applies to.  For example, a reference range may be based on
                  the normal population or a particular sex or race.  Multiple
                  `appliesTo`  are interpreted as an "AND" of the target
                  populations.  For example, to represent a target population of
                  African American females, both a code of female and a code for
                  African American would be used.
            age:
              $ref: "#/components/schemas/Range"
              description: The age at which this reference range is applicable. This is a
                neonatal age (e.g. number of weeks at term) if the meaning says
                so.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Text based reference range in an observation which may be used when
                a quantitative range is not appropriate for an observation.  An
                example would be a reference value of "Negative" or a list or
                table of "normals".
    MedicationAdministration:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers associated with this Medication Administration that are
                  defined by business processes and/or used to refer to it when
                  a direct URL reference to the resource itself is not
                  appropriate. They are business identifiers assigned to this
                  resource by the performer or other systems and remain constant
                  as the resource is updated and propagates from server to
                  server.
            instantiates:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A protocol, guideline, orderset, or other definition that was
                  adhered to in whole or in part by this event.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A larger event of which this particular event is a component or
                  step.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Will generally be set to show that the administration has been
                completed.  For some long running administrations such as
                infusions, it is possible for an administration to be started
                but not completed or it may be paused while some other process
                is under way.
            statusReason:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A code indicating why the administration was not performed.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates where the medication is expected to be consumed or
                administered.
            medicationCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the medication that was administered. This is either a
                link to a resource representing the details of the medication or
                a simple attribute carrying a code that identifies the
                medication from a known list of medications.
            medicationReference:
              $ref: "#/components/schemas/Reference"
              description: Identifies the medication that was administered. This is either a
                link to a resource representing the details of the medication or
                a simple attribute carrying a code that identifies the
                medication from a known list of medications.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The person or animal or group receiving the medication.
            context:
              $ref: "#/components/schemas/Reference"
              description: The visit, admission, or other contact between patient and health
                care provider during which the medication administration was
                performed.
            supportingInformation:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Additional information (for example, patient height and weight)
                  that supports the administration of the medication.
            effectiveDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: A specific date/time or interval of time during which the
                administration took place (or did not take place, when the
                'notGiven' attribute is true). For many administrations, such as
                swallowing a tablet the use of dateTime is more appropriate.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: A specific date/time or interval of time during which the
                administration took place (or did not take place, when the
                'notGiven' attribute is true). For many administrations, such as
                swallowing a tablet the use of dateTime is more appropriate.
            performer:
              type: array
              items:
                $ref: "#/components/schemas/MedicationAdministration_Performer"
                description: Indicates who or what performed the medication administration and
                  how they were involved.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A code indicating why the medication was given.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Condition or observation that supports why the medication was
                  administered.
            request:
              $ref: "#/components/schemas/Reference"
              description: The original request, instruction or authority to perform the
                administration.
            device:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The device used in administering the medication to the
                  patient.  For example, a particular infusion pump.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Extra information about the medication administration that is not
                  conveyed by the other attributes.
            dosage:
              $ref: "#/components/schemas/MedicationAdministration_Dosage"
              description: Describes the medication dosage information details e.g. dose,
                rate, site, route, etc.
            eventHistory:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A summary of the events of interest that have occurred, such as
                  when the administration was verified.
          required:
            - status
            - subject
      example:
        resourceType: MedicationAdministration
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        medicationCodeableConcept:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _effectiveDateTime:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    MedicationAdministration_Dosage:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Free text dosage can be used for cases where the dosage
                administered is too complex to code. When coded dosage is
                present, the free text dosage may still be present for display
                to humans.\r\rThe dosage instructions should reflect the dosage
                of the medication that was administered.
            site:
              $ref: "#/components/schemas/CodeableConcept"
              description: A coded specification of the anatomic site where the medication
                first entered the body.  For example, "left arm".
            route:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code specifying the route or physiological path of administration
                of a therapeutic agent into or onto the patient.  For example,
                topical, intravenous, etc.
            method:
              $ref: "#/components/schemas/CodeableConcept"
              description: A coded value indicating the method by which the medication is
                intended to be or was introduced into or on the body.  This
                attribute will most often NOT be populated.  It is most commonly
                used for injections.  For example, Slow Push, Deep IV.
            dose:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The amount of the medication given at one administration
                event.   Use this value when the administration is essentially
                an instantaneous event such as a swallowing a tablet or giving
                an injection.
            rateRatio:
              $ref: "#/components/schemas/Ratio"
              description: "Identifies the speed with which the medication was or will be
                introduced into the patient.  Typically, the rate for an
                infusion e.g. 100 ml per 1 hour or 100 ml/hr.  May also be
                expressed as a rate per unit of time, e.g. 500 ml per 2
                hours.  Other examples:  200 mcg/min or 200 mcg/1 minute; 1
                liter/8 hours."
            rateQuantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: "Identifies the speed with which the medication was or will be
                introduced into the patient.  Typically, the rate for an
                infusion e.g. 100 ml per 1 hour or 100 ml/hr.  May also be
                expressed as a rate per unit of time, e.g. 500 ml per 2
                hours.  Other examples:  200 mcg/min or 200 mcg/1 minute; 1
                liter/8 hours."
    MedicationAdministration_Performer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            function:
              $ref: "#/components/schemas/CodeableConcept"
              description: Distinguishes the type of involvement of the performer in the
                medication administration.
            actor:
              $ref: "#/components/schemas/Reference"
              description: Indicates who or what performed the medication administration.
          required:
            - actor
    DeviceRequest:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers assigned to this order by the orderer or by the
                  receiver.
            instantiatesCanonical:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to a FHIR&ndash;defined protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this DeviceRequest.
            instantiatesUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to an externally maintained protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this DeviceRequest.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Plan/proposal/order fulfilled by this request.
            priorRequest:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The request takes the place of the referenced completed or
                  terminated request(s).
            groupIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: Composite request this is part of.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the request.
            intent:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Whether the request is a proposal, plan, an original order or a
                reflex order.
            priority:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how quickly the {{title}} should be addressed with
                respect to other requests.
            codeReference:
              $ref: "#/components/schemas/Reference"
              description: The details of the device to be used.
            codeCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The details of the device to be used.
            parameter:
              type: array
              items:
                $ref: "#/components/schemas/DeviceRequest_Parameter"
                description: Specific parameters for the ordered item.  For example, the prism
                  value for lenses.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The patient who will use the device.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: An encounter that provides additional context in which this request
                is made.
            occurrenceDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The timing schedule for the use of the device. The Schedule data
                type allows many different expressions, for example. "Every 8
                hours"; "Three times a day"; "1/2 an hour before breakfast for
                10 days from 23&ndash;Dec 2011:"; "15 Oct 2013, 17 Oct 2013 and
                1 Nov 2013".
            occurrencePeriod:
              $ref: "#/components/schemas/Period"
              description: The timing schedule for the use of the device. The Schedule data
                type allows many different expressions, for example. "Every 8
                hours"; "Three times a day"; "1/2 an hour before breakfast for
                10 days from 23&ndash;Dec 2011:"; "15 Oct 2013, 17 Oct 2013 and
                1 Nov 2013".
            occurrenceTiming:
              $ref: "#/components/schemas/Timing"
              description: The timing schedule for the use of the device. The Schedule data
                type allows many different expressions, for example. "Every 8
                hours"; "Three times a day"; "1/2 an hour before breakfast for
                10 days from 23&ndash;Dec 2011:"; "15 Oct 2013, 17 Oct 2013 and
                1 Nov 2013".
            authoredOn:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When the request transitioned to being actionable.
            requester:
              $ref: "#/components/schemas/Reference"
              description: The individual who initiated the request and has responsibility for
                its activation.
            performerType:
              $ref: "#/components/schemas/CodeableConcept"
              description: Desired type of performer for doing the diagnostic testing.
            performer:
              $ref: "#/components/schemas/Reference"
              description: The desired performer for doing the diagnostic testing.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Reason or justification for the use of this device.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Reason or justification for the use of this device.
            insurance:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Insurance plans, coverage extensions, pre&ndash;authorizations
                  and/or pre&ndash;determinations that may be required for
                  delivering the requested service.
            supportingInfo:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Additional clinical information about the patient that may
                  influence the request fulfilment.  For example, this may
                  include where on the subject's body the device will be used
                  (i.e. the target site).
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Details about this request that were not represented at all or
                  sufficiently in one of the attributes provided in a class.
                  These may include for example a comment, an instruction, or a
                  note associated with the statement.
            relevantHistory:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Key events in the history of the request.
          required:
            - intent
            - subject
      example:
        resourceType: DeviceRequest
        meta:
          tag:
            - code: ibm/minimal
        _intent:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        codeReference:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    DeviceRequest_Parameter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code or string that identifies the device detail being asserted.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The value of the device detail.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The value of the device detail.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: The value of the device detail.
            valueBoolean:
              type: boolean
              description: The value of the device detail.
    MessageHeader:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            eventCoding:
              $ref: "#/components/schemas/Coding"
              description: Code that identifies the event this message represents and connects
                it with its definition. Events defined as part of the FHIR
                specification have the system value
                "http://terminology.hl7.org/CodeSystem/message&ndash;events".  Alternatively
                uri to the EventDefinition.
            eventUri:
              type: string
              pattern: \\S*
              description: Code that identifies the event this message represents and connects
                it with its definition. Events defined as part of the FHIR
                specification have the system value
                "http://terminology.hl7.org/CodeSystem/message&ndash;events".  Alternatively
                uri to the EventDefinition.
            destination:
              type: array
              items:
                $ref: "#/components/schemas/MessageHeader_Destination"
                description: The destination application which the message is intended for.
            sender:
              $ref: "#/components/schemas/Reference"
              description: Identifies the sending system to allow the use of a trust
                relationship.
            enterer:
              $ref: "#/components/schemas/Reference"
              description: The person or device that performed the data entry leading to this
                message. When there is more than one candidate, pick the most
                proximal to the message. Can provide other enterers in
                extensions.
            author:
              $ref: "#/components/schemas/Reference"
              description: The logical author of the message &ndash; the person or device that
                decided the described event should happen. When there is more
                than one candidate, pick the most proximal to the MessageHeader.
                Can provide other authors in extensions.
            source:
              $ref: "#/components/schemas/MessageHeader_Source"
              description: The source application from which this message originated.
            responsible:
              $ref: "#/components/schemas/Reference"
              description: The person or organization that accepts overall responsibility for
                the contents of the message. The implication is that the message
                event happened under the policies of the responsible party.
            reason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Coded indication of the cause for the event &ndash; indicates  a
                reason for the occurrence of the event that is a focus of this
                message.
            response:
              $ref: "#/components/schemas/MessageHeader_Response"
              description: Information about the message that this message is a response
                to.  Only present if this message is a response.
            focus:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The actual data of the message &ndash; a reference to the
                  root/focus class of the event.
            definition:
              type: string
              pattern: \\S*
              description: Permanent link to the MessageDefinition for this message.
          required:
            - source
      example:
        resourceType: MessageHeader
        meta:
          tag:
            - code: ibm/minimal
        eventCoding:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        source:
          _endpoint:
            extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
    MessageHeader_Destination:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Human&ndash;readable name for the target system.
            target:
              $ref: "#/components/schemas/Reference"
              description: Identifies the target end system in situations where the initial
                message transmission is to an intermediary system.
            endpoint:
              type: string
              pattern: \\S*
              description: Indicates where the message should be routed to.
            receiver:
              $ref: "#/components/schemas/Reference"
              description: Allows data conveyed by a message to be addressed to a particular
                person or department when routing to a specific application
                isn't sufficient.
          required:
            - endpoint
    MessageHeader_Response:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The MessageHeader.id of the message to which this message is a
                response.
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Code that identifies the type of response to the message &ndash;
                whether it was successful or not, and whether it should be
                resent or not.
            details:
              $ref: "#/components/schemas/Reference"
              description: Full details of any issues found in the message.
          required:
            - identifier
            - code
    MessageHeader_Source:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Human&ndash;readable name for the source system.
            software:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: May include configuration or other information useful in debugging.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Can convey versions of multiple systems in situations where a
                message passes through multiple hands.
            contact:
              $ref: "#/components/schemas/ContactPoint"
              description: An e&ndash;mail, phone, website or other contact point to use to
                resolve issues with message communications.
            endpoint:
              type: string
              pattern: \\S*
              description: Identifies the routing target to send acknowledgements to.
          required:
            - endpoint
    DeviceDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: "Unique instance identifiers assigned to a device by the software,
                  manufacturers, other organizations or owners. For example:
                  handle ID."
            udiDeviceIdentifier:
              type: array
              items:
                $ref: "#/components/schemas/DeviceDefinition_UdiDeviceIdentifier"
                description: Unique device identifier (UDI) assigned to device label or
                  package.  Note that the Device may include multiple
                  udiCarriers as it either may include just the udiCarrier for
                  the jurisdiction it is sold, or for multiple jurisdictions it
                  could have been sold.
            manufacturerString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A name of the manufacturer.
            manufacturerReference:
              $ref: "#/components/schemas/Reference"
              description: A name of the manufacturer.
            deviceName:
              type: array
              items:
                $ref: "#/components/schemas/DeviceDefinition_DeviceName"
                description: A name given to the device to identify it.
            modelNumber:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The model number for the device.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: >-
                The type of deviceName.

                UDILabelName | UserFriendlyName | PatientReportedName |
                ManufactureDeviceName | ModelName.
            specialization:
              type: array
              items:
                $ref: "#/components/schemas/DeviceDefinition_Specialization"
                description: The capabilities supported on a  device, the standards to which the
                  device conforms for a particular purpose, and used for the
                  communication.
            version:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: The version of the standard that is used to operate and
                  communicate.
            safety:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Safety characteristics of the device.
            shelfLifeStorage:
              type: array
              items:
                $ref: "#/components/schemas/ProductShelfLife"
                description: Shelf Life and storage information.
            physicalCharacteristics:
              $ref: "#/components/schemas/ProdCharacteristic"
              description: Dimensions, color etc.
            languageCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Language code for the human&ndash;readable text strings produced by
                  the device (all supported).
            capability:
              type: array
              items:
                $ref: "#/components/schemas/DeviceDefinition_Capability"
                description: Device capabilities.
            property:
              type: array
              items:
                $ref: "#/components/schemas/DeviceDefinition_Property"
                description: The actual configuration settings of a device as it actually
                  operates, e.g., regulation status, time properties.
            owner:
              $ref: "#/components/schemas/Reference"
              description: An organization that is responsible for the provision and ongoing
                maintenance of the device.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: Contact details for an organization or a particular human that is
                  responsible for the device.
            url:
              type: string
              pattern: \\S*
              description: A network address on which the device may be contacted directly.
            onlineInformation:
              type: string
              pattern: \\S*
              description: Access to on&ndash;line information about the device.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Descriptive information, usage information or implantation
                  information that is not captured in an existing element.
            quantity:
              $ref: "#/components/schemas/Quantity"
              description: The quantity of the device present in the packaging (e.g. the
                number of devices present in a pack, or the number of devices in
                the same package of the medicinal product).
            parentDevice:
              $ref: "#/components/schemas/Reference"
              description: The parent device it can be part of.
            material:
              type: array
              items:
                $ref: "#/components/schemas/DeviceDefinition_Material"
                description: A substance used to create the material(s) of which the device is
                  made.
      example:
        resourceType: DeviceDefinition
        meta:
          tag:
            - code: ibm/minimal
    DeviceDefinition_Capability:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of capability.
            description:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Description of capability.
          required:
            - type
    DeviceDefinition_DeviceName:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the device.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: >-
                The type of deviceName.

                UDILabelName | UserFriendlyName | PatientReportedName |
                ManufactureDeviceName | ModelName.
          required:
            - name
            - type
    DeviceDefinition_Material:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            substance:
              $ref: "#/components/schemas/CodeableConcept"
              description: The substance.
            alternate:
              type: boolean
              description: Indicates an alternative material of the device.
            allergenicIndicator:
              type: boolean
              description: Whether the substance is a known or suspected allergen.
          required:
            - substance
    DeviceDefinition_Property:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code that specifies the property DeviceDefinitionPropetyCode
                (Extensible).
            valueQuantity:
              type: array
              items:
                $ref: "#/components/schemas/Quantity"
                description: Property value as a quantity.
            valueCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Property value as a code, e.g., NTP4 (synced to NTP).
          required:
            - type
    DeviceDefinition_Specialization:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            systemType:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The standard that is used to operate and communicate.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The version of the standard that is used to operate and
                communicate.
          required:
            - systemType
    DeviceDefinition_UdiDeviceIdentifier:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            deviceIdentifier:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is to be associated with every Device that
                references this DeviceDefintiion for the issuer and
                jurisdication porvided in the
                DeviceDefinition.udiDeviceIdentifier.
            issuer:
              type: string
              pattern: \\S*
              description: The organization that assigns the identifier algorithm.
            jurisdiction:
              type: string
              pattern: \\S*
              description: The jurisdiction to which the deviceIdentifier applies.
          required:
            - deviceIdentifier
            - issuer
            - jurisdiction
    MarketingStatus:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            country:
              $ref: "#/components/schemas/CodeableConcept"
              description: The country in which the marketing authorisation has been granted
                shall be specified It should be specified using the ISO 3166
                &#8209; 1 alpha&ndash;2 code elements.
            jurisdiction:
              $ref: "#/components/schemas/CodeableConcept"
              description: Where a Medicines Regulatory Agency has granted a marketing
                authorisation for which specific provisions within a
                jurisdiction apply, the jurisdiction can be specified using an
                appropriate controlled terminology The controlled term and the
                controlled term identifier shall be specified.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: This attribute provides information on the status of the marketing
                of the medicinal product See ISO/TS 20443 for more information
                and examples.
            dateRange:
              $ref: "#/components/schemas/Period"
              description: The date when the Medicinal Product is placed on the market by the
                Marketing Authorisation Holder (or where applicable, the
                manufacturer/distributor) in a country and/or jurisdiction shall
                be provided A complete date consisting of day, month and year
                shall be specified using the ISO 8601 date format NOTE
                &ldquo;Placed on the market&rdquo; refers to the release of the
                Medicinal Product into the distribution chain.
            restoreDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date when the Medicinal Product is placed on the market by the
                Marketing Authorisation Holder (or where applicable, the
                manufacturer/distributor) in a country and/or jurisdiction shall
                be provided A complete date consisting of day, month and year
                shall be specified using the ISO 8601 date format NOTE
                &ldquo;Placed on the market&rdquo; refers to the release of the
                Medicinal Product into the distribution chain.
          required:
            - status
    ProductShelfLife:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Unique identifier for the packaged Medicinal Product.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: This describes the shelf life, taking into account various
                scenarios such as shelf life of the packaged Medicinal Product
                itself, shelf life after transformation where necessary and
                shelf life after the first opening of a bottle, etc. The shelf
                life type shall be specified using an appropriate controlled
                vocabulary The controlled term and the controlled term
                identifier shall be specified.
            period:
              $ref: "#/components/schemas/Quantity"
              description: The shelf life time period can be specified using a numerical value
                for the period of time and its unit of time measurement The unit
                of measurement shall be specified in accordance with ISO 11240
                and the resulting terminology The symbol and the symbol
                identifier shall be used.
            specialPrecautionsForStorage:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Special precautions for storage, if any, can be specified using an
                  appropriate controlled vocabulary The controlled term and the
                  controlled term identifier shall be specified.
          required:
            - type
            - period
    ProdCharacteristic:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            height:
              $ref: "#/components/schemas/Quantity"
              description: Where applicable, the height can be specified using a numerical
                value and its unit of measurement The unit of measurement shall
                be specified in accordance with ISO 11240 and the resulting
                terminology The symbol and the symbol identifier shall be used.
            width:
              $ref: "#/components/schemas/Quantity"
              description: Where applicable, the width can be specified using a numerical
                value and its unit of measurement The unit of measurement shall
                be specified in accordance with ISO 11240 and the resulting
                terminology The symbol and the symbol identifier shall be used.
            depth:
              $ref: "#/components/schemas/Quantity"
              description: Where applicable, the depth can be specified using a numerical
                value and its unit of measurement The unit of measurement shall
                be specified in accordance with ISO 11240 and the resulting
                terminology The symbol and the symbol identifier shall be used.
            weight:
              $ref: "#/components/schemas/Quantity"
              description: Where applicable, the weight can be specified using a numerical
                value and its unit of measurement The unit of measurement shall
                be specified in accordance with ISO 11240 and the resulting
                terminology The symbol and the symbol identifier shall be used.
            nominalVolume:
              $ref: "#/components/schemas/Quantity"
              description: Where applicable, the nominal volume can be specified using a
                numerical value and its unit of measurement The unit of
                measurement shall be specified in accordance with ISO 11240 and
                the resulting terminology The symbol and the symbol identifier
                shall be used.
            externalDiameter:
              $ref: "#/components/schemas/Quantity"
              description: Where applicable, the external diameter can be specified using a
                numerical value and its unit of measurement The unit of
                measurement shall be specified in accordance with ISO 11240 and
                the resulting terminology The symbol and the symbol identifier
                shall be used.
            shape:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Where applicable, the shape can be specified An appropriate
                controlled vocabulary shall be used The term and the term
                identifier shall be used.
            color:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Where applicable, the color can be specified An appropriate
                  controlled vocabulary shall be used The term and the term
                  identifier shall be used.
            imprint:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Where applicable, the imprint can be specified as text.
            image:
              type: array
              items:
                $ref: "#/components/schemas/Attachment"
                description: Where applicable, the image can be provided The format of the image
                  attachment shall be specified by regional implementations.
            scoring:
              $ref: "#/components/schemas/CodeableConcept"
              description: Where applicable, the scoring can be specified An appropriate
                controlled vocabulary shall be used The term and the term
                identifier shall be used.
    DeviceMetric:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: "Unique instance identifiers assigned to a device by the device or
                  gateway software, manufacturers, other organizations or
                  owners. For example: handle ID."
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: "Describes the type of the metric. For example: Heart Rate, PEEP
                Setting, etc."
            unit:
              $ref: "#/components/schemas/CodeableConcept"
              description: "Describes the unit that an observed value determined for this
                metric will have. For example: Percent, Seconds, etc."
            source:
              $ref: "#/components/schemas/Reference"
              description: Describes the link to the  Device that this DeviceMetric belongs to
                and that contains administrative device information such as
                manufacturer, serial number, etc.
            parent:
              $ref: "#/components/schemas/Reference"
              description: Describes the link to the  Device that this DeviceMetric belongs to
                and that provide information about the location of this
                DeviceMetric in the containment structure of the parent Device.
                An example would be a Device that represents a Channel. This
                reference can be used by a client application to distinguish
                DeviceMetrics that have the same type, but should be interpreted
                based on their containment location.
            operationalStatus:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: "Indicates current operational state of the device. For example:
                On, Off, Standby, etc."
            color:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Describes the color representation for the metric. This is often
                used to aid clinicians to track and identify parameter types by
                color. In practice, consider a Patient Monitor that has ECG/HR
                and Pleth for example; the parameters are displayed in different
                characteristic colors, such as HR&ndash;blue, BP&ndash;green,
                and PR and SpO2&ndash; magenta.
            category:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the category of the observation generation process. A
                DeviceMetric can be for example a setting, measurement, or
                calculation.
            measurementPeriod:
              $ref: "#/components/schemas/Timing"
              description: Describes the measurement repetition time. This is not necessarily
                the same as the update period. The measurement repetition time
                can range from milliseconds up to hours. An example for a
                measurement repetition time in the range of milliseconds is the
                sampling rate of an ECG. An example for a measurement repetition
                time in the range of hours is a NIBP that is triggered
                automatically every hour. The update period may be different
                than the measurement repetition time, if the device does not
                update the published observed value with the same frequency as
                it was measured.
            calibration:
              type: array
              items:
                $ref: "#/components/schemas/DeviceMetric_Calibration"
                description: Describes the calibrations that have been performed or that are
                  required to be performed.
          required:
            - type
            - category
      example:
        resourceType: DeviceMetric
        meta:
          tag:
            - code: ibm/minimal
        type:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        _category:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    DeviceMetric_Calibration:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Describes the type of the calibration method.
            state:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Describes the state of the calibration.
            time:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: Describes the time last calibration has been performed.
    Encounter:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier(s) by which this encounter is known.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: planned | arrived | triaged | in&ndash;progress | onleave |
                finished | cancelled +.
            statusHistory:
              type: array
              items:
                $ref: "#/components/schemas/Encounter_StatusHistory"
                description: The status history permits the encounter resource to contain the
                  status history without needing to read through the historical
                  versions of the resource, or even have the server store them.
            class:
              $ref: "#/components/schemas/Coding"
              description: Concepts representing classification of patient encounter such as
                ambulatory (outpatient), inpatient, emergency, home health or
                others due to local variations.
            classHistory:
              type: array
              items:
                $ref: "#/components/schemas/Encounter_ClassHistory"
                description: The class history permits the tracking of the encounters
                  transitions without needing to go  through the resource
                  history.  This would be used for a case where an admission
                  starts of as an emergency encounter, then transitions into an
                  inpatient scenario. Doing this and not restarting a new
                  encounter ensures that any lab/diagnostic results can more
                  easily follow the patient and not require re&ndash;processing
                  and not get lost or cancelled during a kind of discharge from
                  emergency to inpatient.
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Specific type of encounter (e.g. e&ndash;mail consultation,
                  surgical day&ndash;care, skilled nursing, rehabilitation).
            serviceType:
              $ref: "#/components/schemas/CodeableConcept"
              description: Broad categorization of the service that is to be provided (e.g.
                cardiology).
            priority:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the urgency of the encounter.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The patient or group present at the encounter.
            episodeOfCare:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Where a specific encounter should be classified as a part of a
                  specific episode(s) of care this field should be used. This
                  association can facilitate grouping of related encounters
                  together for a specific purpose, such as government reporting,
                  issue tracking, association via a common problem.  The
                  association is recorded on the encounter as these are
                  typically created after the episode of care and grouped on
                  entry rather than editing the episode of care to append
                  another encounter to it (the episode of care could span
                  years).
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The request this encounter satisfies (e.g. incoming referral or
                  procedure request).
            participant:
              type: array
              items:
                $ref: "#/components/schemas/Encounter_Participant"
                description: The list of people responsible for providing the service.
            appointment:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The appointment that scheduled this encounter.
            period:
              $ref: "#/components/schemas/Period"
              description: The time that the episode was in the specified status.
            length:
              $ref: "#/components/schemas/Duration"
              description: Quantity of time the encounter lasted. This excludes the time
                during leaves of absence.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Reason the encounter takes place, expressed as a code. For
                  admissions, this can be used for a coded admission diagnosis.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Reason the encounter takes place, expressed as a code. For
                  admissions, this can be used for a coded admission diagnosis.
            diagnosis:
              type: array
              items:
                $ref: "#/components/schemas/Encounter_Diagnosis"
                description: The list of diagnosis relevant to this encounter.
            account:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The set of accounts that may be used for billing for this
                  Encounter.
            hospitalization:
              $ref: "#/components/schemas/Encounter_Hospitalization"
              description: Details about the admission to a healthcare service.
            location:
              type: array
              items:
                $ref: "#/components/schemas/Encounter_Location"
                description: List of locations where  the patient has been during this
                  encounter.
            serviceProvider:
              $ref: "#/components/schemas/Reference"
              description: The organization that is primarily responsible for this Encounter's
                services. This MAY be the same as the organization on the
                Patient record, however it could be different, such as if the
                actor performing the services was from an external organization
                (which may be billed seperately) for an external
                consultation.  Refer to the example bundle showing an
                abbreviated set of Encounters for a colonoscopy.
            partOf:
              $ref: "#/components/schemas/Reference"
              description: Another Encounter of which this encounter is a part of
                (administratively or in time).
          required:
            - status
            - class
      example:
        resourceType: Encounter
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        class:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Encounter_ClassHistory:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            class:
              $ref: "#/components/schemas/Coding"
              description: inpatient | outpatient | ambulatory | emergency +.
            period:
              $ref: "#/components/schemas/Period"
              description: The time that the episode was in the specified class.
          required:
            - class
            - period
    Encounter_Diagnosis:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            condition:
              $ref: "#/components/schemas/Reference"
              description: Reason the encounter takes place, as specified using information
                from another resource. For admissions, this is the admission
                diagnosis. The indication will typically be a Condition (with
                other resources referenced in the evidence.detail), or a
                Procedure.
            use:
              $ref: "#/components/schemas/CodeableConcept"
              description: Role that this diagnosis has within the encounter (e.g. admission,
                billing, discharge &hellip;).
            rank:
              type: integer
              format: int32
              description: Ranking of the diagnosis (for each role type).
          required:
            - condition
    Encounter_Hospitalization:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            preAdmissionIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: Pre&ndash;admission identifier.
            origin:
              $ref: "#/components/schemas/Reference"
              description: The location/organization from which the patient came before
                admission.
            admitSource:
              $ref: "#/components/schemas/CodeableConcept"
              description: From where patient was admitted (physician referral, transfer).
            reAdmission:
              $ref: "#/components/schemas/CodeableConcept"
              description: Whether this hospitalization is a readmission and why if known.
            dietPreference:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Diet preferences reported by the patient.
            specialCourtesy:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Special courtesies (VIP, board member).
            specialArrangement:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Any special requests that have been made for this hospitalization
                  encounter, such as the provision of specific equipment or
                  other things.
            destination:
              $ref: "#/components/schemas/Reference"
              description: Location/organization to which the patient is discharged.
            dischargeDisposition:
              $ref: "#/components/schemas/CodeableConcept"
              description: Category or kind of location after discharge.
    Encounter_Location:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            location:
              $ref: "#/components/schemas/Reference"
              description: The location where the encounter takes place.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the participants' presence at the specified location
                during the period specified. If the participant is no longer at
                the location, then the period will have an end date/time.
            physicalType:
              $ref: "#/components/schemas/CodeableConcept"
              description: This will be used to specify the required levels
                (bed/ward/room/etc.) desired to be recorded to simplify either
                messaging or query.
            period:
              $ref: "#/components/schemas/Period"
              description: Time period during which the patient was present at the location.
          required:
            - location
    Encounter_Participant:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Role of participant in encounter.
            period:
              $ref: "#/components/schemas/Period"
              description: The period of time that the specified participant participated in
                the encounter. These can overlap or be sub&ndash;sets of the
                overall encounter's period.
            individual:
              $ref: "#/components/schemas/Reference"
              description: Persons involved in the encounter other than the patient.
    Encounter_StatusHistory:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: planned | arrived | triaged | in&ndash;progress | onleave |
                finished | cancelled +.
            period:
              $ref: "#/components/schemas/Period"
              description: The time that the episode was in the specified status.
          required:
            - status
            - period
    NutritionOrder:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers assigned to this order by the order sender or by the
                  order receiver.
            instantiatesCanonical:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to a FHIR&ndash;defined protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this NutritionOrder.
            instantiatesUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to an externally maintained protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this NutritionOrder.
            instantiates:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to a protocol, guideline, orderset or other
                  definition that is adhered to in whole or in part by this
                  NutritionOrder.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The workflow status of the nutrition order/request.
            intent:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the level of authority/intentionality associated with the
                NutrionOrder and where the request fits into the workflow chain.
            patient:
              $ref: "#/components/schemas/Reference"
              description: The person (patient) who needs the nutrition order for an oral
                diet, nutritional supplement and/or enteral or formula feeding.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: An encounter that provides additional information about the
                healthcare context in which this request is made.
            dateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date and time that this nutrition order was requested.
            orderer:
              $ref: "#/components/schemas/Reference"
              description: The practitioner that holds legal responsibility for ordering the
                diet, nutritional supplement, or formula feedings.
            allergyIntolerance:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A link to a record of allergies or intolerances  which should be
                  included in the nutrition order.
            foodPreferenceModifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: This modifier is used to convey order&ndash;specific modifiers
                  about the type of food that should be given. These can be
                  derived from patient allergies, intolerances, or preferences
                  such as Halal, Vegan or Kosher. This modifier applies to the
                  entire nutrition order inclusive of the oral diet, nutritional
                  supplements and enteral formula feedings.
            excludeFoodModifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: This modifier is used to convey Order&ndash;specific modifier about
                  the type of oral food or oral fluids that should not be given.
                  These can be derived from patient allergies, intolerances, or
                  preferences such as No Red Meat, No Soy or No Wheat
                  or  Gluten&ndash;Free.  While it should not be necessary to
                  repeat allergy or intolerance information captured in the
                  referenced AllergyIntolerance resource in the
                  excludeFoodModifier, this element may be used to convey
                  additional specificity related to foods that should be
                  eliminated from the patient&rsquo;s diet for any reason.  This
                  modifier applies to the entire nutrition order inclusive of
                  the oral diet, nutritional supplements and enteral formula
                  feedings.
            oralDiet:
              $ref: "#/components/schemas/NutritionOrder_OralDiet"
              description: Diet given orally in contrast to enteral (tube) feeding.
            supplement:
              type: array
              items:
                $ref: "#/components/schemas/NutritionOrder_Supplement"
                description: Oral nutritional products given in order to add further nutritional
                  value to the patient's diet.
            enteralFormula:
              $ref: "#/components/schemas/NutritionOrder_EnteralFormula"
              description: Feeding provided through the gastrointestinal tract via a tube,
                catheter, or stoma that delivers nutrition distal to the oral
                cavity.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Comments made about the {{title}} by the requester, performer,
                  subject or other participants.
          required:
            - status
            - intent
            - patient
            - dateTime
      example:
        resourceType: NutritionOrder
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _intent:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _dateTime:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    NutritionOrder_EnteralFormula:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            baseFormulaType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of enteral or infant formula such as an adult standard
                formula with fiber or a soy&ndash;based infant formula.
            baseFormulaProductName:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The product or brand name of the enteral or infant formula product
                such as "ACME Adult Standard Formula".
            additiveType:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the type of modular component such as protein,
                carbohydrate, fat or fiber to be provided in addition to or
                mixed with the base formula.
            additiveProductName:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The product or brand name of the type of modular component to be
                added to the formula.
            caloricDensity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The amount of energy (calories) that the formula should provide per
                specified volume, typically per mL or fluid oz.  For example, an
                infant may require a formula that provides 24 calories per fluid
                ounce or an adult may require an enteral formula that provides
                1.5 calorie/mL.
            routeofAdministration:
              $ref: "#/components/schemas/CodeableConcept"
              description: The route or physiological path of administration into the
                patient's gastrointestinal  tract for purposes of providing the
                formula feeding, e.g. nasogastric tube.
            administration:
              type: array
              items:
                $ref: "#/components/schemas/NutritionOrder_EnteralFormula_Administration"
                description: Formula administration instructions as structured data.  This
                  repeating structure allows for changing the administration
                  rate or volume over time for both bolus and continuous
                  feeding.  An example of this would be an instruction to
                  increase the rate of continuous feeding every 2 hours.
            maxVolumeToDeliver:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The maximum total quantity of formula that may be administered to a
                subject over the period of time, e.g. 1440 mL over 24 hours.
            administrationInstruction:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Free text formula administration, feeding instructions or
                additional instructions or information.
    NutritionOrder_EnteralFormula_Administration:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            schedule:
              $ref: "#/components/schemas/Timing"
              description: The time period and frequency at which the enteral formula should
                be delivered to the patient.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The volume of formula to provide to the patient per the specified
                administration schedule.
            rateQuantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The rate of administration of formula via a feeding pump, e.g. 60
                mL per hour, according to the specified schedule.
            rateRatio:
              $ref: "#/components/schemas/Ratio"
              description: The rate of administration of formula via a feeding pump, e.g. 60
                mL per hour, according to the specified schedule.
    NutritionOrder_OralDiet:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The kind of diet or dietary restriction such as fiber restricted
                  diet or diabetic diet.
            schedule:
              type: array
              items:
                $ref: "#/components/schemas/Timing"
                description: The time period and frequency at which the diet should be
                  given.  The diet should be given for the combination of all
                  schedules if more than one schedule is present.
            nutrient:
              type: array
              items:
                $ref: "#/components/schemas/NutritionOrder_OralDiet_Nutrient"
                description: Class that defines the quantity and type of nutrient modifications
                  (for example carbohydrate, fiber or sodium) required for the
                  oral diet.
            texture:
              type: array
              items:
                $ref: "#/components/schemas/NutritionOrder_OralDiet_Texture"
                description: Class that describes any texture modifications required for the
                  patient to safely consume various types of solid foods.
            fluidConsistencyType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The required consistency (e.g. honey&ndash;thick,
                  nectar&ndash;thick, thin, thickened.) of liquids or fluids
                  served to the patient.
            instruction:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Free text or additional instructions or information pertaining to
                the oral diet.
    NutritionOrder_OralDiet_Nutrient:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            modifier:
              $ref: "#/components/schemas/CodeableConcept"
              description: The nutrient that is being modified such as carbohydrate or sodium.
            amount:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The quantity of the specified nutrient to include in diet.
    NutritionOrder_OralDiet_Texture:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            modifier:
              $ref: "#/components/schemas/CodeableConcept"
              description: Any texture modifications (for solid foods) that should be made,
                e.g. easy to chew, chopped, ground, and pureed.
            foodType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The food type(s) (e.g. meats, all foods)  that the texture
                modification applies to.  This could be all foods types.
    NutritionOrder_Supplement:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of nutritional supplement product required such as a high
                protein or pediatric clear liquid supplement.
            productName:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The product or brand name of the nutritional supplement such as
                "Acme Protein Shake".
            schedule:
              type: array
              items:
                $ref: "#/components/schemas/Timing"
                description: The time period and frequency at which the supplement(s) should be
                  given.  The supplement should be given for the combination of
                  all schedules if more than one schedule is present.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The amount of the nutritional supplement to be given.
            instruction:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Free text or additional instructions or information pertaining to
                the oral supplement.
    Procedure:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this procedure by the performer or
                  other systems which remain constant as the resource is updated
                  and is propagated from server to server.
            instantiatesCanonical:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to a FHIR&ndash;defined protocol, guideline, order
                  set or other definition that is adhered to in whole or in part
                  by this Procedure.
            instantiatesUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to an externally maintained protocol, guideline,
                  order set or other definition that is adhered to in whole or
                  in part by this Procedure.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A reference to a resource that contains details of the request for
                  this procedure.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A larger event of which this particular procedure is a component or
                  step.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code specifying the state of the procedure. Generally, this will
                be the in&ndash;progress or completed state.
            statusReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Captures the reason for the current state of the procedure.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code that classifies the procedure for searching, sorting and
                display purposes (e.g. "Surgical Procedure").
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The specific procedure that is performed. Use text if the exact
                nature of the procedure cannot be coded (e.g. "Laparoscopic
                Appendectomy").
            subject:
              $ref: "#/components/schemas/Reference"
              description: The person, animal or group on which the procedure was performed.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The Encounter during which this Procedure was created or performed
                or to which the creation of this record is tightly associated.
            performedDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Estimated or actual date, date&ndash;time, period, or age when the
                procedure was performed.  Allows a period to support complex
                procedures that span more than one date, and also allows for the
                length of the procedure to be captured.
            performedPeriod:
              $ref: "#/components/schemas/Period"
              description: Estimated or actual date, date&ndash;time, period, or age when the
                procedure was performed.  Allows a period to support complex
                procedures that span more than one date, and also allows for the
                length of the procedure to be captured.
            performedString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Estimated or actual date, date&ndash;time, period, or age when the
                procedure was performed.  Allows a period to support complex
                procedures that span more than one date, and also allows for the
                length of the procedure to be captured.
            performedAge:
              $ref: "#/components/schemas/Age"
              description: Estimated or actual date, date&ndash;time, period, or age when the
                procedure was performed.  Allows a period to support complex
                procedures that span more than one date, and also allows for the
                length of the procedure to be captured.
            performedRange:
              $ref: "#/components/schemas/Range"
              description: Estimated or actual date, date&ndash;time, period, or age when the
                procedure was performed.  Allows a period to support complex
                procedures that span more than one date, and also allows for the
                length of the procedure to be captured.
            recorder:
              $ref: "#/components/schemas/Reference"
              description: Individual who recorded the record and takes responsibility for its
                content.
            asserter:
              $ref: "#/components/schemas/Reference"
              description: Individual who is making the procedure statement.
            performer:
              type: array
              items:
                $ref: "#/components/schemas/Procedure_Performer"
                description: Limited to "real" people rather than equipment.
            location:
              $ref: "#/components/schemas/Reference"
              description: The location where the procedure actually happened.  E.g. a newborn
                at home, a tracheostomy at a restaurant.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The coded reason why the procedure was performed. This may be a
                  coded entity of some type, or may simply be present as text.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The justification of why the procedure was performed.
            bodySite:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Detailed and structured anatomical location information. Multiple
                  locations are allowed &ndash; e.g. multiple punch biopsies of
                  a lesion.
            outcome:
              $ref: "#/components/schemas/CodeableConcept"
              description: The outcome of the procedure &ndash; did it resolve the reasons for
                the procedure being performed?
            report:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: This could be a histology result, pathology report, surgical
                  report, etc.
            complication:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Any complications that occurred during the procedure, or in the
                  immediate post&ndash;performance period. These are generally
                  tracked separately from the notes, which will typically
                  describe the procedure itself rather than any 'post procedure'
                  issues.
            complicationDetail:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Any complications that occurred during the procedure, or in the
                  immediate post&ndash;performance period.
            followUp:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: If the procedure required specific follow up &ndash; e.g. removal
                  of sutures. The follow up may be represented as a simple note
                  or could potentially be more complex, in which case the
                  CarePlan resource can be used.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Any other notes and comments about the procedure.
            focalDevice:
              type: array
              items:
                $ref: "#/components/schemas/Procedure_FocalDevice"
                description: A device that is implanted, removed or otherwise manipulated
                  (calibration, battery replacement, fitting a prosthesis,
                  attaching a wound&ndash;vac, etc.) as a focal portion of the
                  Procedure.
            usedReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies medications, devices and any other substance used as
                  part of the procedure.
            usedCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies coded items that were used as part of the procedure.
          required:
            - status
            - subject
      example:
        resourceType: Procedure
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Procedure_FocalDevice:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            action:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of change that happened to the device during the
                procedure.
            manipulated:
              $ref: "#/components/schemas/Reference"
              description: The device that was manipulated (changed) during the procedure.
          required:
            - manipulated
    Procedure_Performer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            function:
              $ref: "#/components/schemas/CodeableConcept"
              description: Distinguishes the type of involvement of the performer in the
                procedure. For example, surgeon, anaesthetist, endoscopist.
            actor:
              $ref: "#/components/schemas/Reference"
              description: The practitioner who was involved in the procedure.
            onBehalfOf:
              $ref: "#/components/schemas/Reference"
              description: The organization the device or practitioner was acting on behalf
                of.
          required:
            - actor
    MedicationRequest:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers associated with this medication request that are
                  defined by business processes and/or used to refer to it when
                  a direct URL reference to the resource itself is not
                  appropriate. They are business identifiers assigned to this
                  resource by the performer or other systems and remain constant
                  as the resource is updated and propagates from server to
                  server.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code specifying the current state of the order.  Generally, this
                will be active or completed state.
            statusReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Captures the reason for the current state of the MedicationRequest.
            intent:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Whether the request is a proposal, plan, or an original order.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Indicates the type of medication request (for example, where the
                  medication is expected to be consumed or administered (i.e.
                  inpatient or outpatient)).
            priority:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how quickly the Medication Request should be addressed
                with respect to other requests.
            doNotPerform:
              type: boolean
              description: If true indicates that the provider is asking for the medication
                request not to occur.
            reportedBoolean:
              type: boolean
              description: Indicates if this record was captured as a secondary 'reported'
                record rather than as an original primary
                source&ndash;of&ndash;truth record.  It may also indicate the
                source of the report.
            reportedReference:
              $ref: "#/components/schemas/Reference"
              description: Indicates if this record was captured as a secondary 'reported'
                record rather than as an original primary
                source&ndash;of&ndash;truth record.  It may also indicate the
                source of the report.
            medicationCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the medication being requested. This is a link to a
                resource that represents the medication which may be the details
                of the medication or simply an attribute carrying a code that
                identifies the medication from a known list of medications.
            medicationReference:
              $ref: "#/components/schemas/Reference"
              description: Identifies the medication being requested. This is a link to a
                resource that represents the medication which may be the details
                of the medication or simply an attribute carrying a code that
                identifies the medication from a known list of medications.
            subject:
              $ref: "#/components/schemas/Reference"
              description: A link to a resource representing the person or set of individuals
                to whom the medication will be given.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The Encounter during which this [x] was created or to which the
                creation of this record is tightly associated.
            supportingInformation:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Include additional information (for example, patient height and
                  weight) that supports the ordering of the medication.
            authoredOn:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date (and perhaps time) when the prescription was initially
                written or authored on.
            requester:
              $ref: "#/components/schemas/Reference"
              description: The individual, organization, or device that initiated the request
                and has responsibility for its activation.
            performer:
              $ref: "#/components/schemas/Reference"
              description: The specified desired performer of the medication treatment (e.g.
                the performer of the medication administration).
            performerType:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the type of performer of the administration of the
                medication.
            recorder:
              $ref: "#/components/schemas/Reference"
              description: The person who entered the order on behalf of another individual
                for example in the case of a verbal or a telephone order.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The reason or the indication for ordering or not ordering the
                  medication.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Condition or observation that supports why the medication was
                  ordered.
            instantiatesCanonical:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to a protocol, guideline, orderset, or other
                  definition that is adhered to in whole or in part by this
                  MedicationRequest.
            instantiatesUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to an externally maintained protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this MedicationRequest.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A plan or request that is fulfilled in whole or in part by this
                  medication request.
            groupIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: A shared identifier common to all requests that were authorized
                more or less simultaneously by a single author, representing the
                identifier of the requisition or prescription.
            courseOfTherapyType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The description of the overall patte3rn of the administration of
                the medication to the patient.
            insurance:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Insurance plans, coverage extensions, pre&ndash;authorizations
                  and/or pre&ndash;determinations that may be required for
                  delivering the requested service.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Extra information about the prescription that could not be conveyed
                  by the other attributes.
            dosageInstruction:
              type: array
              items:
                $ref: "#/components/schemas/Dosage"
                description: Indicates how the medication is to be used by the patient.
            dispenseRequest:
              $ref: "#/components/schemas/MedicationRequest_DispenseRequest"
              description: Indicates the specific details for the dispense or medication
                supply part of a medication request (also known as a Medication
                Prescription or Medication Order).  Note that this information
                is not always sent with the order.  There may be in some
                settings (e.g. hospitals) institutional or system support for
                completing the dispense details in the pharmacy department.
            substitution:
              $ref: "#/components/schemas/MedicationRequest_Substitution"
              description: Indicates whether or not substitution can or should be part of the
                dispense. In some cases, substitution must happen, in other
                cases substitution must not happen. This block explains the
                prescriber's intent. If nothing is specified substitution may be
                done.
            priorPrescription:
              $ref: "#/components/schemas/Reference"
              description: A link to a resource representing an earlier order related order or
                prescription.
            detectedIssue:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates an actual or potential clinical issue with or between one
                  or more active or proposed clinical actions for a patient;
                  e.g. Drug&ndash;drug interaction, duplicate therapy, dosage
                  alert etc.
            eventHistory:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Links to Provenance records for past versions of this resource or
                  fulfilling request or event resources that identify key state
                  transitions or updates that are likely to be relevant to a
                  user looking at the current version of the resource.
          required:
            - status
            - intent
            - subject
      example:
        resourceType: MedicationRequest
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _intent:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        medicationCodeableConcept:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    MedicationRequest_DispenseRequest:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            initialFill:
              $ref: "#/components/schemas/MedicationRequest_DispenseRequest_InitialFill"
              description: Indicates the quantity or duration for the first dispense of the
                medication.
            dispenseInterval:
              $ref: "#/components/schemas/Duration"
              description: The minimum period of time that must occur between dispenses of the
                medication.
            validityPeriod:
              $ref: "#/components/schemas/Period"
              description: This indicates the validity period of a prescription (stale dating
                the Prescription).
            numberOfRepeatsAllowed:
              type: integer
              format: int32
              description: 'An integer indicating the number of times, in addition to the
                original dispense, (aka refills or repeats) that the patient can
                receive the prescribed medication. Usage Notes: This integer
                does not include the original order dispense. This means that if
                an order indicates dispense 30 tablets plus "3 repeats", then
                the order can be dispensed a total of 4 times and the patient
                can receive a total of 120 tablets.  A prescriber may explicitly
                say that zero refills are permitted after the initial dispense.'
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The amount that is to be dispensed for one fill.
            expectedSupplyDuration:
              $ref: "#/components/schemas/Duration"
              description: Identifies the period time over which the supplied product is
                expected to be used, or the length of time the dispense is
                expected to last.
            performer:
              $ref: "#/components/schemas/Reference"
              description: Indicates the intended dispensing Organization specified by the
                prescriber.
    MedicationRequest_DispenseRequest_InitialFill:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The amount or quantity to provide as part of the first dispense.
            duration:
              $ref: "#/components/schemas/Duration"
              description: The length of time that the first dispense is expected to last.
    MedicationRequest_Substitution:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            allowedBoolean:
              type: boolean
              description: True if the prescriber allows a different drug to be dispensed from
                what was prescribed.
            allowedCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: True if the prescriber allows a different drug to be dispensed from
                what was prescribed.
            reason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the reason for the substitution, or why substitution must
                or must not be performed.
    VisionPrescription:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this vision prescription.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date this resource was created.
            patient:
              $ref: "#/components/schemas/Reference"
              description: A resource reference to the person to whom the vision prescription
                applies.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: A reference to a resource that identifies the particular occurrence
                of contact between patient and health care provider during which
                the prescription was issued.
            dateWritten:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date (and perhaps time) when the prescription was written.
            prescriber:
              $ref: "#/components/schemas/Reference"
              description: The healthcare professional responsible for authorizing the
                prescription.
            lensSpecification:
              type: array
              items:
                $ref: "#/components/schemas/VisionPrescription_LensSpecification"
                description: Contain the details of  the individual lens specifications and
                  serves as the authorization for the fullfillment by certified
                  professionals.
              minItems: 1
          required:
            - status
            - created
            - patient
            - dateWritten
            - prescriber
            - lensSpecification
      example:
        resourceType: VisionPrescription
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _created:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _dateWritten:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        prescriber:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        lensSpecification:
          - product:
              coding:
                - extension:
                    - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                      valueCode: unknown
            _eye:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    VisionPrescription_LensSpecification:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            product:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the type of vision correction product which is required
                for the patient.
            eye:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The eye for which the lens specification applies.
            sphere:
              type: number
              description: Lens power measured in dioptres (0.25 units).
            cylinder:
              type: number
              description: Power adjustment for astigmatism measured in dioptres (0.25 units).
            axis:
              type: integer
              format: int32
              description: Adjustment for astigmatism measured in integer degrees.
            prism:
              type: array
              items:
                $ref: "#/components/schemas/VisionPrescription_LensSpecification_Prism"
                description: Allows for adjustment on two axis.
            add:
              type: number
              description: Power adjustment for multifocal lenses measured in dioptres (0.25
                units).
            power:
              type: number
              description: Contact lens power measured in dioptres (0.25 units).
            backCurve:
              type: number
              description: Back curvature measured in millimetres.
            diameter:
              type: number
              description: Contact lens diameter measured in millimetres.
            duration:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The recommended maximum wear period for the lens.
            color:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Special color or pattern.
            brand:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Brand recommendations or restrictions.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Notes for special requirements such as coatings and lens materials.
          required:
            - product
            - eye
    VisionPrescription_LensSpecification_Prism:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            amount:
              type: number
              description: Amount of prism to compensate for eye alignment in fractional
                units.
            base:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The relative base, or reference lens edge, for the prism.
          required:
            - amount
            - base
    Endpoint:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier for the organization that is used to identify the
                  endpoint across multiple disparate systems.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: active | suspended | error | off | test.
            connectionType:
              $ref: "#/components/schemas/Coding"
              description: A coded value that represents the technical details of the usage of
                this endpoint, such as what WSDLs should be used in what way.
                (e.g. XDS.b/DICOM/cds&ndash;hook).
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A friendly name that this endpoint can be referred to with.
            managingOrganization:
              $ref: "#/components/schemas/Reference"
              description: The organization that manages this endpoint (even if technically
                another organization is hosting this in the cloud, it is the
                organization associated with the data).
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: Contact details for a human to contact about the subscription. The
                  primary use of this for system administrator troubleshooting.
            period:
              $ref: "#/components/schemas/Period"
              description: The interval during which the endpoint is expected to be
                operational.
            payloadType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The payload type describes the acceptable content that can be
                  communicated on the endpoint.
              minItems: 1
            payloadMimeType:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: The mime type to send the payload in &ndash; e.g.
                  application/fhir+xml, application/fhir+json. If the mime type
                  is not specified, then the sender could send any content
                  (including no content depending on the connectionType).
            address:
              type: string
              pattern: \\S*
              description: The uri that describes the actual end&ndash;point to connect to.
            header:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Additional headers / information to send as part of the
                  notification.
          required:
            - status
            - connectionType
            - payloadType
            - address
      example:
        resourceType: Endpoint
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        connectionType:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        payloadType:
          - coding:
              - extension:
                  - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                    valueCode: unknown
        _address:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    EnrollmentRequest:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: The Response business identifier.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date when this resource was created.
            insurer:
              $ref: "#/components/schemas/Reference"
              description: The Insurer who is target  of the request.
            provider:
              $ref: "#/components/schemas/Reference"
              description: The practitioner who is responsible for the services rendered to
                the patient.
            candidate:
              $ref: "#/components/schemas/Reference"
              description: Patient Resource.
            coverage:
              $ref: "#/components/schemas/Reference"
              description: Reference to the program or plan identification, underwriter or
                payor.
      example:
        resourceType: EnrollmentRequest
        meta:
          tag:
            - code: ibm/minimal
    EnrollmentResponse:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: The Response business identifier.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            request:
              $ref: "#/components/schemas/Reference"
              description: Original request resource reference.
            outcome:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: "Processing status: error, complete."
            disposition:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of the status of the adjudication.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date when the enclosed suite of services were performed or
                completed.
            organization:
              $ref: "#/components/schemas/Reference"
              description: The Insurer who produced this adjudicated response.
            requestProvider:
              $ref: "#/components/schemas/Reference"
              description: The practitioner who is responsible for the services rendered to
                the patient.
      example:
        resourceType: EnrollmentResponse
        meta:
          tag:
            - code: ibm/minimal
    EpisodeOfCare:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: The EpisodeOfCare may be known by different identifiers for
                  different contexts of use, such as when an external agency is
                  tracking the Episode for funding purposes.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: planned | waitlist | active | onhold | finished | cancelled.
            statusHistory:
              type: array
              items:
                $ref: "#/components/schemas/EpisodeOfCare_StatusHistory"
                description: The history of statuses that the EpisodeOfCare has been through
                  (without requiring processing the history of the resource).
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A classification of the type of episode of care; e.g. specialist
                  referral, disease management, type of funded care.
            diagnosis:
              type: array
              items:
                $ref: "#/components/schemas/EpisodeOfCare_Diagnosis"
                description: The list of diagnosis relevant to this episode of care.
            patient:
              $ref: "#/components/schemas/Reference"
              description: The patient who is the focus of this episode of care.
            managingOrganization:
              $ref: "#/components/schemas/Reference"
              description: The organization that has assumed the specific responsibilities for
                the specified duration.
            period:
              $ref: "#/components/schemas/Period"
              description: The period during this EpisodeOfCare that the specific status
                applied.
            referralRequest:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Referral Request(s) that are fulfilled by this EpisodeOfCare,
                  incoming referrals.
            careManager:
              $ref: "#/components/schemas/Reference"
              description: The practitioner that is the care manager/care coordinator for this
                patient.
            team:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The list of practitioners that may be facilitating this episode of
                  care for specific purposes.
            account:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The set of accounts that may be used for billing for this
                  EpisodeOfCare.
          required:
            - status
            - patient
      example:
        resourceType: EpisodeOfCare
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    EpisodeOfCare_Diagnosis:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            condition:
              $ref: "#/components/schemas/Reference"
              description: A list of conditions/problems/diagnoses that this episode of care
                is intended to be providing care for.
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: Role that this diagnosis has within the episode of care (e.g.
                admission, billing, discharge &hellip;).
            rank:
              type: integer
              format: int32
              description: Ranking of the diagnosis (for each role type).
          required:
            - condition
    EpisodeOfCare_StatusHistory:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: planned | waitlist | active | onhold | finished | cancelled.
            period:
              $ref: "#/components/schemas/Period"
              description: The period during this EpisodeOfCare that the specific status
                applied.
          required:
            - status
            - period
    EventDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this event definition when
                it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this event definition is (or
                will be) published. This URL can be the target of a canonical
                reference. It SHALL remain the same when the event definition is
                stored on different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this event definition
                  when it is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the event
                definition when it is referenced in a specification, model,
                design or instance. This is an arbitrary value managed by the
                event definition author and is not expected to be globally
                unique. For example, it might be a timestamp (e.g. yyyymmdd) if
                a managed version is not available. There is also no expectation
                that versions can be placed in a lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the event definition. This name
                should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the event
                definition.
            subtitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An explanatory or alternate title for the event definition giving
                additional information about its content.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this event definition. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this event definition is authored
                for testing purposes (or education/evaluation/marketing) and is
                not intended to be used for genuine usage.
            subjectCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code or group definition that describes the intended subject of
                the event definition.
            subjectReference:
              $ref: "#/components/schemas/Reference"
              description: A code or group definition that describes the intended subject of
                the event definition.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the event definition was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                event definition changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the event
                definition.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the event definition
                from a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate event
                  definition instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the event definition is
                  intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this event definition is needed and why it has
                been designed as it has.
            usage:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A detailed description of how the event definition is used from a
                clinical perspective.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the event definition and/or its
                contents. Copyright statements are generally legal restrictions
                on the use and publishing of the event definition.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was approved by the
                publisher. Approval happens once when the content is officially
                approved for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was last reviewed. Review
                happens periodically after approval but does not change the
                original approval date.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the event definition content was or is
                planned to be in active use.
            topic:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Descriptive topics related to the module. Topics provide a
                  high&ndash;level categorization of the module that can be
                  useful for filtering and searching.
            author:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual or organization primarily involved in the creation
                  and maintenance of the content.
            editor:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for internal
                  coherence of the content.
            reviewer:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for review of
                  some aspect of the content.
            endorser:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization responsible for officially endorsing
                  the content for use in some setting.
            relatedArtifact:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Related resources such as additional documentation, justification,
                  or bibliographic references.
            trigger:
              type: array
              items:
                $ref: "#/components/schemas/TriggerDefinition"
                description: The trigger element defines when the event occurs. If more than one
                  trigger condition is specified, the event fires whenever any
                  one of the trigger conditions is met.
              minItems: 1
          required:
            - status
            - trigger
      example:
        resourceType: EventDefinition
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        trigger:
          - _type:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    TriggerDefinition:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of triggering event.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A formal name for the event. This may be an absolute URI that
                identifies the event formally (e.g. from a trigger registry), or
                a simple relative URI that identifies the event in a local
                context.
            timingTiming:
              $ref: "#/components/schemas/Timing"
              description: The timing of the event (if this is a periodic trigger).
            timingReference:
              $ref: "#/components/schemas/Reference"
              description: The timing of the event (if this is a periodic trigger).
            timingDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The timing of the event (if this is a periodic trigger).
            timingDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The timing of the event (if this is a periodic trigger).
            data:
              type: array
              items:
                $ref: "#/components/schemas/DataRequirement"
                description: The triggering data of the event (if this is a data trigger). If
                  more than one data is requirement is specified, then all the
                  data requirements must be true.
            condition:
              $ref: "#/components/schemas/Expression"
              description: A boolean&ndash;valued expression that is evaluated in the context
                of the container of the trigger definition and returns whether
                or not the trigger fires.
          required:
            - type
    Evidence:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this evidence when it is
                referenced in a specification, model, design or an instance;
                also called its canonical identifier. This SHOULD be globally
                unique and SHOULD be a literal address at which at which an
                authoritative instance of this summary is (or will be)
                published. This URL can be the target of a canonical reference.
                It SHALL remain the same when the summary is stored on different
                servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this summary when it
                  is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the summary
                when it is referenced in a specification, model, design or
                instance. This is an arbitrary value managed by the summary
                author and is not expected to be globally unique. For example,
                it might be a timestamp (e.g. yyyymmdd) if a managed version is
                not available. There is also no expectation that versions can be
                placed in a lexicographical sequence.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the summary.
            citeAsReference:
              $ref: "#/components/schemas/Reference"
              description: Citation Resource or display of suggested citation for this
                evidence.
            citeAsMarkdown:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Citation Resource or display of suggested citation for this
                evidence.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this summary. Enables tracking the life&ndash;cycle
                of the content.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the summary was published. The
                date must change when the business version changes and it must
                change if the status code changes. In addition, it should change
                when the substantive content of the summary changes.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate evidence
                  instances.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was approved by the
                publisher. Approval happens once when the content is officially
                approved for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was last reviewed. Review
                happens periodically after approval but does not change the
                original approval date.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                evidence.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            author:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual, organization, or device primarily involved in the
                  creation and maintenance of the content.
            editor:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual, organization, or device primarily responsible for
                  internal coherence of the content.
            reviewer:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual, organization, or device primarily responsible for
                  review of some aspect of the content.
            endorser:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual, organization, or device responsible for officially
                  endorsing the content for use in some setting.
            relatedArtifact:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Link or citation to artifact associated with the summary.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the evidence from a
                consumer's perspective.
            assertion:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Declarative description of the Evidence.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Footnotes and/or explanatory notes.
            variableDefinition:
              type: array
              items:
                $ref: "#/components/schemas/Evidence_VariableDefinition"
                description: Evidence variable such as population, exposure, or outcome.
              minItems: 1
            synthesisType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The method to combine studies.
            studyType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of study that produced this evidence.
            statistic:
              type: array
              items:
                $ref: "#/components/schemas/Evidence_Statistic"
                description: Values and parameters for a single statistic.
            certainty:
              type: array
              items:
                $ref: "#/components/schemas/Evidence_Certainty"
                description: Assessment of certainty, confidence in the estimates, or quality of
                  the evidence.
          required:
            - status
            - variableDefinition
      example:
        resourceType: Evidence
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        variableDefinition:
          - variableRole:
              coding:
                - extension:
                    - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                      valueCode: unknown
    Evidence_Certainty:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Textual description of certainty.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Footnotes and/or explanatory notes.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Aspect of certainty being rated.
            rating:
              $ref: "#/components/schemas/CodeableConcept"
              description: Assessment or judgement of the aspect.
            rater:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Individual or group who did the rating.
            subcomponent:
              type: array
              items:
                $ref: "#/components/schemas/Evidence_Certainty"
                description: A domain or subdomain of certainty.
    Evidence_Statistic:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of the content value of the statistic.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Footnotes and/or explanatory notes.
            statisticType:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of statistic, eg relative risk.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: When the measured variable is handled categorically, the category
                element is used to define which category the statistic is
                reporting.
            quantity:
              $ref: "#/components/schemas/Quantity"
              description: Statistic value.
            numberOfEvents:
              type: integer
              format: int32
              description: The number of events associated with the statistic, where the unit
                of analysis is different from numberAffected,
                sampleSize.knownDataCount and sampleSize.numberOfParticipants.
            numberAffected:
              type: integer
              format: int32
              description: The number of participants affected where the unit of analysis is
                the same as sampleSize.knownDataCount and
                sampleSize.numberOfParticipants.
            sampleSize:
              $ref: "#/components/schemas/Evidence_Statistic_SampleSize"
              description: Number of samples in the statistic.
            attributeEstimate:
              type: array
              items:
                $ref: "#/components/schemas/Evidence_Statistic_AttributeEstimate"
                description: A statistical attribute of the statistic such as a measure of
                  heterogeneity.
            modelCharacteristic:
              type: array
              items:
                $ref: "#/components/schemas/Evidence_Statistic_ModelCharacteristic"
                description: A component of the method to generate the statistic.
    Evidence_Statistic_AttributeEstimate:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Human&ndash;readable summary of the estimate.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Footnote or explanatory note about the estimate.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of attribute estimate, eg confidence interval or p value.
            quantity:
              $ref: "#/components/schemas/Quantity"
              description: The singular quantity of the attribute estimate, for attribute
                estimates represented as single values; also used to report unit
                of measure.
            level:
              type: number
              description: Use 95 for a 95% confidence interval.
            range:
              $ref: "#/components/schemas/Range"
              description: Lower bound of confidence interval.
            attributeEstimate:
              type: array
              items:
                $ref: "#/components/schemas/Evidence_Statistic_AttributeEstimate"
                description: A nested attribute estimate; which is the attribute estimate of an
                  attribute estimate.
    Evidence_Statistic_ModelCharacteristic:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Description of a component of the method to generate the statistic.
            value:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Further specification of the quantified value of the component of
                the method to generate the statistic.
            variable:
              type: array
              items:
                $ref: "#/components/schemas/Evidence_Statistic_ModelCharacteristic_Variable"
                description: A variable adjusted for in the adjusted analysis.
            attributeEstimate:
              type: array
              items:
                $ref: "#/components/schemas/Evidence_Statistic_AttributeEstimate"
                description: An attribute of the statistic used as a model characteristic.
          required:
            - code
    Evidence_Statistic_ModelCharacteristic_Variable:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            variableDefinition:
              $ref: "#/components/schemas/Reference"
              description: Description of the variable.
            handling:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the variable is classified for use in adjusted analysis.
            valueCategory:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Description for grouping of ordinal or polychotomous variables.
            valueQuantity:
              type: array
              items:
                $ref: "#/components/schemas/Quantity"
                description: Discrete value for grouping of ordinal or polychotomous variables.
            valueRange:
              type: array
              items:
                $ref: "#/components/schemas/Range"
                description: Range of values for grouping of ordinal or polychotomous variables.
          required:
            - variableDefinition
    Evidence_Statistic_SampleSize:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Human&ndash;readable summary of population sample size.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Footnote or explanatory note about the sample size.
            numberOfStudies:
              type: integer
              format: int32
              description: Number of participants in the population.
            numberOfParticipants:
              type: integer
              format: int32
              description: A human&ndash;readable string to clarify or explain concepts about
                the sample size.
            knownDataCount:
              type: integer
              format: int32
              description: Number of participants with known results for measured variables.
    Evidence_VariableDefinition:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A text description or summary of the variable.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Footnotes and/or explanatory notes.
            variableRole:
              $ref: "#/components/schemas/CodeableConcept"
              description: population | subpopulation | exposure | referenceExposure |
                measuredVariable | confounder.
            observed:
              $ref: "#/components/schemas/Reference"
              description: Definition of the actual variable related to the statistic(s).
            intended:
              $ref: "#/components/schemas/Reference"
              description: Definition of the intended variable related to the Evidence.
            directnessMatch:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indication of quality of match between intended variable to actual
                variable.
          required:
            - variableRole
    EvidenceReport:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this EvidenceReport when
                it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this summary is (or will be)
                published. This URL can be the target of a canonical reference.
                It SHALL remain the same when the summary is stored on different
                servers.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this summary. Enables tracking the life&ndash;cycle
                of the content.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate evidence
                  report instances.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this EvidenceReport
                  when it is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            relatedIdentifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify things closely related
                  to this EvidenceReport.
            citeAsReference:
              $ref: "#/components/schemas/Reference"
              description: Citation Resource or display of suggested citation for this report.
            citeAsMarkdown:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Citation Resource or display of suggested citation for this report.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specifies the kind of report, such as grouping of classifiers,
                search results, or human&ndash;compiled expression.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Used for footnotes and annotations.
            relatedArtifact:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Link, description or reference to artifact associated with the
                  report.
            subject:
              $ref: "#/components/schemas/EvidenceReport_Subject"
              description: Specifies the subject or focus of the report. Answers "What is this
                report about?".
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                evidence report.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            author:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual, organization, or device primarily involved in the
                  creation and maintenance of the content.
            editor:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual, organization, or device primarily responsible for
                  internal coherence of the content.
            reviewer:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual, organization, or device primarily responsible for
                  review of some aspect of the content.
            endorser:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual, organization, or device responsible for officially
                  endorsing the content for use in some setting.
            relatesTo:
              type: array
              items:
                $ref: "#/components/schemas/EvidenceReport_RelatesTo"
                description: Relationships that this composition has with other compositions or
                  documents that already exist.
            section:
              type: array
              items:
                $ref: "#/components/schemas/EvidenceReport_Section"
                description: The root of the sections that make up the composition.
          required:
            - status
            - subject
      example:
        resourceType: EvidenceReport
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    EvidenceReport_RelatesTo:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of relationship that this composition has with anther
                composition or document.
            targetIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: The target composition/document of this relationship.
            targetReference:
              $ref: "#/components/schemas/Reference"
              description: The target composition/document of this relationship.
          required:
            - code
    EvidenceReport_Section:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The label for this particular section.  This will be part of the
                rendered content for the document, and is often used to build a
                table of contents.
            focus:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code identifying the kind of content contained within the
                section. This should be consistent with the section title.
            focusReference:
              $ref: "#/components/schemas/Reference"
              description: A definitional Resource identifying the kind of content contained
                within the section. This should be consistent with the section
                title.
            author:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies who is responsible for the information in this section,
                  not necessarily who typed it in.
            text:
              $ref: "#/components/schemas/Narrative"
              description: A human&ndash;readable narrative that contains the attested content
                of the section, used to represent the content of the resource to
                a human. The narrative need not encode all the structured data,
                but is peferred to contain sufficient detail to make it
                acceptable for a human to just read the narrative.
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the entry list was prepared &ndash; whether it is a working
                list that is suitable for being maintained on an ongoing basis,
                or if it represents a snapshot of a list of items from another
                source, or whether it is a prepared list where items may be
                marked as added, modified or deleted.
            orderedBy:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specifies the order applied to the items in the section entries.
            entryClassifier:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Specifies any type of classification of the evidence report.
            entryReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A reference to the actual resource from which the narrative in the
                  section is derived.
            entryQuantity:
              type: array
              items:
                $ref: "#/components/schemas/Quantity"
                description: Quantity as content.
            emptyReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: If the section is empty, why the list is empty. An empty section
                typically has some text explaining the empty reason.
            section:
              type: array
              items:
                $ref: "#/components/schemas/EvidenceReport_Section"
                description: A nested sub&ndash;section within this section.
    EvidenceReport_Subject:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            characteristic:
              type: array
              items:
                $ref: "#/components/schemas/EvidenceReport_Subject_Characteristic"
                description: Characteristic.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Used for general notes and annotations not coded elsewhere.
    EvidenceReport_Subject_Characteristic:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Characteristic code.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: Characteristic value.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Characteristic value.
            valueBoolean:
              type: boolean
              description: Characteristic value.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: Characteristic value.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: Characteristic value.
            exclude:
              type: boolean
              description: Is used to express not the characteristic.
            period:
              $ref: "#/components/schemas/Period"
              description: Timeframe for the characteristic.
          required:
            - code
    EvidenceVariable:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this evidence variable
                when it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this evidence variable is (or
                will be) published. This URL can be the target of a canonical
                reference. It SHALL remain the same when the evidence variable
                is stored on different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this evidence variable
                  when it is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                evidence variable when it is referenced in a specification,
                model, design or instance. This is an arbitrary value managed by
                the evidence variable author and is not expected to be globally
                unique. For example, it might be a timestamp (e.g. yyyymmdd) if
                a managed version is not available. There is also no expectation
                that versions can be placed in a lexicographical sequence. To
                provide a version consistent with the Decision Support Service
                specification, use the format Major.Minor.Revision (e.g. 1.0.0).
                For more information on versioning knowledge assets, refer to
                the Decision Support Service specification. Note that a version
                is required for non&ndash;experimental active artifacts.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the evidence variable. This
                name should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the evidence
                variable.
            shortTitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The short title provides an alternate title for use in informal
                descriptive contexts where the full, formal title is not
                necessary.
            subtitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An explanatory or alternate title for the EvidenceVariable giving
                additional information about its content.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this evidence variable. Enables tracking the
                life&ndash;cycle of the content.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the evidence variable was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                evidence variable changes.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the evidence variable
                from a consumer's perspective.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: A human&ndash;readable string to clarify or explain concepts about
                  the resource.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate evidence
                  variable instances.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                evidence variable.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            author:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual or organization primarily involved in the creation
                  and maintenance of the content.
            editor:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for internal
                  coherence of the content.
            reviewer:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for review of
                  some aspect of the content.
            endorser:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization responsible for officially endorsing
                  the content for use in some setting.
            relatedArtifact:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Related artifacts such as additional documentation, justification,
                  or bibliographic references.
            actual:
              type: boolean
              description: True if the actual variable measured, false if a conceptual
                representation of the intended variable.
            characteristicCombination:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Used to specify if two or more characteristics are combined with OR
                or AND.
            characteristic:
              type: array
              items:
                $ref: "#/components/schemas/EvidenceVariable_Characteristic"
                description: A characteristic that defines the members of the evidence element.
                  Multiple characteristics are applied with "and" semantics.
            handling:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Used for an outcome to classify.
            category:
              type: array
              items:
                $ref: "#/components/schemas/EvidenceVariable_Category"
                description: A grouping (or set of values) described along with other groupings
                  to specify the set of groupings allowed for the variable.
          required:
            - status
      example:
        resourceType: EvidenceVariable
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    EvidenceVariable_Category:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A human&ndash;readable title or representation of the grouping.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Value or set of values that define the grouping.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: Value or set of values that define the grouping.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: Value or set of values that define the grouping.
    EvidenceVariable_Characteristic:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, natural language description of the characteristic that
                could be used to communicate the criteria to an end&ndash;user.
            definitionReference:
              $ref: "#/components/schemas/Reference"
              description: Define members of the evidence element using Codes (such as
                condition, medication, or observation), Expressions ( using an
                expression language such as FHIRPath or CQL) or DataRequirements
                (such as Diabetes diagnosis onset in the last year).
            definitionCanonical:
              type: string
              pattern: \\S*
              description: Define members of the evidence element using Codes (such as
                condition, medication, or observation), Expressions ( using an
                expression language such as FHIRPath or CQL) or DataRequirements
                (such as Diabetes diagnosis onset in the last year).
            definitionCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Define members of the evidence element using Codes (such as
                condition, medication, or observation), Expressions ( using an
                expression language such as FHIRPath or CQL) or DataRequirements
                (such as Diabetes diagnosis onset in the last year).
            method:
              $ref: "#/components/schemas/CodeableConcept"
              description: Method used for describing characteristic.
            device:
              $ref: "#/components/schemas/Reference"
              description: Device used for determining characteristic.
            exclude:
              type: boolean
              description: When true, members with this characteristic are excluded from the
                element.
            timeFromStart:
              $ref: "#/components/schemas/EvidenceVariable_Characteristic_TimeFromStart"
              description: Indicates duration, period, or point of observation from the
                participant's study entry.
            groupMeasure:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how elements are aggregated within the study effective
                period.
    EvidenceVariable_Characteristic_TimeFromStart:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, natural language description.
            quantity:
              $ref: "#/components/schemas/Quantity"
              description: Used to express the observation at a defined amount of time after
                the study start.
            range:
              $ref: "#/components/schemas/Range"
              description: Used to express the observation within a period after the study
                start.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: A human&ndash;readable string to clarify or explain concepts about
                  the resource.
    DataRequirement:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of the required data, specified as the type name of a
                resource. For profiles, this value is set to the type of the
                base resource of the profile.
            profile:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The profile of the required data, specified as the uri of the
                  profile definition.
            subjectCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The intended subjects of the data requirement. If this element is
                not provided, a Patient subject is assumed.
            subjectReference:
              $ref: "#/components/schemas/Reference"
              description: The intended subjects of the data requirement. If this element is
                not provided, a Patient subject is assumed.
            mustSupport:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: >-
                  Indicates that specific elements of the type are referenced by
                  the knowledge module and must be supported by the consumer in
                  order to obtain an effective evaluation. This does not mean
                  that a value is required for this element, only that the
                  consuming system must understand the element and be able to
                  provide values for it if they are available. 


                  The value of mustSupport SHALL be a FHIRPath resolveable on
                  the type of the DataRequirement. The path SHALL consist only
                  of identifiers, constant indexers, and .resolve() (see the
                  [Simple FHIRPath Profile](fhirpath.html#simple) for full
                  details).
            codeFilter:
              type: array
              items:
                $ref: "#/components/schemas/DataRequirement_CodeFilter"
                description: Code filters specify additional constraints on the data, specifying
                  the value set of interest for a particular element of the
                  data. Each code filter defines an additional constraint on the
                  data, i.e. code filters are AND'ed, not OR'ed.
            dateFilter:
              type: array
              items:
                $ref: "#/components/schemas/DataRequirement_DateFilter"
                description: Date filters specify additional constraints on the data in terms of
                  the applicable date range for specific elements. Each date
                  filter specifies an additional constraint on the data, i.e.
                  date filters are AND'ed, not OR'ed.
            limit:
              type: integer
              format: int32
              description: Specifies a maximum number of results that are required (uses the
                _count search parameter).
            sort:
              type: array
              items:
                $ref: "#/components/schemas/DataRequirement_Sort"
                description: Specifies the order of the results to be returned.
          required:
            - type
    DataRequirement_CodeFilter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            path:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The code&ndash;valued attribute of the filter. The specified path
                SHALL be a FHIRPath resolveable on the specified type of the
                DataRequirement, and SHALL consist only of identifiers, constant
                indexers, and .resolve(). The path is allowed to contain
                qualifiers (.) to traverse sub&ndash;elements, as well as
                indexers ([x]) to traverse multiple&ndash;cardinality
                sub&ndash;elements (see the [Simple FHIRPath
                Profile](fhirpath.html#simple) for full details). Note that the
                index must be an integer constant. The path must resolve to an
                element of type code, Coding, or CodeableConcept.
            searchParam:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A token parameter that refers to a search parameter defined on the
                specified type of the DataRequirement, and which searches on
                elements of type code, Coding, or CodeableConcept.
            valueSet:
              type: string
              pattern: \\S*
              description: The valueset for the code filter. The valueSet and code elements
                are additive. If valueSet is specified, the filter will return
                only those data items for which the value of the
                code&ndash;valued element specified in the path is a member of
                the specified valueset.
            code:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: The codes for the code filter. If values are given, the filter will
                  return only those data items for which the code&ndash;valued
                  attribute specified by the path has a value that is one of the
                  specified codes. If codes are specified in addition to a value
                  set, the filter returns items matching a code in the value set
                  or one of the specified codes.
    DataRequirement_DateFilter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            path:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The date&ndash;valued attribute of the filter. The specified path
                SHALL be a FHIRPath resolveable on the specified type of the
                DataRequirement, and SHALL consist only of identifiers, constant
                indexers, and .resolve(). The path is allowed to contain
                qualifiers (.) to traverse sub&ndash;elements, as well as
                indexers ([x]) to traverse multiple&ndash;cardinality
                sub&ndash;elements (see the [Simple FHIRPath
                Profile](fhirpath.html#simple) for full details). Note that the
                index must be an integer constant. The path must resolve to an
                element of type date, dateTime, Period, Schedule, or Timing.
            searchParam:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A date parameter that refers to a search parameter defined on the
                specified type of the DataRequirement, and which searches on
                elements of type date, dateTime, Period, Schedule, or Timing.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The value of the filter. If period is specified, the filter will
                return only those data items that fall within the bounds
                determined by the Period, inclusive of the period boundaries. If
                dateTime is specified, the filter will return only those data
                items that are equal to the specified dateTime. If a Duration is
                specified, the filter will return only those data items that
                fall within Duration before now.
            valuePeriod:
              $ref: "#/components/schemas/Period"
              description: The value of the filter. If period is specified, the filter will
                return only those data items that fall within the bounds
                determined by the Period, inclusive of the period boundaries. If
                dateTime is specified, the filter will return only those data
                items that are equal to the specified dateTime. If a Duration is
                specified, the filter will return only those data items that
                fall within Duration before now.
            valueDuration:
              $ref: "#/components/schemas/Duration"
              description: The value of the filter. If period is specified, the filter will
                return only those data items that fall within the bounds
                determined by the Period, inclusive of the period boundaries. If
                dateTime is specified, the filter will return only those data
                items that are equal to the specified dateTime. If a Duration is
                specified, the filter will return only those data items that
                fall within Duration before now.
    DataRequirement_Sort:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            path:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The attribute of the sort. The specified path must be resolvable
                from the type of the required data. The path is allowed to
                contain qualifiers (.) to traverse sub&ndash;elements, as well
                as indexers ([x]) to traverse multiple&ndash;cardinality
                sub&ndash;elements. Note that the index must be an integer
                constant.
            direction:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The direction of the sort, ascending or descending.
          required:
            - path
            - direction
    ExampleScenario:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this example scenario when
                it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this example scenario is (or
                will be) published. This URL can be the target of a canonical
                reference. It SHALL remain the same when the example scenario is
                stored on different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this example scenario
                  when it is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the example
                scenario when it is referenced in a specification, model, design
                or instance. This is an arbitrary value managed by the example
                scenario author and is not expected to be globally unique. For
                example, it might be a timestamp (e.g. yyyymmdd) if a managed
                version is not available. There is also no expectation that
                versions can be placed in a lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the example scenario. This name
                should be usable as an identifier for the module by machine
                processing applications such as code generation.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this example scenario. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this example scenario is authored
                for testing purposes (or education/evaluation/marketing) and is
                not intended to be used for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the example scenario was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                example scenario changes. (e.g. the 'content logical
                definition').
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                example scenario.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate example
                  scenario instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the example scenario is
                  intended to be used.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the example scenario and/or its
                contents. Copyright statements are generally legal restrictions
                on the use and publishing of the example scenario.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: What the example scenario resource is created for. This should not
                be used to show the business purpose of the scenario itself, but
                the purpose of documenting a scenario.
            actor:
              type: array
              items:
                $ref: "#/components/schemas/ExampleScenario_Actor"
                description: Actor participating in the resource.
            instance:
              type: array
              items:
                $ref: "#/components/schemas/ExampleScenario_Instance"
                description: Each resource and each version that is present in the workflow.
            process:
              type: array
              items:
                $ref: "#/components/schemas/ExampleScenario_Process"
                description: Each major process &ndash; a group of operations.
            workflow:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Another nested workflow.
          required:
            - status
      example:
        resourceType: ExampleScenario
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ExampleScenario_Actor:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            actorId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: ID or acronym of actor.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of actor &ndash; person or system.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the actor as shown in the page.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The description of the actor.
          required:
            - actorId
            - type
    ExampleScenario_Instance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            resourceId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The id of the resource for referencing.
            resourceType:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of the resource.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short name for the resource instance.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Human&ndash;friendly description of the resource instance.
            version:
              type: array
              items:
                $ref: "#/components/schemas/ExampleScenario_Instance_Version"
                description: A specific version of the resource.
            containedInstance:
              type: array
              items:
                $ref: "#/components/schemas/ExampleScenario_Instance_ContainedInstance"
                description: Resources contained in the instance (e.g. the observations
                  contained in a bundle).
          required:
            - resourceId
            - resourceType
    ExampleScenario_Instance_ContainedInstance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            resourceId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Each resource contained in the instance.
            versionId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A specific version of a resource contained in the instance.
          required:
            - resourceId
    ExampleScenario_Instance_Version:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            versionId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier of a specific version of a resource.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The description of the resource version.
          required:
            - versionId
            - description
    ExampleScenario_Process:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The diagram title of the group of operations.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A longer description of the group of operations.
            preConditions:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of initial status before the process starts.
            postConditions:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of final status after the process ends.
            step:
              type: array
              items:
                $ref: "#/components/schemas/ExampleScenario_Process_Step"
                description: Each step of the process.
          required:
            - title
    ExampleScenario_Process_Step:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            process:
              type: array
              items:
                $ref: "#/components/schemas/ExampleScenario_Process"
                description: Nested process.
            pause:
              type: boolean
              description: If there is a pause in the flow.
            operation:
              $ref: "#/components/schemas/ExampleScenario_Process_Step_Operation"
              description: Each interaction or action.
            alternative:
              type: array
              items:
                $ref: "#/components/schemas/ExampleScenario_Process_Step_Alternative"
                description: Indicates an alternative step that can be taken instead of the
                  operations on the base step in exceptional/atypical
                  circumstances.
    ExampleScenario_Process_Step_Alternative:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The label to display for the alternative that gives a sense of the
                circumstance in which the alternative should be invoked.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A human&ndash;readable description of the alternative explaining
                when the alternative should occur rather than the base step.
            step:
              type: array
              items:
                $ref: "#/components/schemas/ExampleScenario_Process_Step"
                description: What happens in each alternative option.
          required:
            - title
    ExampleScenario_Process_Step_Operation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            number:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The sequential number of the interaction, e.g. 1.2.5.
            type:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The type of operation &ndash; CRUD.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The human&ndash;friendly name of the interaction.
            initiator:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Who starts the transaction.
            receiver:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Who receives the transaction.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A comment to be inserted in the diagram.
            initiatorActive:
              type: boolean
              description: Whether the initiator is deactivated right after the transaction.
            receiverActive:
              type: boolean
              description: Whether the receiver is deactivated right after the transaction.
            request:
              $ref: "#/components/schemas/ExampleScenario_Instance_ContainedInstance"
              description: Each resource instance used by the initiator.
            response:
              $ref: "#/components/schemas/ExampleScenario_Instance_ContainedInstance"
              description: Each resource instance used by the responder.
          required:
            - number
    FamilyMemberHistory:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this family member history by the
                  performer or other systems which remain constant as the
                  resource is updated and propagates from server to server.
            instantiatesCanonical:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to a FHIR&ndash;defined protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this FamilyMemberHistory.
            instantiatesUri:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL pointing to an externally maintained protocol, guideline,
                  orderset or other definition that is adhered to in whole or in
                  part by this FamilyMemberHistory.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code specifying the status of the record of the family history of
                a specific family member.
            dataAbsentReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes why the family member's history is not available.
            patient:
              $ref: "#/components/schemas/Reference"
              description: The person who this history concerns.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date (and possibly time) when the family member history was
                recorded or last updated.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: This will either be a name or a description; e.g. "Aunt Susan", "my
                cousin with the red hair".
            relationship:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of relationship this person has to the patient (father,
                mother, brother etc.).
            sex:
              $ref: "#/components/schemas/CodeableConcept"
              description: The birth sex of the family member.
            bornPeriod:
              $ref: "#/components/schemas/Period"
              description: The actual or approximate date of birth of the relative.
            bornDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The actual or approximate date of birth of the relative.
            bornString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The actual or approximate date of birth of the relative.
            ageAge:
              $ref: "#/components/schemas/Age"
              description: The age of the relative at the time the family member history is
                recorded.
            ageRange:
              $ref: "#/components/schemas/Range"
              description: The age of the relative at the time the family member history is
                recorded.
            ageString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The age of the relative at the time the family member history is
                recorded.
            estimatedAge:
              type: boolean
              description: If true, indicates that the age value specified is an estimated
                value.
            deceasedBoolean:
              type: boolean
              description: Deceased flag or the actual or approximate age of the relative at
                the time of death for the family member history record.
            deceasedAge:
              $ref: "#/components/schemas/Age"
              description: Deceased flag or the actual or approximate age of the relative at
                the time of death for the family member history record.
            deceasedRange:
              $ref: "#/components/schemas/Range"
              description: Deceased flag or the actual or approximate age of the relative at
                the time of death for the family member history record.
            deceasedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Deceased flag or the actual or approximate age of the relative at
                the time of death for the family member history record.
            deceasedString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Deceased flag or the actual or approximate age of the relative at
                the time of death for the family member history record.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Describes why the family member history occurred in coded or
                  textual form.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates a Condition, Observation, AllergyIntolerance, or
                  QuestionnaireResponse that justifies this family member
                  history event.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: This property allows a non condition&ndash;specific note to the
                  made about the related person. Ideally, the note would be in
                  the condition property, but this is not always possible.
            condition:
              type: array
              items:
                $ref: "#/components/schemas/FamilyMemberHistory_Condition"
                description: The significant Conditions (or condition) that the family member
                  had. This is a repeating section to allow a system to
                  represent more than one condition per resource, though there
                  is nothing stopping multiple resources &ndash; one per
                  condition.
          required:
            - status
            - patient
            - relationship
      example:
        resourceType: FamilyMemberHistory
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        relationship:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    FamilyMemberHistory_Condition:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The actual condition specified. Could be a coded condition (like MI
                or Diabetes) or a less specific string like 'cancer' depending
                on how much is known about the condition and the capabilities of
                the creating system.
            outcome:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates what happened following the condition.  If the condition
                resulted in death, deceased date is captured on the relation.
            contributedToDeath:
              type: boolean
              description: This condition contributed to the cause of death of the related
                person. If contributedToDeath is not populated, then it is
                unknown.
            onsetAge:
              $ref: "#/components/schemas/Age"
              description: Either the age of onset, range of approximate age or descriptive
                string can be recorded.  For conditions with multiple
                occurrences, this describes the first known occurrence.
            onsetRange:
              $ref: "#/components/schemas/Range"
              description: Either the age of onset, range of approximate age or descriptive
                string can be recorded.  For conditions with multiple
                occurrences, this describes the first known occurrence.
            onsetPeriod:
              $ref: "#/components/schemas/Period"
              description: Either the age of onset, range of approximate age or descriptive
                string can be recorded.  For conditions with multiple
                occurrences, this describes the first known occurrence.
            onsetString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Either the age of onset, range of approximate age or descriptive
                string can be recorded.  For conditions with multiple
                occurrences, this describes the first known occurrence.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: An area where general notes can be placed about this specific
                  condition.
          required:
            - code
    Goal:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this goal by the performer or
                  other systems which remain constant as the resource is updated
                  and propagates from server to server.
            lifecycleStatus:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The state of the goal throughout its lifecycle.
            achievementStatus:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes the progression, or lack thereof, towards the goal
                against the target.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Indicates a category the goal falls within.
            priority:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the mutually agreed level of importance associated with
                reaching/sustaining the goal.
            description:
              $ref: "#/components/schemas/CodeableConcept"
              description: Human&ndash;readable and/or coded description of a specific desired
                objective of care, such as "control blood pressure" or
                "negotiate an obstacle course" or "dance with child at wedding".
            subject:
              $ref: "#/components/schemas/Reference"
              description: Identifies the patient, group or organization for whom the goal is
                being established.
            startDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date or event after which the goal should begin being pursued.
            startCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The date or event after which the goal should begin being pursued.
            target:
              type: array
              items:
                $ref: "#/components/schemas/Goal_Target"
                description: Indicates what should be done by when.
            statusDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Identifies when the current status.  I.e. When initially created,
                when achieved, when cancelled, etc.
            statusReason:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Captures the reason for the current status.
            expressedBy:
              $ref: "#/components/schemas/Reference"
              description: Indicates whose goal this is &ndash; patient goal, practitioner
                goal, etc.
            addresses:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The identified conditions and other health record elements that are
                  intended to be addressed by the goal.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Any comments related to the goal.
            outcomeCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies the change (or lack of change) at the point when the
                  status of the goal is assessed.
            outcomeReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Details of what's changed (or not changed).
          required:
            - lifecycleStatus
            - description
            - subject
      example:
        resourceType: Goal
        meta:
          tag:
            - code: ibm/minimal
        _lifecycleStatus:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        description:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Goal_Target:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            measure:
              $ref: "#/components/schemas/CodeableConcept"
              description: The parameter whose value is being tracked, e.g. body weight, blood
                pressure, or hemoglobin A1c level.
            detailQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The target value of the focus to be achieved to signify the
                fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high
                or low or both values of the range can be specified. When a low
                value is missing, it indicates that the goal is achieved at any
                focus value at or below the high value. Similarly, if the high
                value is missing, it indicates that the goal is achieved at any
                focus value at or above the low value.
            detailRange:
              $ref: "#/components/schemas/Range"
              description: The target value of the focus to be achieved to signify the
                fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high
                or low or both values of the range can be specified. When a low
                value is missing, it indicates that the goal is achieved at any
                focus value at or below the high value. Similarly, if the high
                value is missing, it indicates that the goal is achieved at any
                focus value at or above the low value.
            detailCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The target value of the focus to be achieved to signify the
                fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high
                or low or both values of the range can be specified. When a low
                value is missing, it indicates that the goal is achieved at any
                focus value at or below the high value. Similarly, if the high
                value is missing, it indicates that the goal is achieved at any
                focus value at or above the low value.
            detailString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The target value of the focus to be achieved to signify the
                fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high
                or low or both values of the range can be specified. When a low
                value is missing, it indicates that the goal is achieved at any
                focus value at or below the high value. Similarly, if the high
                value is missing, it indicates that the goal is achieved at any
                focus value at or above the low value.
            detailBoolean:
              type: boolean
              description: The target value of the focus to be achieved to signify the
                fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high
                or low or both values of the range can be specified. When a low
                value is missing, it indicates that the goal is achieved at any
                focus value at or below the high value. Similarly, if the high
                value is missing, it indicates that the goal is achieved at any
                focus value at or above the low value.
            detailInteger:
              type: integer
              format: int32
              description: The target value of the focus to be achieved to signify the
                fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high
                or low or both values of the range can be specified. When a low
                value is missing, it indicates that the goal is achieved at any
                focus value at or below the high value. Similarly, if the high
                value is missing, it indicates that the goal is achieved at any
                focus value at or above the low value.
            detailRatio:
              $ref: "#/components/schemas/Ratio"
              description: The target value of the focus to be achieved to signify the
                fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high
                or low or both values of the range can be specified. When a low
                value is missing, it indicates that the goal is achieved at any
                focus value at or below the high value. Similarly, if the high
                value is missing, it indicates that the goal is achieved at any
                focus value at or above the low value.
            dueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Indicates either the date or the duration after start by which the
                goal should be met.
            dueDuration:
              $ref: "#/components/schemas/Duration"
              description: Indicates either the date or the duration after start by which the
                goal should be met.
    GraphDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this graph definition when
                it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this graph definition is (or
                will be) published. This URL can be the target of a canonical
                reference. It SHALL remain the same when the graph definition is
                stored on different servers.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the graph
                definition when it is referenced in a specification, model,
                design or instance. This is an arbitrary value managed by the
                graph definition author and is not expected to be globally
                unique. For example, it might be a timestamp (e.g. yyyymmdd) if
                a managed version is not available. There is also no expectation
                that versions can be placed in a lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the graph definition. This name
                should be usable as an identifier for the module by machine
                processing applications such as code generation.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this graph definition. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this graph definition is authored
                for testing purposes (or education/evaluation/marketing) and is
                not intended to be used for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the graph definition was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                graph definition changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the graph
                definition.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the graph definition
                from a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate graph
                  definition instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the graph definition is
                  intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this graph definition is needed and why it has
                been designed as it has.
            start:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of FHIR resource at which instances of this graph start.
            profile:
              type: string
              pattern: \\S*
              description: The profile that describes the use of the base resource.
            link:
              type: array
              items:
                $ref: "#/components/schemas/GraphDefinition_Link"
                description: Links this graph makes rules about.
          required:
            - name
            - status
            - start
      example:
        resourceType: GraphDefinition
        meta:
          tag:
            - code: ibm/minimal
        _name:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _start:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    GraphDefinition_Link:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            path:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A FHIR expression that identifies one of FHIR References to other
                resources.
            sliceName:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Which slice (if profiled).
            min:
              type: integer
              format: int32
              description: Minimum occurrences for this link.
            max:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Maximum occurrences for this link.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Information about why this link is of interest in this graph
                definition.
            target:
              type: array
              items:
                $ref: "#/components/schemas/GraphDefinition_Link_Target"
                description: Potential target for the link.
    GraphDefinition_Link_Target:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Type of resource this link refers to.
            params:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A set of parameters to look up.
            profile:
              type: string
              pattern: \\S*
              description: Profile for the target resource.
            compartment:
              type: array
              items:
                $ref: "#/components/schemas/GraphDefinition_Link_Target_Compartment"
                description: Compartment Consistency Rules.
            link:
              type: array
              items:
                $ref: "#/components/schemas/GraphDefinition_Link"
                description: Additional links from target resource.
          required:
            - type
    GraphDefinition_Link_Target_Compartment:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            use:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines how the compartment rule is used &ndash; whether it it is
                used to test whether resources are subject to the rule, or
                whether it is a rule that must be followed.
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identifies the compartment.
            rule:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: identical | matching | different | no&ndash;rule | custom.
            expression:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Custom rule, as a FHIRPath expression.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Documentation for FHIRPath expression.
          required:
            - use
            - code
            - rule
    GuidanceResponse:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            requestIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: The identifier of the request associated with this response. If an
                identifier was given as part of the request, it will be
                reproduced here to enable the requester to more easily identify
                the response in a multi&ndash;request scenario.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Allows a service to provide  unique, business identifiers for the
                  response.
            moduleUri:
              type: string
              pattern: \\S*
              description: An identifier, CodeableConcept or canonical reference to the
                guidance that was requested.
            moduleCanonical:
              type: string
              pattern: \\S*
              description: An identifier, CodeableConcept or canonical reference to the
                guidance that was requested.
            moduleCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: An identifier, CodeableConcept or canonical reference to the
                guidance that was requested.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the response. If the evaluation is completed
                successfully, the status will indicate success. However, in
                order to complete the evaluation, the engine may require more
                information. In this case, the status will be
                data&ndash;required, and the response will contain a description
                of the additional required information. If the evaluation
                completed successfully, but the engine determines that a
                potentially more accurate response could be provided if more
                data was available, the status will be data&ndash;requested, and
                the response will contain a description of the additional
                requested information.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The patient for which the request was processed.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The encounter during which this response was created or to which
                the creation of this record is tightly associated.
            occurrenceDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Indicates when the guidance response was processed.
            performer:
              $ref: "#/components/schemas/Reference"
              description: Provides a reference to the device that performed the guidance.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Describes the reason for the guidance response in coded or textual
                  form.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates the reason the request was initiated. This is typically
                  provided as a parameter to the evaluation and echoed by the
                  service, although for some use cases, such as
                  subscription&ndash; or event&ndash;based scenarios, it may
                  provide an indication of the cause for the response.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Provides a mechanism to communicate additional information about
                  the response.
            evaluationMessage:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Messages resulting from the evaluation of the artifact or
                  artifacts. As part of evaluating the request, the engine may
                  produce informational or warning messages. These messages will
                  be provided by this element.
            outputParameters:
              $ref: "#/components/schemas/Reference"
              description: The output parameters of the evaluation, if any. Many modules will
                result in the return of specific resources such as procedure or
                communication requests that are returned as part of the
                operation result. However, modules may define specific outputs
                that would be returned as the result of the evaluation, and
                these would be returned in this element.
            result:
              $ref: "#/components/schemas/Reference"
              description: The actions, if any, produced by the evaluation of the artifact.
            dataRequirement:
              type: array
              items:
                $ref: "#/components/schemas/DataRequirement"
                description: If the evaluation could not be completed due to lack of
                  information, or additional information would potentially
                  result in a more accurate response, this element will a
                  description of the data required in order to proceed with the
                  evaluation. A subsequent request to the service should include
                  this data.
          required:
            - status
      example:
        resourceType: GuidanceResponse
        meta:
          tag:
            - code: ibm/minimal
        _moduleUri:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    HealthcareService:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: External identifiers for this item.
            active:
              type: boolean
              description: This flag is used to mark the record to not be used. This is not
                used when a center is closed for maintenance, or for holidays,
                the notAvailable period is to be used for this.
            providedBy:
              $ref: "#/components/schemas/Reference"
              description: The organization that provides this healthcare service.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies the broad category of service being performed or
                  delivered.
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The specific type of service that may be delivered or performed.
            specialty:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Collection of specialties handled by the service site. This is more
                  of a medical term.
            location:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The location(s) where this healthcare service may be provided.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Further description of the service as it would be presented to a
                consumer while searching.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Any additional description of the service and/or any specific
                issues not covered by the other attributes, which can be
                displayed as further detail under the serviceName.
            extraDetails:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Extra details about the service that can't be placed in the other
                fields.
            photo:
              $ref: "#/components/schemas/Attachment"
              description: If there is a photo/symbol associated with this HealthcareService,
                it may be included here to facilitate quick identification of
                the service in a list.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: List of contacts related to this specific healthcare service.
            coverageArea:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The location(s) that this service is available to (not where the
                  service is provided).
            serviceProvisionCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The code(s) that detail the conditions under which the healthcare
                  service is available/offered.
            eligibility:
              type: array
              items:
                $ref: "#/components/schemas/HealthcareService_Eligibility"
                description: Does this service have specific eligibility requirements that need
                  to be met in order to use the service?
            program:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Programs that this service is applicable to.
            characteristic:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Collection of characteristics (attributes).
            communication:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Some services are specifically made available in multiple
                  languages, this property permits a directory to declare the
                  languages this is offered in. Typically this is only provided
                  where a service operates in communities with mixed languages
                  used.
            referralMethod:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Ways that the service accepts referrals, if this is not provided
                  then it is implied that no referral is required.
            appointmentRequired:
              type: boolean
              description: Indicates whether or not a prospective consumer will require an
                appointment for a particular service at a site to be provided by
                the Organization. Indicates if an appointment is required for
                access to this service.
            availableTime:
              type: array
              items:
                $ref: "#/components/schemas/HealthcareService_AvailableTime"
                description: A collection of times that the Service Site is available.
            notAvailable:
              type: array
              items:
                $ref: "#/components/schemas/HealthcareService_NotAvailable"
                description: The HealthcareService is not available during this period of time
                  due to the provided reason.
            availabilityExceptions:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of site availability exceptions, e.g. public holiday
                availability. Succinctly describing all possible exceptions to
                normal site availability as details in the available Times and
                not available Times.
            endpoint:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Technical endpoints providing access to services operated for the
                  specific healthcare services defined at this resource.
      example:
        resourceType: HealthcareService
        meta:
          tag:
            - code: ibm/minimal
    HealthcareService_AvailableTime:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            daysOfWeek:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Indicates which days of the week are available between the start
                  and end Times.
            allDay:
              type: boolean
              description: Is this always available? (hence times are irrelevant) e.g. 24 hour
                service.
            availableStartTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: "The opening time of day. Note: If the AllDay flag is set, then
                this time is ignored."
            availableEndTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: "The closing time of day. Note: If the AllDay flag is set, then
                this time is ignored."
    HealthcareService_Eligibility:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Coded value for the eligibility.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Describes the eligibility conditions for the service.
    HealthcareService_NotAvailable:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The reason that can be presented to the user as to why this time is
                not available.
            during:
              $ref: "#/components/schemas/Period"
              description: Service is not available (seasonally or for a public holiday) from
                this date.
          required:
            - description
    ImagingStudy:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers for the ImagingStudy such as DICOM Study Instance UID,
                  and Accession Number.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of the ImagingStudy.
            modality:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: A list of all the series.modality values that are actual
                  acquisition modalities, i.e. those in the DICOM Context Group
                  29 (value set OID 1.2.840.10008.6.1.19).
            subject:
              $ref: "#/components/schemas/Reference"
              description: The subject, typically a patient, of the imaging study.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The healthcare event (e.g. a patient and healthcare provider
                interaction) during which this ImagingStudy is made.
            started:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date and time the study started.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A list of the diagnostic requests that resulted in this imaging
                  study being performed.
            referrer:
              $ref: "#/components/schemas/Reference"
              description: The requesting/referring physician.
            interpreter:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Who read the study and interpreted the images or other content.
            endpoint:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The network service providing access (e.g., query, view, or
                  retrieval) for the study. See implementation notes for
                  information about using DICOM endpoints. A study&ndash;level
                  endpoint applies to each series in the study, unless
                  overridden by a series&ndash;level endpoint with the same
                  Endpoint.connectionType.
            numberOfSeries:
              type: integer
              format: int32
              description: Number of Series in the Study. This value given may be larger than
                the number of series elements this Resource contains due to
                resource availability, security, or other factors. This element
                should be present if any series elements are present.
            numberOfInstances:
              type: integer
              format: int32
              description: Number of SOP Instances in Study. This value given may be larger
                than the number of instance elements this resource contains due
                to resource availability, security, or other factors. This
                element should be present if any instance elements are present.
            procedureReference:
              $ref: "#/components/schemas/Reference"
              description: The procedure which this ImagingStudy was part of.
            procedureCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The code for the performed procedure type.
            location:
              $ref: "#/components/schemas/Reference"
              description: The principal physical location where the ImagingStudy was
                performed.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Description of clinical condition indicating why the ImagingStudy
                  was requested.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates another resource whose existence justifies this Study.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Per the recommended DICOM mapping, this element is derived from the
                  Study Description attribute (0008,1030). Observations or
                  findings about the imaging study should be recorded in another
                  resource, e.g. Observation, and not in this element.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The Imaging Manager description of the study.
                Institution&ndash;generated description or classification of the
                Study (component) performed.
            series:
              type: array
              items:
                $ref: "#/components/schemas/ImagingStudy_Series"
                description: Each study has one or more series of images or other content.
          required:
            - status
            - subject
      example:
        resourceType: ImagingStudy
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ImagingStudy_Series:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            uid:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The DICOM Series Instance UID for the series.
            number:
              type: integer
              format: int32
              description: The numeric identifier of this series in the study.
            modality:
              $ref: "#/components/schemas/Coding"
              description: The modality of this series sequence.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of the series.
            numberOfInstances:
              type: integer
              format: int32
              description: Number of SOP Instances in the Study. The value given may be larger
                than the number of instance elements this resource contains due
                to resource availability, security, or other factors. This
                element should be present if any instance elements are present.
            endpoint:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The network service providing access (e.g., query, view, or
                  retrieval) for this series. See implementation notes for
                  information about using DICOM endpoints. A series&ndash;level
                  endpoint, if present, has precedence over a study&ndash;level
                  endpoint with the same Endpoint.connectionType.
            bodySite:
              $ref: "#/components/schemas/Coding"
              description: The anatomic structures examined. See DICOM Part 16 Annex L
                (http://dicom.nema.org/medical/dicom/current/output/chtml/part16/chapter_L.html)
                for DICOM to SNOMED&ndash;CT mappings. The bodySite may indicate
                the laterality of body part imaged; if so, it shall be
                consistent with any content of ImagingStudy.series.laterality.
            laterality:
              $ref: "#/components/schemas/Coding"
              description: The laterality of the (possibly paired) anatomic structures
                examined. E.g., the left knee, both lungs, or unpaired abdomen.
                If present, shall be consistent with any laterality information
                indicated in ImagingStudy.series.bodySite.
            specimen:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The specimen imaged, e.g., for whole slide imaging of a biopsy.
            started:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date and time the series was started.
            performer:
              type: array
              items:
                $ref: "#/components/schemas/ImagingStudy_Series_Performer"
                description: Indicates who or what performed the series and how they were
                  involved.
            instance:
              type: array
              items:
                $ref: "#/components/schemas/ImagingStudy_Series_Instance"
                description: A single SOP instance within the series, e.g. an image, or
                  presentation state.
          required:
            - uid
            - modality
    ImagingStudy_Series_Instance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            uid:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The DICOM SOP Instance UID for this image or other DICOM content.
            sopClass:
              $ref: "#/components/schemas/Coding"
              description: DICOM instance  type.
            number:
              type: integer
              format: int32
              description: The number of instance in the series.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The description of the instance.
          required:
            - uid
            - sopClass
    ImagingStudy_Series_Performer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            function:
              $ref: "#/components/schemas/CodeableConcept"
              description: Distinguishes the type of involvement of the performer in the
                series.
            actor:
              $ref: "#/components/schemas/Reference"
              description: Indicates who or what performed the series.
          required:
            - actor
    Immunization:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this immunization record.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the current status of the immunization event.
            statusReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the reason the immunization event was not performed.
            vaccineCode:
              $ref: "#/components/schemas/CodeableConcept"
              description: Vaccine that was administered or was to be administered.
            patient:
              $ref: "#/components/schemas/Reference"
              description: The patient who either received or did not receive the
                immunization.
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The visit or admission or other contact between patient and health
                care provider the immunization was performed as part of.
            occurrenceDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date vaccine administered or was to be administered.
            occurrenceString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Date vaccine administered or was to be administered.
            recorded:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date the occurrence of the immunization was first captured in
                the record &ndash; potentially significantly after the
                occurrence of the event.
            primarySource:
              type: boolean
              description: An indication that the content of the record is based on
                information from the person who administered the vaccine. This
                reflects the context under which the data was originally
                recorded.
            reportOrigin:
              $ref: "#/components/schemas/CodeableConcept"
              description: The source of the data when the report of the immunization event is
                not based on information from the person who administered the
                vaccine.
            location:
              $ref: "#/components/schemas/Reference"
              description: The service delivery location where the vaccine administration
                occurred.
            manufacturer:
              $ref: "#/components/schemas/Reference"
              description: Name of vaccine manufacturer.
            lotNumber:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Lot number of the  vaccine product.
            expirationDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Date vaccine batch expires.
            site:
              $ref: "#/components/schemas/CodeableConcept"
              description: Body site where vaccine was administered.
            route:
              $ref: "#/components/schemas/CodeableConcept"
              description: The path by which the vaccine product is taken into the body.
            doseQuantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The quantity of vaccine product that was administered.
            performer:
              type: array
              items:
                $ref: "#/components/schemas/Immunization_Performer"
                description: Indicates who performed the immunization event.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Extra information about the immunization that is not conveyed by
                  the other attributes.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Reasons why the vaccine was administered.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Condition, Observation or DiagnosticReport that supports why the
                  immunization was administered.
            isSubpotent:
              type: boolean
              description: Indication if a dose is considered to be subpotent. By default, a
                dose should be considered to be potent.
            subpotentReason:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Reason why a dose is considered to be subpotent.
            education:
              type: array
              items:
                $ref: "#/components/schemas/Immunization_Education"
                description: Educational material presented to the patient (or guardian) at the
                  time of vaccine administration.
            programEligibility:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Indicates a patient's eligibility for a funding program.
            fundingSource:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the source of the vaccine actually administered. This may
                be different than the patient eligibility (e.g. the patient may
                be eligible for a publically purchased vaccine but due to
                inventory issues, vaccine purchased with private funds was
                actually administered).
            reaction:
              type: array
              items:
                $ref: "#/components/schemas/Immunization_Reaction"
                description: Categorical data indicating that an adverse event is associated in
                  time to an immunization.
            protocolApplied:
              type: array
              items:
                $ref: "#/components/schemas/Immunization_ProtocolApplied"
                description: The protocol (set of recommendations) being followed by the
                  provider who administered the dose.
          required:
            - status
            - vaccineCode
            - patient
      example:
        resourceType: Immunization
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        vaccineCode:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _occurrenceDateTime:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Immunization_Education:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            documentType:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Identifier of the material presented to the patient.
            reference:
              type: string
              pattern: \\S*
              description: Reference pointer to the educational material given to the patient
                if the information was on line.
            publicationDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date the educational material was published.
            presentationDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date the educational material was given to the patient.
    Immunization_Performer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            function:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes the type of performance (e.g. ordering provider,
                administering provider, etc.).
            actor:
              $ref: "#/components/schemas/Reference"
              description: The practitioner or organization who performed the action.
          required:
            - actor
    Immunization_ProtocolApplied:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            series:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: One possible path to achieve presumed immunity against a disease
                &ndash; within the context of an authority.
            authority:
              $ref: "#/components/schemas/Reference"
              description: Indicates the authority who published the protocol (e.g. ACIP) that
                is being followed.
            targetDisease:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The vaccine preventable disease the dose is being administered
                  against.
            doseNumberPositiveInt:
              type: integer
              format: int32
              description: Nominal position in a series.
            doseNumberString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Nominal position in a series.
            seriesDosesPositiveInt:
              type: integer
              format: int32
              description: The recommended number of doses to achieve immunity.
            seriesDosesString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The recommended number of doses to achieve immunity.
    Immunization_Reaction:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date of reaction to the immunization.
            detail:
              $ref: "#/components/schemas/Reference"
              description: Details of the reaction.
            reported:
              type: boolean
              description: Self&ndash;reported indicator.
    ImmunizationEvaluation:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this immunization evaluation
                  record.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the current status of the evaluation of the vaccination
                administration event.
            patient:
              $ref: "#/components/schemas/Reference"
              description: The individual for whom the evaluation is being done.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date the evaluation of the vaccine administration event was
                performed.
            authority:
              $ref: "#/components/schemas/Reference"
              description: Indicates the authority who published the protocol (e.g. ACIP).
            targetDisease:
              $ref: "#/components/schemas/CodeableConcept"
              description: The vaccine preventable disease the dose is being evaluated
                against.
            immunizationEvent:
              $ref: "#/components/schemas/Reference"
              description: The vaccine administration event being evaluated.
            doseStatus:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates if the dose is valid or not valid with respect to the
                published recommendations.
            doseStatusReason:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Provides an explanation as to why the vaccine administration event
                  is valid or not relative to the published recommendations.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional information about the evaluation.
            series:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: One possible path to achieve presumed immunity against a disease
                &ndash; within the context of an authority.
            doseNumberPositiveInt:
              type: integer
              format: int32
              description: Nominal position in a series.
            doseNumberString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Nominal position in a series.
            seriesDosesPositiveInt:
              type: integer
              format: int32
              description: The recommended number of doses to achieve immunity.
            seriesDosesString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The recommended number of doses to achieve immunity.
          required:
            - status
            - patient
            - targetDisease
            - immunizationEvent
            - doseStatus
      example:
        resourceType: ImmunizationEvaluation
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        targetDisease:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        immunizationEvent:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        doseStatus:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    ImmunizationRecommendation:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this particular recommendation
                  record.
            patient:
              $ref: "#/components/schemas/Reference"
              description: The patient the recommendation(s) are for.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date the immunization recommendation(s) were created.
            authority:
              $ref: "#/components/schemas/Reference"
              description: Indicates the authority who published the protocol (e.g. ACIP).
            recommendation:
              type: array
              items:
                $ref: "#/components/schemas/ImmunizationRecommendation_Recommendation"
                description: Vaccine administration recommendations.
              minItems: 1
          required:
            - patient
            - date
            - recommendation
      example:
        resourceType: ImmunizationRecommendation
        meta:
          tag:
            - code: ibm/minimal
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _date:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        recommendation:
          - forecastStatus:
              coding:
                - extension:
                    - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                      valueCode: unknown
    ImmunizationRecommendation_Recommendation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            vaccineCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Vaccine(s) or vaccine group that pertain to the recommendation.
            targetDisease:
              $ref: "#/components/schemas/CodeableConcept"
              description: The targeted disease for the recommendation.
            contraindicatedVaccineCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Vaccine(s) which should not be used to fulfill the recommendation.
            forecastStatus:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the patient status with respect to the path to immunity
                for the target disease.
            forecastReason:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The reason for the assigned forecast status.
            dateCriterion:
              type: array
              items:
                $ref: "#/components/schemas/ImmunizationRecommendation_Recommendation_DateCrite\
                  rion"
                description: Vaccine date recommendations.  For example, earliest date to
                  administer, latest date to administer, etc.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Contains the description about the protocol under which the vaccine
                was administered.
            series:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: One possible path to achieve presumed immunity against a disease
                &ndash; within the context of an authority.
            doseNumberPositiveInt:
              type: integer
              format: int32
              description: Nominal position of the recommended dose in a series (e.g. dose 2
                is the next recommended dose).
            doseNumberString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Nominal position of the recommended dose in a series (e.g. dose 2
                is the next recommended dose).
            seriesDosesPositiveInt:
              type: integer
              format: int32
              description: The recommended number of doses to achieve immunity.
            seriesDosesString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The recommended number of doses to achieve immunity.
            supportingImmunization:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Immunization event history and/or evaluation that supports the
                  status and recommendation.
            supportingPatientInformation:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Patient Information that supports the status and
                  recommendation.  This includes patient observations, adverse
                  reactions and allergy/intolerance information.
          required:
            - forecastStatus
    ImmunizationRecommendation_Recommendation_DateCriterion:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Date classification of recommendation.  For example, earliest date
                to give, latest date to give, etc.
            value:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date whose meaning is specified by dateCriterion.code.
          required:
            - code
            - value
    ImplementationGuide:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this implementation guide
                when it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this implementation guide is
                (or will be) published. This URL can be the target of a
                canonical reference. It SHALL remain the same when the
                implementation guide is stored on different servers.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                implementation guide when it is referenced in a specification,
                model, design or instance. This is an arbitrary value managed by
                the implementation guide author and is not expected to be
                globally unique. For example, it might be a timestamp (e.g.
                yyyymmdd) if a managed version is not available. There is also
                no expectation that versions can be placed in a lexicographical
                sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the implementation guide. This
                name should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the
                implementation guide.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this implementation guide. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this implementation guide is
                authored for testing purposes (or
                education/evaluation/marketing) and is not intended to be used
                for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the implementation guide was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                implementation guide changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                implementation guide.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the implementation
                guide from a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate
                  implementation guide instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the implementation guide is
                  intended to be used.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the implementation guide and/or
                its contents. Copyright statements are generally legal
                restrictions on the use and publishing of the implementation
                guide.
            packageId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The NPM package name for this Implementation Guide, used in the NPM
                package distribution, which is the primary mechanism by which
                FHIR based tooling manages IG dependencies. This value must be
                globally unique, and should be assigned with care.
            license:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The license that applies to this Implementation Guide, using an
                SPDX license code, or 'not&ndash;open&ndash;source'.
            fhirVersion:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: The version(s) of the FHIR specification that this
                  ImplementationGuide targets &ndash; e.g. describes how to use.
                  The value of this element is the formal version of the
                  specification, without the revision number, e.g.
                  [publication].[major].[minor], which is 4.3.0&ndash;cibuild.
                  for this version.
              minItems: 1
            dependsOn:
              type: array
              items:
                $ref: "#/components/schemas/ImplementationGuide_DependsOn"
                description: Another implementation guide that this implementation depends on.
                  Typically, an implementation guide uses value sets, profiles
                  etc.defined in other implementation guides.
            global:
              type: array
              items:
                $ref: "#/components/schemas/ImplementationGuide_Global"
                description: A set of profiles that all resources covered by this implementation
                  guide must conform to.
            definition:
              $ref: "#/components/schemas/ImplementationGuide_Definition"
              description: The information needed by an IG publisher tool to publish the whole
                implementation guide.
            manifest:
              $ref: "#/components/schemas/ImplementationGuide_Manifest"
              description: Information about an assembled implementation guide, created by the
                publication tooling.
          required:
            - url
            - name
            - status
            - packageId
            - fhirVersion
      example:
        resourceType: ImplementationGuide
        meta:
          tag:
            - code: ibm/minimal
        _url:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _name:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _packageId:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        fhirVersion:
          - null
        _fhirVersion:
          - extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
    ImplementationGuide_Definition:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            grouping:
              type: array
              items:
                $ref: "#/components/schemas/ImplementationGuide_Definition_Grouping"
                description: A logical group of resources. Logical groups can be used when
                  building pages.
            resource:
              type: array
              items:
                $ref: "#/components/schemas/ImplementationGuide_Definition_Resource"
                description: A resource that is part of the implementation guide. Conformance
                  resources (value set, structure definition, capability
                  statements etc.) are obvious candidates for inclusion, but any
                  kind of resource can be included as an example resource.
              minItems: 1
            page:
              $ref: "#/components/schemas/ImplementationGuide_Definition_Page"
              description: A page / section in the implementation guide. The root page is the
                implementation guide home page.
            parameter:
              type: array
              items:
                $ref: "#/components/schemas/ImplementationGuide_Definition_Parameter"
                description: Defines how IG is built by tools.
            template:
              type: array
              items:
                $ref: "#/components/schemas/ImplementationGuide_Definition_Template"
                description: A template for building resources.
          required:
            - resource
    ImplementationGuide_Definition_Grouping:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The human&ndash;readable title to display for the package of
                resources when rendering the implementation guide.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Human readable text describing the package.
          required:
            - name
    ImplementationGuide_Definition_Page:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            nameUrl:
              type: string
              pattern: \\S*
              description: The source address for the page.
            nameReference:
              $ref: "#/components/schemas/Reference"
              description: The source address for the page.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short title used to represent this page in navigational
                structures such as table of contents, bread crumbs, etc.
            generation:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code that indicates how the page is generated.
            page:
              type: array
              items:
                $ref: "#/components/schemas/ImplementationGuide_Definition_Page"
                description: Nested Pages/Sections under this page.
          required:
            - title
            - generation
    ImplementationGuide_Definition_Parameter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: apply | path&ndash;resource | path&ndash;pages |
                path&ndash;tx&ndash;cache | expansion&ndash;parameter |
                rule&ndash;broken&ndash;links | generate&ndash;xml |
                generate&ndash;json | generate&ndash;turtle |
                html&ndash;template.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Value for named type.
          required:
            - code
            - value
    ImplementationGuide_Definition_Resource:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            reference:
              $ref: "#/components/schemas/Reference"
              description: Where this resource is found.
            fhirVersion:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Indicates the FHIR Version(s) this artifact is intended to apply
                  to. If no versions are specified, the resource is assumed to
                  apply to all the versions stated in
                  ImplementationGuide.fhirVersion.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A human assigned name for the resource. All resources SHOULD have a
                name, but the name may be extracted from the resource (e.g.
                ValueSet.name).
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of the reason that a resource has been included in
                the implementation guide.
            exampleBoolean:
              type: boolean
              description: If true or a reference, indicates the resource is an example
                instance.  If a reference is present, indicates that the example
                is an example of the specified profile.
            exampleCanonical:
              type: string
              pattern: \\S*
              description: If true or a reference, indicates the resource is an example
                instance.  If a reference is present, indicates that the example
                is an example of the specified profile.
            groupingId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Reference to the id of the grouping this resource appears in.
          required:
            - reference
    ImplementationGuide_Definition_Template:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Type of template specified.
            source:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The source location for the template.
            scope:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The scope in which the template applies.
          required:
            - code
            - source
    ImplementationGuide_DependsOn:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            uri:
              type: string
              pattern: \\S*
              description: A canonical reference to the Implementation guide for the
                dependency.
            packageId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The NPM package name for the Implementation Guide that this IG
                depends on.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The version of the IG that is depended on, when the correct version
                is required to understand the IG correctly.
          required:
            - uri
    ImplementationGuide_Global:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of resource that all instances must conform to.
            profile:
              type: string
              pattern: \\S*
              description: A reference to the profile that all instances must conform to.
          required:
            - type
            - profile
    ImplementationGuide_Manifest:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            rendering:
              type: string
              pattern: \\S*
              description: A pointer to official web page, PDF or other rendering of the
                implementation guide.
            resource:
              type: array
              items:
                $ref: "#/components/schemas/ImplementationGuide_Manifest_Resource"
                description: A resource that is part of the implementation guide. Conformance
                  resources (value set, structure definition, capability
                  statements etc.) are obvious candidates for inclusion, but any
                  kind of resource can be included as an example resource.
              minItems: 1
            page:
              type: array
              items:
                $ref: "#/components/schemas/ImplementationGuide_Manifest_Page"
                description: Information about a page within the IG.
            image:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Indicates a relative path to an image that exists within the IG.
            other:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Indicates the relative path of an additional non&ndash;page,
                  non&ndash;image file that is part of the IG &ndash; e.g. zip,
                  jar and similar files that could be the target of a hyperlink
                  in a derived IG.
          required:
            - resource
    ImplementationGuide_Manifest_Page:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Relative path to the page.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short title used to represent this page in navigational
                structures such as table of contents, bread crumbs, etc.
            anchor:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: The name of an anchor available on the page.
          required:
            - name
    ImplementationGuide_Manifest_Resource:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            reference:
              $ref: "#/components/schemas/Reference"
              description: Where this resource is found.
            exampleBoolean:
              type: boolean
              description: If true or a reference, indicates the resource is an example
                instance.  If a reference is present, indicates that the example
                is an example of the specified profile.
            exampleCanonical:
              type: string
              pattern: \\S*
              description: If true or a reference, indicates the resource is an example
                instance.  If a reference is present, indicates that the example
                is an example of the specified profile.
            relativePath:
              type: string
              pattern: \\S*
              description: The relative path for primary page for this resource within the IG.
          required:
            - reference
    Ingredient:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: The identifier(s) of this Ingredient that are assigned by business
                processes and/or used to refer to it when a direct URL reference
                to the resource itself is not appropriate.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this ingredient. Enables tracking the
                life&ndash;cycle of the content.
            for:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The product which this ingredient is a constituent part of.
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: A classification of the ingredient identifying its purpose within
                the product, e.g. active, inactive.
            function:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: "A classification of the ingredient identifying its precise
                  purpose(s) in the drug product. This extends the
                  Ingredient.role to add more detail. Example: antioxidant,
                  alkalizing agent."
            allergenicIndicator:
              type: boolean
              description: If the ingredient is a known or suspected allergen. Note that this
                is a property of the substance, so if a reference to a
                SubstanceDefinition is used to decribe that (rather than just a
                code), the allergen information should go there, not here.
            manufacturer:
              type: array
              items:
                $ref: "#/components/schemas/Ingredient_Manufacturer"
                description: "The organization(s) that manufacture this ingredient. Can be used
                  to indicate:         1) Organizations we are aware of that
                  manufacture this ingredient         2) Specific
                  Manufacturer(s) currently being used         3) Set of
                  organisations allowed to manufacture this ingredient for this
                  product         Users must be clear on the application of
                  context relevant to their use case."
            substance:
              $ref: "#/components/schemas/Ingredient_Substance"
              description: The substance that comprises this ingredient.
          required:
            - status
            - role
            - substance
      example:
        resourceType: Ingredient
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        role:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        substance:
          code:
            extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
    Ingredient_Manufacturer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            role:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The way in which this manufacturer is associated with the
                ingredient. For example whether it is a possible one (others
                allowed), or an exclusive authorized one for this ingredient.
                Note that this is not the manufacturing process role.
            manufacturer:
              $ref: "#/components/schemas/Reference"
              description: An organization that manufactures this ingredient.
          required:
            - manufacturer
    Ingredient_Substance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableReference"
              description: A code or full resource that represents the ingredient's substance.
            strength:
              type: array
              items:
                $ref: "#/components/schemas/Ingredient_Substance_Strength"
                description: The quantity of substance in the unit of presentation, or in the
                  volume (or mass) of the single pharmaceutical product or
                  manufactured item. The allowed repetitions do not represent
                  different strengths, but are different representations &ndash;
                  mathematically equivalent &ndash; of a single strength.
          required:
            - code
    Ingredient_Substance_Strength:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            presentationRatio:
              $ref: "#/components/schemas/Ratio"
              description: The quantity of substance in the unit of presentation, or in the
                volume (or mass) of the single pharmaceutical product or
                manufactured item. Unit of presentation refers to the quantity
                that the item occurs in e.g. a strength per tablet size, perhaps
                'per 20mg' (the size of the tablet). It is not generally
                normalized as a unitary unit, which would be 'per mg').
            presentationRatioRange:
              $ref: "#/components/schemas/RatioRange"
              description: The quantity of substance in the unit of presentation, or in the
                volume (or mass) of the single pharmaceutical product or
                manufactured item. Unit of presentation refers to the quantity
                that the item occurs in e.g. a strength per tablet size, perhaps
                'per 20mg' (the size of the tablet). It is not generally
                normalized as a unitary unit, which would be 'per mg').
            textPresentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A textual represention of either the whole of the presentation
                strength or a part of it &ndash; with the rest being in
                Strength.presentation as a ratio.
            concentrationRatio:
              $ref: "#/components/schemas/Ratio"
              description: The strength per unitary volume (or mass).
            concentrationRatioRange:
              $ref: "#/components/schemas/RatioRange"
              description: The strength per unitary volume (or mass).
            textConcentration:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A textual represention of either the whole of the concentration
                strength or a part of it &ndash; with the rest being in
                Strength.concentration as a ratio.
            measurementPoint:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: For when strength is measured at a particular point or distance.
                There are products where strength is measured at a particular
                point. For example, the strength of the ingredient in some
                inhalers is measured at a particular position relative to the
                point of aerosolization.
            country:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The country or countries for which the strength range applies.
            referenceStrength:
              type: array
              items:
                $ref: "#/components/schemas/Ingredient_Substance_Strength_ReferenceStrength"
                description: Strength expressed in terms of a reference substance. For when the
                  ingredient strength is additionally expressed as equivalent to
                  the strength of some other closely related substance (e.g.
                  salt vs. base). Reference strength represents the strength
                  (quantitative composition) of the active moiety of the active
                  substance. There are situations when the active substance and
                  active moiety are different, therefore both a strength and a
                  reference strength are needed.
    Ingredient_Substance_Strength_ReferenceStrength:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            substance:
              $ref: "#/components/schemas/CodeableReference"
              description: Relevant reference substance.
            strengthRatio:
              $ref: "#/components/schemas/Ratio"
              description: Strength expressed in terms of a reference substance.
            strengthRatioRange:
              $ref: "#/components/schemas/RatioRange"
              description: Strength expressed in terms of a reference substance.
            measurementPoint:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: For when strength is measured at a particular point or distance.
            country:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The country or countries for which the strength range applies.
    InsurancePlan:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this health insurance product
                  which remain constant as the resource is updated and
                  propagates from server to server.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of the health insurance product.
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The kind of health insurance product.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Official name of the health insurance product as designated by the
                owner.
            alias:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: A list of alternate names that the product is known as, or was
                  known as in the past.
            period:
              $ref: "#/components/schemas/Period"
              description: The period of time that the health insurance product is available.
            ownedBy:
              $ref: "#/components/schemas/Reference"
              description: The entity that is providing  the health insurance product and
                underwriting the risk.  This is typically an insurance carriers,
                other third&ndash;party payers, or health plan sponsors comonly
                referred to as 'payers'.
            administeredBy:
              $ref: "#/components/schemas/Reference"
              description: An organization which administer other services such as
                underwriting, customer service and/or claims processing on
                behalf of the health insurance product owner.
            coverageArea:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The geographic region in which a health insurance product's
                  benefits apply.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/InsurancePlan_Contact"
                description: The contact for the health insurance product for a certain purpose.
            endpoint:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The technical endpoints providing access to services operated for
                  the health insurance product.
            network:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Reference to the network included in the health insurance product.
            coverage:
              type: array
              items:
                $ref: "#/components/schemas/InsurancePlan_Coverage"
                description: Details about the coverage offered by the insurance product.
            plan:
              type: array
              items:
                $ref: "#/components/schemas/InsurancePlan_Plan"
                description: Details about an insurance plan.
      example:
        resourceType: InsurancePlan
        meta:
          tag:
            - code: ibm/minimal
    InsurancePlan_Contact:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            purpose:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates a purpose for which the contact can be reached.
            name:
              $ref: "#/components/schemas/HumanName"
              description: A name associated with the contact.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: A contact detail (e.g. a telephone number or an email address) by
                  which the party may be contacted.
            address:
              $ref: "#/components/schemas/Address"
              description: Visiting or postal addresses for the contact.
    InsurancePlan_Coverage:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of coverage  (Medical; Dental; Mental Health; Substance Abuse;
                Vision; Drug; Short Term; Long Term Care; Hospice; Home Health).
            network:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Reference to the network that providing the type of coverage.
            benefit:
              type: array
              items:
                $ref: "#/components/schemas/InsurancePlan_Coverage_Benefit"
                description: Specific benefits under this type of coverage.
              minItems: 1
          required:
            - type
            - benefit
    InsurancePlan_Coverage_Benefit:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of benefit (primary care; speciality care; inpatient;
                outpatient).
            requirement:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The referral requirements to have access/coverage for this benefit.
            limit:
              type: array
              items:
                $ref: "#/components/schemas/InsurancePlan_Coverage_Benefit_Limit"
                description: The specific limits on the benefit.
          required:
            - type
    InsurancePlan_Coverage_Benefit_Limit:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            value:
              $ref: "#/components/schemas/Quantity"
              description: The maximum amount of a service item a plan will pay for a covered
                benefit.  For examples. wellness visits, or eyeglasses.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The specific limit on the benefit.
    InsurancePlan_Plan:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this health insurance plan which
                  remain constant as the resource is updated and propagates from
                  server to server.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of plan. For example, "Platinum" or "High Deductable".
            coverageArea:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The geographic region in which a health insurance plan's benefits
                  apply.
            network:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Reference to the network that providing the type of coverage.
            generalCost:
              type: array
              items:
                $ref: "#/components/schemas/InsurancePlan_Plan_GeneralCost"
                description: Overall costs associated with the plan.
            specificCost:
              type: array
              items:
                $ref: "#/components/schemas/InsurancePlan_Plan_SpecificCost"
                description: Costs associated with the coverage provided by the product.
    InsurancePlan_Plan_GeneralCost:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of cost.
            groupSize:
              type: integer
              format: int32
              description: Number of participants enrolled in the plan.
            cost:
              $ref: "#/components/schemas/Money"
              description: Value of the cost.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional information about the general costs associated with this
                plan.
    InsurancePlan_Plan_SpecificCost:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: General category of benefit (Medical; Dental; Vision; Drug; Mental
                Health; Substance Abuse; Hospice, Home Health).
            benefit:
              type: array
              items:
                $ref: "#/components/schemas/InsurancePlan_Plan_SpecificCost_Benefit"
                description: List of the specific benefits under this category of benefit.
          required:
            - category
    InsurancePlan_Plan_SpecificCost_Benefit:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of benefit (primary care; speciality care; inpatient;
                outpatient).
            cost:
              type: array
              items:
                $ref: "#/components/schemas/InsurancePlan_Plan_SpecificCost_Benefit_Cost"
                description: List of the costs associated with a specific benefit.
          required:
            - type
    InsurancePlan_Plan_SpecificCost_Benefit_Cost:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of cost (copay; individual cap; family cap; coinsurance;
                deductible).
            applicability:
              $ref: "#/components/schemas/CodeableConcept"
              description: Whether the cost applies to in&ndash;network or
                out&ndash;of&ndash;network providers (in&ndash;network;
                out&ndash;of&ndash;network; other).
            qualifiers:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Additional information about the cost, such as information about
                  funding sources (e.g. HSA, HRA, FSA, RRA).
            value:
              $ref: "#/components/schemas/Quantity"
              description: The actual cost value. (some of the costs may be represented as
                percentages rather than currency, e.g. 10% coinsurance).
          required:
            - type
    Library:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this library when it is
                referenced in a specification, model, design or an instance;
                also called its canonical identifier. This SHOULD be globally
                unique and SHOULD be a literal address at which at which an
                authoritative instance of this library is (or will be)
                published. This URL can be the target of a canonical reference.
                It SHALL remain the same when the library is stored on different
                servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this library when it
                  is represented in other formats, or referenced in a
                  specification, model, design or an instance. e.g. CMS or NQF
                  identifiers for a measure artifact. Note that at least one
                  identifier is required for non&ndash;experimental active
                  artifacts.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the library
                when it is referenced in a specification, model, design or
                instance. This is an arbitrary value managed by the library
                author and is not expected to be globally unique. For example,
                it might be a timestamp (e.g. yyyymmdd) if a managed version is
                not available. There is also no expectation that versions can be
                placed in a lexicographical sequence. To provide a version
                consistent with the Decision Support Service specification, use
                the format Major.Minor.Revision (e.g. 1.0.0). For more
                information on versioning knowledge assets, refer to the
                Decision Support Service specification. Note that a version is
                required for non&ndash;experimental active artifacts.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the library. This name should
                be usable as an identifier for the module by machine processing
                applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the library.
            subtitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An explanatory or alternate title for the library giving additional
                information about its content.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this library. Enables tracking the life&ndash;cycle
                of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this library is authored for
                testing purposes (or education/evaluation/marketing) and is not
                intended to be used for genuine usage.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the type of library such as a Logic Library, Model
                Definition, Asset Collection, or Module Definition.
            subjectCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code or group definition that describes the intended subject of
                the contents of the library.
            subjectReference:
              $ref: "#/components/schemas/Reference"
              description: A code or group definition that describes the intended subject of
                the contents of the library.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the library was published. The
                date must change when the business version changes and it must
                change if the status code changes. In addition, it should change
                when the substantive content of the library changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                library.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the library from a
                consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate library
                  instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the library is intended to be
                  used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this library is needed and why it has been
                designed as it has.
            usage:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A detailed description of how the library is used from a clinical
                perspective.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the library and/or its contents.
                Copyright statements are generally legal restrictions on the use
                and publishing of the library.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was approved by the
                publisher. Approval happens once when the content is officially
                approved for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was last reviewed. Review
                happens periodically after approval but does not change the
                original approval date.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the library content was or is planned to be
                in active use.
            topic:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Descriptive topics related to the content of the library. Topics
                  provide a high&ndash;level categorization of the library that
                  can be useful for filtering and searching.
            author:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual or organization primarily involved in the creation
                  and maintenance of the content.
            editor:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for internal
                  coherence of the content.
            reviewer:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for review of
                  some aspect of the content.
            endorser:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization responsible for officially endorsing
                  the content for use in some setting.
            relatedArtifact:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Related artifacts such as additional documentation, justification,
                  or bibliographic references.
            parameter:
              type: array
              items:
                $ref: "#/components/schemas/ParameterDefinition"
                description: The parameter element defines parameters used by the library.
            dataRequirement:
              type: array
              items:
                $ref: "#/components/schemas/DataRequirement"
                description: Describes a set of data that must be provided in order to be able
                  to successfully perform the computations defined by the
                  library.
            content:
              type: array
              items:
                $ref: "#/components/schemas/Attachment"
                description: The content of the library as an Attachment. The content may be a
                  reference to a url, or may be directly embedded as a
                  base&ndash;64 string. Either way, the contentType of the
                  attachment determines how to interpret the content.
          required:
            - status
            - type
      example:
        resourceType: Library
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        type:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    Linkage:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            active:
              type: boolean
              description: Indicates whether the asserted set of linkages are considered to be
                "in effect".
            author:
              $ref: "#/components/schemas/Reference"
              description: Identifies the user or organization responsible for asserting the
                linkages as well as the user or organization who establishes the
                context in which the nature of each linkage is evaluated.
            item:
              type: array
              items:
                $ref: "#/components/schemas/Linkage_Item"
                description: Identifies which record considered as the reference to the same
                  real&ndash;world occurrence as well as how the items should be
                  evaluated within the collection of linked items.
              minItems: 1
          required:
            - item
      example:
        resourceType: Linkage
        meta:
          tag:
            - code: ibm/minimal
        item:
          - _type:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
            resource:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    Linkage_Item:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Distinguishes which item is "source of truth" (if any) and which
                items are no longer considered to be current representations.
            resource:
              $ref: "#/components/schemas/Reference"
              description: The resource instance being linked as part of the group.
          required:
            - type
            - resource
    Location:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Unique code or number identifying the location to its users.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status property covers the general availability of the
                resource, not the current value which may be covered by the
                operationStatus, or by a schedule/slots if they are configured
                for the location.
            operationalStatus:
              $ref: "#/components/schemas/Coding"
              description: The operational status covers operation values most relevant to
                beds (but can also apply to rooms/units/chairs/etc. such as an
                isolation unit/dialysis chair). This typically covers concepts
                such as contamination, housekeeping, and other activities like
                maintenance.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Name of the location as used by humans. Does not need to be unique.
            alias:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: A list of alternate names that the location is known as, or was
                  known as, in the past.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of the Location, which helps in finding or referencing
                the place.
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates whether a resource instance represents a specific
                location or a class of locations.
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Indicates the type of function performed at the location.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: The contact details of communication devices available at the
                  location. This can include phone numbers, fax numbers, mobile
                  numbers, email addresses and web sites.
            address:
              $ref: "#/components/schemas/Address"
              description: Physical location.
            physicalType:
              $ref: "#/components/schemas/CodeableConcept"
              description: Physical form of the location, e.g. building, room, vehicle, road.
            position:
              $ref: "#/components/schemas/Location_Position"
              description: The absolute geographic location of the Location, expressed using
                the WGS84 datum (This is the same co&ndash;ordinate system used
                in KML).
            managingOrganization:
              $ref: "#/components/schemas/Reference"
              description: The organization responsible for the provisioning and upkeep of the
                location.
            partOf:
              $ref: "#/components/schemas/Reference"
              description: Another Location of which this Location is physically a part of.
            hoursOfOperation:
              type: array
              items:
                $ref: "#/components/schemas/Location_HoursOfOperation"
                description: What days/times during a week is this location usually open.
            availabilityExceptions:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of when the locations opening ours are different to
                normal, e.g. public holiday availability. Succinctly describing
                all possible exceptions to normal site availability as detailed
                in the opening hours Times.
            endpoint:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Technical endpoints providing access to services operated for the
                  location.
      example:
        resourceType: Location
        meta:
          tag:
            - code: ibm/minimal
    Location_HoursOfOperation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            daysOfWeek:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Indicates which days of the week are available between the start
                  and end Times.
            allDay:
              type: boolean
              description: The Location is open all day.
            openingTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: Time that the Location opens.
            closingTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: Time that the Location closes.
    Location_Position:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            longitude:
              type: number
              description: Longitude. The value domain and the interpretation are the same as
                for the text of the longitude element in KML (see notes below).
            latitude:
              type: number
              description: Latitude. The value domain and the interpretation are the same as
                for the text of the latitude element in KML (see notes below).
            altitude:
              type: number
              description: Altitude. The value domain and the interpretation are the same as
                for the text of the altitude element in KML (see notes below).
          required:
            - longitude
            - latitude
    ManufacturedItemDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Unique identifier.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this item. Enables tracking the life&ndash;cycle of
                the content.
            manufacturedDoseForm:
              $ref: "#/components/schemas/CodeableConcept"
              description: Dose form as manufactured and before any transformation into the
                pharmaceutical product.
            unitOfPresentation:
              $ref: "#/components/schemas/CodeableConcept"
              description: The &ldquo;real world&rdquo; units in which the quantity of the
                manufactured item is described.
            manufacturer:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Manufacturer of the item (Note that this should be named
                  "manufacturer" but it currently causes technical issues).
            ingredient:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The ingredients of this manufactured item. This is only needed if
                  the ingredients are not specified by incoming references from
                  the Ingredient resource.
            property:
              type: array
              items:
                $ref: "#/components/schemas/ManufacturedItemDefinition_Property"
                description: General characteristics of this item.
          required:
            - status
            - manufacturedDoseForm
      example:
        resourceType: ManufacturedItemDefinition
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        manufacturedDoseForm:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    ManufacturedItemDefinition_Property:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code expressing the type of characteristic.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A value for the characteristic.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: A value for the characteristic.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: A value for the characteristic.
            valueBoolean:
              type: boolean
              description: A value for the characteristic.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: A value for the characteristic.
          required:
            - type
    Measure:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this measure when it is
                referenced in a specification, model, design or an instance;
                also called its canonical identifier. This SHOULD be globally
                unique and SHOULD be a literal address at which at which an
                authoritative instance of this measure is (or will be)
                published. This URL can be the target of a canonical reference.
                It SHALL remain the same when the measure is stored on different
                servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this measure when it
                  is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the measure
                when it is referenced in a specification, model, design or
                instance. This is an arbitrary value managed by the measure
                author and is not expected to be globally unique. For example,
                it might be a timestamp (e.g. yyyymmdd) if a managed version is
                not available. There is also no expectation that versions can be
                placed in a lexicographical sequence. To provide a version
                consistent with the Decision Support Service specification, use
                the format Major.Minor.Revision (e.g. 1.0.0). For more
                information on versioning knowledge assets, refer to the
                Decision Support Service specification. Note that a version is
                required for non&ndash;experimental active artifacts.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the measure. This name should
                be usable as an identifier for the module by machine processing
                applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the measure.
            subtitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An explanatory or alternate title for the measure giving additional
                information about its content.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this measure. Enables tracking the life&ndash;cycle
                of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this measure is authored for
                testing purposes (or education/evaluation/marketing) and is not
                intended to be used for genuine usage.
            subjectCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The intended subjects for the measure. If this element is not
                provided, a Patient subject is assumed, but the subject of the
                measure can be anything.
            subjectReference:
              $ref: "#/components/schemas/Reference"
              description: The intended subjects for the measure. If this element is not
                provided, a Patient subject is assumed, but the subject of the
                measure can be anything.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the measure was published. The
                date must change when the business version changes and it must
                change if the status code changes. In addition, it should change
                when the substantive content of the measure changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                measure.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the measure from a
                consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate measure
                  instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the measure is intended to be
                  used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this measure is needed and why it has been
                designed as it has.
            usage:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A detailed description, from a clinical perspective, of how the
                measure is used.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the measure and/or its contents.
                Copyright statements are generally legal restrictions on the use
                and publishing of the measure.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was approved by the
                publisher. Approval happens once when the content is officially
                approved for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was last reviewed. Review
                happens periodically after approval but does not change the
                original approval date.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the measure content was or is planned to be
                in active use.
            topic:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Descriptive topics related to the content of the measure. Topics
                  provide a high&ndash;level categorization grouping types of
                  measures that can be useful for filtering and searching.
            author:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual or organization primarily involved in the creation
                  and maintenance of the content.
            editor:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for internal
                  coherence of the content.
            reviewer:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for review of
                  some aspect of the content.
            endorser:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization responsible for officially endorsing
                  the content for use in some setting.
            relatedArtifact:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Related artifacts such as additional documentation, justification,
                  or bibliographic references.
            library:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A reference to a Library resource containing the formal logic used
                  by the measure.
            disclaimer:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Notices and disclaimers regarding the use of the measure or related
                to intellectual property (such as code systems) referenced by
                the measure.
            scoring:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates how the calculation is performed for the measure,
                including proportion, ratio, continuous&ndash;variable, and
                cohort. The value set is extensible, allowing additional measure
                scoring types to be represented.
            compositeScoring:
              $ref: "#/components/schemas/CodeableConcept"
              description: If this is a composite measure, the scoring method used to combine
                the component measures to determine the composite score.
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Indicates whether the measure is used to examine a process, an
                  outcome over time, a patient&ndash;reported outcome, or a
                  structure measure such as utilization.
            riskAdjustment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of the risk adjustment factors that may impact the
                resulting score for the measure and how they may be accounted
                for when computing and reporting measure results.
            rateAggregation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Describes how to combine the information calculated, based on logic
                in each of several populations, into one summarized result.
            rationale:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: "Provides a succinct statement of the need for the measure. Usually
                includes statements pertaining to importance criterion: impact,
                gap in care, and evidence."
            clinicalRecommendationStatement:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Provides a summary of relevant clinical guidelines or other
                clinical recommendations supporting the measure.
            improvementNotation:
              $ref: "#/components/schemas/CodeableConcept"
              description: Information on whether an increase or decrease in score is the
                preferred result (e.g., a higher score indicates better quality
                OR a lower score indicates better quality OR quality is within a
                range).
            definition:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Provides a description of an individual term used within the
                  measure.
            guidance:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional guidance for the measure including how it can be used in
                a clinical context, and the intent of the measure.
            group:
              type: array
              items:
                $ref: "#/components/schemas/Measure_Group"
                description: A group of population criteria for the measure.
            supplementalData:
              type: array
              items:
                $ref: "#/components/schemas/Measure_SupplementalData"
                description: The supplemental data criteria for the measure report, specified as
                  either the name of a valid CQL expression within a referenced
                  library, or a valid FHIR Resource Path.
          required:
            - status
      example:
        resourceType: Measure
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Measure_Group:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates a meaning for the group. This can be as simple as a
                unique identifier, or it can establish meaning in a broader
                context by drawing from a terminology, allowing groups to be
                correlated across measures.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The human readable description of this population group.
            population:
              type: array
              items:
                $ref: "#/components/schemas/Measure_Group_Population"
                description: A population criteria for the measure.
            stratifier:
              type: array
              items:
                $ref: "#/components/schemas/Measure_Group_Stratifier"
                description: The stratifier criteria for the measure report, specified as either
                  the name of a valid CQL expression defined within a referenced
                  library or a valid FHIR Resource Path.
    Measure_Group_Population:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of population criteria.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The human readable description of this population criteria.
            criteria:
              $ref: "#/components/schemas/Expression"
              description: An expression that specifies the criteria for the population,
                typically the name of an expression in a library.
          required:
            - criteria
    Measure_Group_Stratifier:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates a meaning for the stratifier. This can be as simple as a
                unique identifier, or it can establish meaning in a broader
                context by drawing from a terminology, allowing stratifiers to
                be correlated across measures.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The human readable description of this stratifier criteria.
            criteria:
              $ref: "#/components/schemas/Expression"
              description: An expression that specifies the criteria for the stratifier. This
                is typically the name of an expression defined within a
                referenced library, but it may also be a path to a stratifier
                element.
            component:
              type: array
              items:
                $ref: "#/components/schemas/Measure_Group_Stratifier_Component"
                description: A component of the stratifier criteria for the measure report,
                  specified as either the name of a valid CQL expression defined
                  within a referenced library or a valid FHIR Resource Path.
    Measure_Group_Stratifier_Component:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates a meaning for the stratifier component. This can be as
                simple as a unique identifier, or it can establish meaning in a
                broader context by drawing from a terminology, allowing
                stratifiers to be correlated across measures.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The human readable description of this stratifier criteria
                component.
            criteria:
              $ref: "#/components/schemas/Expression"
              description: An expression that specifies the criteria for this component of the
                stratifier. This is typically the name of an expression defined
                within a referenced library, but it may also be a path to a
                stratifier element.
          required:
            - criteria
    Measure_SupplementalData:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates a meaning for the supplemental data. This can be as
                simple as a unique identifier, or it can establish meaning in a
                broader context by drawing from a terminology, allowing
                supplemental data to be correlated across measures.
            usage:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: An indicator of the intended usage for the supplemental data
                  element. Supplemental data indicates the data is additional
                  information requested to augment the measure information. Risk
                  adjustment factor indicates the data is additional information
                  used to calculate risk adjustment factors when applying a risk
                  model to the measure calculation.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The human readable description of this supplemental data.
            criteria:
              $ref: "#/components/schemas/Expression"
              description: The criteria for the supplemental data. This is typically the name
                of a valid expression defined within a referenced library, but
                it may also be a path to a specific data element. The criteria
                defines the data to be returned for this element.
          required:
            - criteria
    MeasureReport:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this MeasureReport
                  when it is represented in other formats or referenced in a
                  specification, model, design or an instance.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The MeasureReport status. No data will be available until the
                MeasureReport status is complete.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of measure report. This may be an individual report, which
                provides the score for the measure for an individual member of
                the population; a subject&ndash;listing, which returns the list
                of members that meet the various criteria in the measure; a
                summary report, which returns a population count for each of the
                criteria in the measure; or a data&ndash;collection, which
                enables the MeasureReport to be used to exchange the
                data&ndash;of&ndash;interest for a quality measure.
            measure:
              type: string
              pattern: \\S*
              description: A reference to the Measure that was calculated to produce this
                report.
            subject:
              $ref: "#/components/schemas/Reference"
              description: Optional subject identifying the individual or individuals the
                report is for.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date this measure report was generated.
            reporter:
              $ref: "#/components/schemas/Reference"
              description: The individual, location, or organization that is reporting the
                data.
            period:
              $ref: "#/components/schemas/Period"
              description: The reporting period for which the report was calculated.
            improvementNotation:
              $ref: "#/components/schemas/CodeableConcept"
              description: Whether improvement in the measure is noted by an increase or
                decrease in the measure score.
            group:
              type: array
              items:
                $ref: "#/components/schemas/MeasureReport_Group"
                description: The results of the calculation, one for each population group in
                  the measure.
            evaluatedResource:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A reference to a Bundle containing the Resources that were used in
                  the calculation of this measure.
          required:
            - status
            - type
            - measure
            - period
      example:
        resourceType: MeasureReport
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _type:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _measure:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        period:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    MeasureReport_Group:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The meaning of the population group as defined in the measure
                definition.
            population:
              type: array
              items:
                $ref: "#/components/schemas/MeasureReport_Group_Population"
                description: The populations that make up the population group, one for each
                  type of population appropriate for the measure.
            measureScore:
              $ref: "#/components/schemas/Quantity"
              description: The measure score for this population group, calculated as
                appropriate for the measure type and scoring method, and based
                on the contents of the populations defined in the group.
            stratifier:
              type: array
              items:
                $ref: "#/components/schemas/MeasureReport_Group_Stratifier"
                description: When a measure includes multiple stratifiers, there will be a
                  stratifier group for each stratifier defined by the measure.
    MeasureReport_Group_Population:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of the population.
            count:
              type: integer
              format: int32
              description: The number of members of the population.
            subjectResults:
              $ref: "#/components/schemas/Reference"
              description: This element refers to a List of subject level MeasureReport
                resources, one for each subject in this population.
    MeasureReport_Group_Stratifier:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The meaning of this stratifier, as defined in the measure
                  definition.
            stratum:
              type: array
              items:
                $ref: "#/components/schemas/MeasureReport_Group_Stratifier_Stratum"
                description: This element contains the results for a single stratum within the
                  stratifier. For example, when stratifying on administrative
                  gender, there will be four strata, one for each possible
                  gender value.
    MeasureReport_Group_Stratifier_Stratum:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            value:
              $ref: "#/components/schemas/CodeableConcept"
              description: The value for this stratum, expressed as a CodeableConcept. When
                defining stratifiers on complex values, the value must be
                rendered such that the value for each stratum within the
                stratifier is unique.
            component:
              type: array
              items:
                $ref: "#/components/schemas/MeasureReport_Group_Stratifier_Stratum_Component"
                description: A stratifier component value.
            population:
              type: array
              items:
                $ref: "#/components/schemas/MeasureReport_Group_Stratifier_Stratum_Population"
                description: The populations that make up the stratum, one for each type of
                  population appropriate to the measure.
            measureScore:
              $ref: "#/components/schemas/Quantity"
              description: The measure score for this stratum, calculated as appropriate for
                the measure type and scoring method, and based on only the
                members of this stratum.
    MeasureReport_Group_Stratifier_Stratum_Component:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The code for the stratum component value.
            value:
              $ref: "#/components/schemas/CodeableConcept"
              description: The stratum component value.
          required:
            - code
            - value
    MeasureReport_Group_Stratifier_Stratum_Population:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of the population.
            count:
              type: integer
              format: int32
              description: The number of members of the population.
            subjectResults:
              $ref: "#/components/schemas/Reference"
              description: This element refers to a List of subject level MeasureReport
                resources, one for each subject in this population.
    Medication:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifier for this medication.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: "A code (or set of codes) that specify this medication, or a
                textual description if no code is available. Usage note: This
                could be a standard medication code such as a code from RxNorm,
                SNOMED CT, IDMP etc. It could also be a national or local
                formulary code, optionally with translations to other code
                systems."
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code to indicate if the medication is in active use.
            manufacturer:
              $ref: "#/components/schemas/Reference"
              description: Describes the details of the manufacturer of the medication
                product.  This is not intended to represent the distributor of a
                medication product.
            form:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes the form of the item.  Powder; tablets; capsule.
            amount:
              $ref: "#/components/schemas/Ratio"
              description: Specific amount of the drug in the packaged product.  For example,
                when specifying a product that has the same strength (For
                example, Insulin glargine 100 unit per mL solution for
                injection), this attribute provides additional clarification of
                the package amount (For example, 3 mL, 10mL, etc.).
            ingredient:
              type: array
              items:
                $ref: "#/components/schemas/Medication_Ingredient"
                description: Identifies a particular constituent of interest in the product.
            batch:
              $ref: "#/components/schemas/Medication_Batch"
              description: Information that only applies to packages (not products).
      example:
        resourceType: Medication
        meta:
          tag:
            - code: ibm/minimal
    Medication_Batch:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            lotNumber:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The assigned lot number of a batch of the specified product.
            expirationDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When this specific batch of product will expire.
    Medication_Ingredient:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            itemCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The actual ingredient &ndash; either a substance (simple
                ingredient) or another medication of a medication.
            itemReference:
              $ref: "#/components/schemas/Reference"
              description: The actual ingredient &ndash; either a substance (simple
                ingredient) or another medication of a medication.
            isActive:
              type: boolean
              description: Indication of whether this ingredient affects the therapeutic
                action of the drug.
            strength:
              $ref: "#/components/schemas/Ratio"
              description: Specifies how many (or how much) of the items there are in this
                Medication.  For example, 250 mg per tablet.  This is expressed
                as a ratio where the numerator is 250mg and the denominator is 1
                tablet.
    MedicationDispense:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers associated with this Medication Dispense that are
                  defined by business processes and/or used to refer to it when
                  a direct URL reference to the resource itself is not
                  appropriate. They are business identifiers assigned to this
                  resource by the performer or other systems and remain constant
                  as the resource is updated and propagates from server to
                  server.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The procedure that trigger the dispense.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code specifying the state of the set of dispense events.
            statusReasonCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the reason why a dispense was not performed.
            statusReasonReference:
              $ref: "#/components/schemas/Reference"
              description: Indicates the reason why a dispense was not performed.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the type of medication dispense (for example, where the
                medication is expected to be consumed or administered (i.e.
                inpatient or outpatient)).
            medicationCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the medication being administered. This is either a link
                to a resource representing the details of the medication or a
                simple attribute carrying a code that identifies the medication
                from a known list of medications.
            medicationReference:
              $ref: "#/components/schemas/Reference"
              description: Identifies the medication being administered. This is either a link
                to a resource representing the details of the medication or a
                simple attribute carrying a code that identifies the medication
                from a known list of medications.
            subject:
              $ref: "#/components/schemas/Reference"
              description: A link to a resource representing the person or the group to whom
                the medication will be given.
            context:
              $ref: "#/components/schemas/Reference"
              description: The encounter or episode of care that establishes the context for
                this event.
            supportingInformation:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Additional information that supports the medication being
                  dispensed.
            performer:
              type: array
              items:
                $ref: "#/components/schemas/MedicationDispense_Performer"
                description: Indicates who or what performed the event.
            location:
              $ref: "#/components/schemas/Reference"
              description: The principal physical location where the dispense was performed.
            authorizingPrescription:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates the medication order that is being dispensed against.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates the type of dispensing event that is performed. For
                example, Trial Fill, Completion of Trial, Partial Fill,
                Emergency Fill, Samples, etc.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The amount of medication that has been dispensed. Includes unit of
                measure.
            daysSupply:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The amount of medication expressed as a timing amount.
            whenPrepared:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time when the dispensed product was packaged and reviewed.
            whenHandedOver:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time the dispensed product was provided to the patient or their
                representative.
            destination:
              $ref: "#/components/schemas/Reference"
              description: Identification of the facility/location where the medication was
                shipped to, as part of the dispense event.
            receiver:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies the person who picked up the medication.  This will
                  usually be a patient or their caregiver, but some cases exist
                  where it can be a healthcare professional.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Extra information about the dispense that could not be conveyed in
                  the other attributes.
            dosageInstruction:
              type: array
              items:
                $ref: "#/components/schemas/Dosage"
                description: Indicates how the medication is to be used by the patient.
            substitution:
              $ref: "#/components/schemas/MedicationDispense_Substitution"
              description: Indicates whether or not substitution was made as part of the
                dispense.  In some cases, substitution will be expected but does
                not happen, in other cases substitution is not expected but does
                happen.  This block explains what substitution did or did not
                happen and why.  If nothing is specified, substitution was not
                done.
            detectedIssue:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Indicates an actual or potential clinical issue with or between one
                  or more active or proposed clinical actions for a patient;
                  e.g. drug&ndash;drug interaction, duplicate therapy, dosage
                  alert etc.
            eventHistory:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A summary of the events of interest that have occurred, such as
                  when the dispense was verified.
          required:
            - status
      example:
        resourceType: MedicationDispense
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        medicationCodeableConcept:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    MedicationDispense_Performer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            function:
              $ref: "#/components/schemas/CodeableConcept"
              description: Distinguishes the type of performer in the dispense.  For example,
                date enterer, packager, final checker.
            actor:
              $ref: "#/components/schemas/Reference"
              description: The device, practitioner, etc. who performed the action.  It should
                be assumed that the actor is the dispenser of the medication.
          required:
            - actor
    MedicationDispense_Substitution:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            wasSubstituted:
              type: boolean
              description: True if the dispenser dispensed a different drug or product from
                what was prescribed.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code signifying whether a different drug was dispensed from what
                was prescribed.
            reason:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Indicates the reason for the substitution (or lack of substitution)
                  from what was prescribed.
            responsibleParty:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The person or organization that has primary responsibility for the
                  substitution.
          required:
            - wasSubstituted
    MedicationKnowledge:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: "A code that specifies this medication, or a textual description if
                no code is available. Usage note: This could be a standard
                medication code such as a code from RxNorm, SNOMED CT, IDMP etc.
                It could also be a national or local formulary code, optionally
                with translations to other code systems."
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code to indicate if the medication is in active use.  The status
                refers to the validity about the information of the medication
                and not to its medicinal properties.
            manufacturer:
              $ref: "#/components/schemas/Reference"
              description: Describes the details of the manufacturer of the medication
                product.  This is not intended to represent the distributor of a
                medication product.
            doseForm:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes the form of the item.  Powder; tablets; capsule.
            amount:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Specific amount of the drug in the packaged product.  For example,
                when specifying a product that has the same strength (For
                example, Insulin glargine 100 unit per mL solution for
                injection), this attribute provides additional clarification of
                the package amount (For example, 3 mL, 10mL, etc.).
            synonym:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Additional names for a medication, for example, the name(s) given
                  to a medication in different countries.  For example,
                  acetaminophen and paracetamol or salbutamol and albuterol.
            relatedMedicationKnowledge:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_RelatedMedicationKnowledge"
                description: Associated or related knowledge about a medication.
            associatedMedication:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Associated or related medications.  For example, if the medication
                  is a branded product (e.g. Crestor), this is the Therapeutic
                  Moeity (e.g. Rosuvastatin) or if this is a generic medication
                  (e.g. Rosuvastatin), this would link to a branded product
                  (e.g. Crestor).
            productType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Category of the medication or product (e.g. branded product,
                  therapeutic moeity, generic product, innovator product, etc.).
            monograph:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_Monograph"
                description: Associated documentation about the medication.
            ingredient:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_Ingredient"
                description: Identifies a particular constituent of interest in the product.
            preparationInstruction:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The instructions for preparing the medication.
            intendedRoute:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The intended or approved route of administration.
            cost:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_Cost"
                description: The price of the medication.
            monitoringProgram:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_MonitoringProgram"
                description: The program under which the medication is reviewed.
            administrationGuidelines:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_AdministrationGuidelines"
                description: Guidelines for the administration of the medication.
            medicineClassification:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_MedicineClassification"
                description: Categorization of the medication within a formulary or
                  classification system.
            packaging:
              $ref: "#/components/schemas/MedicationKnowledge_Packaging"
              description: Information that only applies to packages (not products).
            drugCharacteristic:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_DrugCharacteristic"
                description: Specifies descriptive properties of the medicine, such as color,
                  shape, imprints, etc.
            contraindication:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Potential clinical issue with or between medication(s) (for
                  example, drug&ndash;drug interaction, drug&ndash;disease
                  contraindication, drug&ndash;allergy interaction, etc.).
            regulatory:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_Regulatory"
                description: Regulatory information about a medication.
            kinetics:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_Kinetics"
                description: The time course of drug absorption, distribution, metabolism and
                  excretion of a medication from the body.
      example:
        resourceType: MedicationKnowledge
        meta:
          tag:
            - code: ibm/minimal
    MedicationKnowledge_AdministrationGuidelines:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            dosage:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_AdministrationGuidelines_Dosage"
                description: Dosage for the medication for the specific guidelines.
            indicationCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indication for use that apply to the specific administration
                guidelines.
            indicationReference:
              $ref: "#/components/schemas/Reference"
              description: Indication for use that apply to the specific administration
                guidelines.
            patientCharacteristics:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_AdministrationGuidelines_Patien\
                  tCharacteristics"
                description: Characteristics of the patient that are relevant to the
                  administration guidelines (for example, height, weight,
                  gender, etc.).
    MedicationKnowledge_AdministrationGuidelines_Dosage:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of dosage (for example, prophylaxis, maintenance,
                therapeutic, etc.).
            dosage:
              type: array
              items:
                $ref: "#/components/schemas/Dosage"
                description: Dosage for the medication for the specific guidelines.
              minItems: 1
          required:
            - type
            - dosage
    MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            characteristicCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specific characteristic that is relevant to the administration
                guideline (e.g. height, weight, gender).
            characteristicQuantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Specific characteristic that is relevant to the administration
                guideline (e.g. height, weight, gender).
            value:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: The specific characteristic (e.g. height, weight, gender, etc.).
    MedicationKnowledge_Cost:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The category of the cost information.  For example, manufacturers'
                cost, patient cost, claim reimbursement cost, actual acquisition
                cost.
            source:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The source or owner that assigns the price to the medication.
            cost:
              $ref: "#/components/schemas/Money"
              description: The price of the medication.
          required:
            - type
            - cost
    MedicationKnowledge_DrugCharacteristic:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code specifying which characteristic of the medicine is being
                described (for example, colour, shape, imprint).
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Description of the characteristic.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of the characteristic.
            valueQuantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: Description of the characteristic.
            valueBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: Description of the characteristic.
    MedicationKnowledge_Ingredient:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            itemCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The actual ingredient &ndash; either a substance (simple
                ingredient) or another medication.
            itemReference:
              $ref: "#/components/schemas/Reference"
              description: The actual ingredient &ndash; either a substance (simple
                ingredient) or another medication.
            isActive:
              type: boolean
              description: Indication of whether this ingredient affects the therapeutic
                action of the drug.
            strength:
              $ref: "#/components/schemas/Ratio"
              description: Specifies how many (or how much) of the items there are in this
                Medication.  For example, 250 mg per tablet.  This is expressed
                as a ratio where the numerator is 250mg and the denominator is 1
                tablet.
    MedicationKnowledge_Kinetics:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            areaUnderCurve:
              type: array
              items:
                $ref: "#/components/schemas/SimpleQuantity"
                description: The drug concentration measured at certain discrete points in time.
            lethalDose50:
              type: array
              items:
                $ref: "#/components/schemas/SimpleQuantity"
                description: The median lethal dose of a drug.
            halfLifePeriod:
              $ref: "#/components/schemas/Duration"
              description: The time required for any specified property (e.g., the
                concentration of a substance in the body) to decrease by half.
    MedicationKnowledge_MedicineClassification:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of category for the medication (for example, therapeutic
                classification, therapeutic sub&ndash;classification).
            classification:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Specific category assigned to the medication (e.g.
                  anti&ndash;infective, anti&ndash;hypertensive, antibiotic,
                  etc.).
          required:
            - type
    MedicationKnowledge_MonitoringProgram:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of program under which the medication is monitored.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Name of the reviewing program.
    MedicationKnowledge_Monograph:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The category of documentation about the medication. (e.g.
                professional monograph, patient education monograph).
            source:
              $ref: "#/components/schemas/Reference"
              description: Associated documentation about the medication.
    MedicationKnowledge_Packaging:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code that defines the specific type of packaging that the
                medication can be found in (e.g. blister sleeve, tube, bottle).
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The number of product units the package would contain if fully
                loaded.
    MedicationKnowledge_Regulatory:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            regulatoryAuthority:
              $ref: "#/components/schemas/Reference"
              description: The authority that is specifying the regulations.
            substitution:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_Regulatory_Substitution"
                description: Specifies if changes are allowed when dispensing a medication from
                  a regulatory perspective.
            schedule:
              type: array
              items:
                $ref: "#/components/schemas/MedicationKnowledge_Regulatory_Schedule"
                description: Specifies the schedule of a medication in jurisdiction.
            maxDispense:
              $ref: "#/components/schemas/MedicationKnowledge_Regulatory_MaxDispense"
              description: The maximum number of units of the medication that can be dispensed
                in a period.
          required:
            - regulatoryAuthority
    MedicationKnowledge_Regulatory_MaxDispense:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The maximum number of units of the medication that can be
                dispensed.
            period:
              $ref: "#/components/schemas/Duration"
              description: The period that applies to the maximum number of units.
          required:
            - quantity
    MedicationKnowledge_Regulatory_Schedule:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            schedule:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specifies the specific drug schedule.
          required:
            - schedule
    MedicationKnowledge_Regulatory_Substitution:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specifies the type of substitution allowed.
            allowed:
              type: boolean
              description: Specifies if regulation allows for changes in the medication when
                dispensing.
          required:
            - type
            - allowed
    MedicationKnowledge_RelatedMedicationKnowledge:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The category of the associated medication knowledge reference.
            reference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Associated documentation about the associated medication knowledge.
              minItems: 1
          required:
            - type
            - reference
    MedicationStatement:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers associated with this Medication Statement that are
                  defined by business processes and/or used to refer to it when
                  a direct URL reference to the resource itself is not
                  appropriate. They are business identifiers assigned to this
                  resource by the performer or other systems and remain constant
                  as the resource is updated and propagates from server to
                  server.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A plan, proposal or order that is fulfilled in whole or in part by
                  this event.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A larger event of which this particular event is a component or
                  step.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code representing the patient or other source's judgment about
                the state of the medication used that this statement is
                about.  Generally, this will be active or completed.
            statusReason:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Captures the reason for the current state of the
                  MedicationStatement.
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates where the medication is expected to be consumed or
                administered.
            medicationCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the medication being administered. This is either a link
                to a resource representing the details of the medication or a
                simple attribute carrying a code that identifies the medication
                from a known list of medications.
            medicationReference:
              $ref: "#/components/schemas/Reference"
              description: Identifies the medication being administered. This is either a link
                to a resource representing the details of the medication or a
                simple attribute carrying a code that identifies the medication
                from a known list of medications.
            subject:
              $ref: "#/components/schemas/Reference"
              description: The person, animal or group who is/was taking the medication.
            context:
              $ref: "#/components/schemas/Reference"
              description: The encounter or episode of care that establishes the context for
                this MedicationStatement.
            effectiveDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The interval of time during which it is being asserted that the
                patient is/was/will be taking the medication (or was not taking,
                when the MedicationStatement.taken element is No).
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The interval of time during which it is being asserted that the
                patient is/was/will be taking the medication (or was not taking,
                when the MedicationStatement.taken element is No).
            dateAsserted:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date when the medication statement was asserted by the
                information source.
            informationSource:
              $ref: "#/components/schemas/Reference"
              description: "The person or organization that provided the information about the
                taking of this medication. Note: Use derivedFrom when a
                MedicationStatement is derived from other resources, e.g. Claim
                or MedicationRequest."
            derivedFrom:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Allows linking the MedicationStatement to the underlying
                  MedicationRequest, or to other information that supports or is
                  used to derive the MedicationStatement.
            reasonCode:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A reason for why the medication is being/was taken.
            reasonReference:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Condition or observation that supports why the medication is
                  being/was taken.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Provides extra information about the medication statement that is
                  not conveyed by the other attributes.
            dosage:
              type: array
              items:
                $ref: "#/components/schemas/Dosage"
                description: Indicates how the medication is/was or should be taken by the
                  patient.
          required:
            - status
            - subject
      example:
        resourceType: MedicationStatement
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        medicationCodeableConcept:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
        subject:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    MedicinalProductDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifier for this product. Could be an MPID. When in
                  development or being regulated, products are typically
                  referenced by official identifiers, assigned by a manufacturer
                  or regulator, and unique to a product (which, when compared to
                  a product instance being prescribed, is actually a product
                  type). See also MedicinalProductDefinition.code.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Regulatory type, e.g. Investigational or Authorized.
            domain:
              $ref: "#/components/schemas/CodeableConcept"
              description: If this medicine applies to human or veterinary uses.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A business identifier relating to a specific version of the
                product, this is commonly used to support revisions to an
                existing product.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: The status within the lifecycle of this product record. A
                high&ndash;level status, this is not intended to duplicate
                details carried elsewhere such as legal status, or authorization
                status.
            statusDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date at which the given status became applicable.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: General description of this product.
            combinedPharmaceuticalDoseForm:
              $ref: "#/components/schemas/CodeableConcept"
              description: The dose form for a single part product, or combined form of a
                multiple part product. This is one concept that describes all
                the components. It does not represent the form with components
                physically mixed, if that might be necessary, for which see
                (AdministrableProductDefinition.administrableDoseForm).
            route:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The path by which the product is taken into or makes contact with
                  the body. In some regions this is referred to as the licenced
                  or approved route. See also AdministrableProductDefinition
                  resource. MedicinalProductDefinition.route is the same concept
                  as AdministrableProductDefinition.routeOfAdministration.code,
                  and they cannot be used together.
            indication:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of indication(s) for this product, used when structured
                indications are not required. In cases where structured
                indications are required, they are captured using the
                ClinicalUseDefinition resource. An indication is a medical
                situation for which using the product is appropriate.
            legalStatusOfSupply:
              $ref: "#/components/schemas/CodeableConcept"
              description: The legal status of supply of the medicinal product as classified
                by the regulator.
            additionalMonitoringIndicator:
              $ref: "#/components/schemas/CodeableConcept"
              description: Whether the Medicinal Product is subject to additional monitoring
                for regulatory reasons, such as heightened reporting
                requirements.
            specialMeasures:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Whether the Medicinal Product is subject to special measures for
                  regulatory reasons, such as a requirement to conduct
                  post&ndash;authorisation studies.
            pediatricUseIndicator:
              $ref: "#/components/schemas/CodeableConcept"
              description: If authorised for use in children, or infants, neonates etc.
            classification:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Allows the product to be classified by various systems, commonly
                  WHO ATC.
            marketingStatus:
              type: array
              items:
                $ref: "#/components/schemas/MarketingStatus"
                description: Marketing status of the medicinal product, in contrast to marketing
                  authorization. This refers to the product being actually 'on
                  the market' as opposed to being allowed to be on the market
                  (which is an authorization).
            packagedMedicinalProduct:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Package type for the product. See also the
                  PackagedProductDefinition resource.
            ingredient:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The ingredients of this medicinal product &ndash; when not detailed
                  in other resources. This is only needed if the ingredients are
                  not specified by incoming references from the Ingredient
                  resource, or indirectly via incoming
                  AdministrableProductDefinition, PackagedProductDefinition or
                  ManufacturedItemDefinition references. In cases where those
                  levels of detail are not used, the ingredients may be
                  specified directly here as codes.
            impurity:
              type: array
              items:
                $ref: "#/components/schemas/CodeableReference"
                description: Any component of the drug product which is not the chemical entity
                  defined as the drug substance, or an excipient in the drug
                  product. This includes process&ndash;related impurities and
                  contaminants, product&ndash;related impurities including
                  degradation products.
            attachedDocument:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Additional information or supporting documentation about the
                  medicinal product.
            masterFile:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A master file for the medicinal product (e.g. Pharmacovigilance
                  System Master File). Drug master files (DMFs) are documents
                  submitted to regulatory agencies to provide confidential
                  detailed information about facilities, processes or articles
                  used in the manufacturing, processing, packaging and storing
                  of drug products.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/MedicinalProductDefinition_Contact"
                description: A product specific contact, person (in a role), or an organization.
            clinicalTrial:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Clinical trials or studies that this product is involved in.
            code:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: A code that this product is known by, usually within some formal
                  terminology, perhaps assigned by a third party (i.e. not the
                  manufacturer or regulator). Products (types of medications)
                  tend to be known by identifiers during development and within
                  regulatory process. However when they are prescribed they tend
                  to be identified by codes. The same product may be have
                  multiple codes, applied to it by multiple organizations.
            name:
              type: array
              items:
                $ref: "#/components/schemas/MedicinalProductDefinition_Name"
                description: The product's name, including full name and possibly coded parts.
              minItems: 1
            crossReference:
              type: array
              items:
                $ref: "#/components/schemas/MedicinalProductDefinition_CrossReference"
                description: Reference to another product, e.g. for linking authorised to
                  investigational product, or a virtual product.
            operation:
              type: array
              items:
                $ref: "#/components/schemas/MedicinalProductDefinition_Operation"
                description: A manufacturing or administrative process or step associated with
                  (or performed on) the medicinal product.
            characteristic:
              type: array
              items:
                $ref: "#/components/schemas/MedicinalProductDefinition_Characteristic"
                description: Allows the key product features to be recorded, such as "sugar
                  free", "modified release", "parallel import".
          required:
            - name
      example:
        resourceType: MedicinalProductDefinition
        meta:
          tag:
            - code: ibm/minimal
        name:
          - _productName:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    MedicinalProductDefinition_Characteristic:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code expressing the type of characteristic.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A value for the characteristic.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: A value for the characteristic.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: A value for the characteristic.
            valueBoolean:
              type: boolean
              description: A value for the characteristic.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: A value for the characteristic.
          required:
            - type
    MedicinalProductDefinition_Contact:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Allows the contact to be classified, for example QPPV,
                Pharmacovigilance Enquiry Information.
            contact:
              $ref: "#/components/schemas/Reference"
              description: A product specific contact, person (in a role), or an organization.
          required:
            - contact
    MedicinalProductDefinition_CrossReference:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            product:
              $ref: "#/components/schemas/CodeableReference"
              description: Reference to another product, e.g. for linking authorised to
                investigational product.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of relationship, for instance branded to generic, virtual
                to actual product, product to development product
                (investigational), parallel import version.
          required:
            - product
    MedicinalProductDefinition_Name:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            productName:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The full product name.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of product name, such as rINN, BAN, Proprietary,
                Non&ndash;Proprietary.
            namePart:
              type: array
              items:
                $ref: "#/components/schemas/MedicinalProductDefinition_Name_NamePart"
                description: Coding words or phrases of the name.
            countryLanguage:
              type: array
              items:
                $ref: "#/components/schemas/MedicinalProductDefinition_Name_CountryLanguage"
                description: Country and jurisdiction where the name applies, and associated
                  language.
          required:
            - productName
    MedicinalProductDefinition_Name_CountryLanguage:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            country:
              $ref: "#/components/schemas/CodeableConcept"
              description: Country code for where this name applies.
            jurisdiction:
              $ref: "#/components/schemas/CodeableConcept"
              description: Jurisdiction code for where this name applies. A jurisdiction may
                be a sub&ndash; or supra&ndash;national entity (e.g. a state or
                a geographic region).
            language:
              $ref: "#/components/schemas/CodeableConcept"
              description: Language code for this name.
          required:
            - country
            - language
    MedicinalProductDefinition_Name_NamePart:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            part:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A fragment of a product name.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifying type for this part of the name (e.g. strength part).
          required:
            - part
            - type
    MedicinalProductDefinition_Operation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableReference"
              description: The type of manufacturing operation e.g. manufacturing itself,
                re&ndash;packaging. For the authorization of this, a
                RegulatedAuthorization would point to the same plan or activity
                referenced here.
            effectiveDate:
              $ref: "#/components/schemas/Period"
              description: Date range of applicability.
            organization:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The organization or establishment responsible for (or associated
                  with) the particular process or step, examples include the
                  manufacturer, importer, agent.
            confidentialityIndicator:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specifies whether this particular business or manufacturing process
                is considered proprietary or confidential.
    MessageDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: The business identifier that is used to reference the
                MessageDefinition and *is* expected to be consistent from server
                to server.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this message
                  definition when it is represented in other formats, or
                  referenced in a specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the message
                definition when it is referenced in a specification, model,
                design or instance. This is an arbitrary value managed by the
                message definition author and is not expected to be globally
                unique. For example, it might be a timestamp (e.g. yyyymmdd) if
                a managed version is not available. There is also no expectation
                that versions can be placed in a lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the message definition. This
                name should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the message
                definition.
            replaces:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A MessageDefinition that is superseded by this definition.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this message definition. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this message definition is
                authored for testing purposes (or
                education/evaluation/marketing) and is not intended to be used
                for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the message definition was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                message definition changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                message definition.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the message definition
                from a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate message
                  definition instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the message definition is
                  intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this message definition is needed and why it has
                been designed as it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the message definition and/or its
                contents. Copyright statements are generally legal restrictions
                on the use and publishing of the message definition.
            base:
              type: string
              pattern: \\S*
              description: The MessageDefinition that is the basis for the contents of this
                resource.
            parent:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Identifies a protocol or workflow that this MessageDefinition
                  represents a step in.
            eventCoding:
              $ref: "#/components/schemas/Coding"
              description: Event code or link to the EventDefinition.
            eventUri:
              type: string
              pattern: \\S*
              description: Event code or link to the EventDefinition.
            category:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The impact of the content of the message.
            focus:
              type: array
              items:
                $ref: "#/components/schemas/MessageDefinition_Focus"
                description: Identifies the resource (or resources) that are being addressed by
                  the event.  For example, the Encounter for an admit message or
                  two Account records for a merge.
            responseRequired:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Declare at a message definition level whether a response is
                required or only upon error or success, or never.
            allowedResponse:
              type: array
              items:
                $ref: "#/components/schemas/MessageDefinition_AllowedResponse"
                description: Indicates what types of messages may be sent as an
                  application&ndash;level response to this message.
            graph:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Canonical reference to a GraphDefinition. If a URL is provided, it
                  is the canonical reference to a
                  [GraphDefinition](graphdefinition.html) that it controls what
                  resources are to be added to the bundle when building the
                  document. The GraphDefinition can also specify profiles that
                  apply to the various resources.
          required:
            - status
            - date
      example:
        resourceType: MessageDefinition
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _date:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        eventCoding:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    MessageDefinition_AllowedResponse:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            message:
              type: string
              pattern: \\S*
              description: A reference to the message definition that must be adhered to by
                this supported response.
            situation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Provides a description of the circumstances in which this response
                should be used (as opposed to one of the alternative responses).
          required:
            - message
    MessageDefinition_Focus:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The kind of resource that must be the focus for this message.
            profile:
              type: string
              pattern: \\S*
              description: A profile that reflects constraints for the focal resource (and
                potentially for related resources).
            min:
              type: integer
              format: int32
              description: Identifies the minimum number of resources of this type that must
                be pointed to by a message in order for it to be valid against
                this MessageDefinition.
            max:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Identifies the maximum number of resources of this type that must
                be pointed to by a message in order for it to be valid against
                this MessageDefinition.
          required:
            - code
            - min
    MolecularSequence:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier for this particular sequence instance. This is
                  a FHIR&ndash;defined id.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Amino Acid Sequence/ DNA Sequence / RNA Sequence.
            coordinateSystem:
              type: integer
              format: int32
              description: Whether the sequence is numbered starting at 0 (0&ndash;based
                numbering or coordinates, inclusive start, exclusive end) or
                starting at 1 (1&ndash;based numbering, inclusive start and
                inclusive end).
            patient:
              $ref: "#/components/schemas/Reference"
              description: The patient whose sequencing results are described by this
                resource.
            specimen:
              $ref: "#/components/schemas/Reference"
              description: Specimen used for sequencing.
            device:
              $ref: "#/components/schemas/Reference"
              description: The method for sequencing, for example, chip information.
            performer:
              $ref: "#/components/schemas/Reference"
              description: The organization or lab that should be responsible for this result.
            quantity:
              $ref: "#/components/schemas/Quantity"
              description: The number of copies of the sequence of interest. (RNASeq).
            referenceSeq:
              $ref: "#/components/schemas/MolecularSequence_ReferenceSeq"
              description: A sequence that is used as a reference to describe variants that
                are present in a sequence analyzed.
            variant:
              type: array
              items:
                $ref: "#/components/schemas/MolecularSequence_Variant"
                description: The definition of variant here originates from Sequence ontology
                  ([variant_of](http://www.sequenceontology.org/browser/current_svn/term/variant_of)).
                  This element can represent amino acid or nucleic sequence
                  change(including insertion,deletion,SNP,etc.)  It can
                  represent some complex mutation or segment variation with the
                  assist of CIGAR string.
            observedSeq:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Sequence that was observed. It is the result marked by referenceSeq
                along with variant records on referenceSeq. This shall start
                from referenceSeq.windowStart and end by referenceSeq.windowEnd.
            quality:
              type: array
              items:
                $ref: "#/components/schemas/MolecularSequence_Quality"
                description: An experimental feature attribute that defines the quality of the
                  feature in a quantitative way, such as a phred quality score
                  ([SO:0001686](http://www.sequenceontology.org/browser/current_svn/term/SO:0001686)).
            readCoverage:
              type: integer
              format: int32
              description: Coverage (read depth or depth) is the average number of reads
                representing a given nucleotide in the reconstructed sequence.
            repository:
              type: array
              items:
                $ref: "#/components/schemas/MolecularSequence_Repository"
                description: Configurations of the external repository. The repository shall
                  store target's observedSeq or records related with target's
                  observedSeq.
            pointer:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Pointer to next atomic sequence which at most contains one variant.
            structureVariant:
              type: array
              items:
                $ref: "#/components/schemas/MolecularSequence_StructureVariant"
                description: Information about chromosome structure variation.
          required:
            - coordinateSystem
      example:
        resourceType: MolecularSequence
        meta:
          tag:
            - code: ibm/minimal
        _coordinateSystem:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    MolecularSequence_Quality:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: INDEL / SNP / Undefined variant.
            standardSequence:
              $ref: "#/components/schemas/CodeableConcept"
              description: Gold standard sequence used for comparing against.
            start:
              type: integer
              format: int32
              description: Start position of the sequence. If the coordinate system is either
                0&ndash;based or 1&ndash;based, then start position is
                inclusive.
            end:
              type: integer
              format: int32
              description: End position of the sequence. If the coordinate system is
                0&ndash;based then end is exclusive and does not include the
                last position. If the coordinate system is 1&ndash;base, then
                end is inclusive and includes the last position.
            score:
              $ref: "#/components/schemas/Quantity"
              description: The score of an experimentally derived feature such as a
                p&ndash;value
                ([SO:0001685](http://www.sequenceontology.org/browser/current_svn/term/SO:0001685)).
            method:
              $ref: "#/components/schemas/CodeableConcept"
              description: Which method is used to get sequence quality.
            truthTP:
              type: number
              description: True positives, from the perspective of the truth data, i.e. the
                number of sites in the Truth Call Set for which there are paths
                through the Query Call Set that are consistent with all of the
                alleles at this site, and for which there is an accurate
                genotype call for the event.
            queryTP:
              type: number
              description: True positives, from the perspective of the query data, i.e. the
                number of sites in the Query Call Set for which there are paths
                through the Truth Call Set that are consistent with all of the
                alleles at this site, and for which there is an accurate
                genotype call for the event.
            truthFN:
              type: number
              description: False negatives, i.e. the number of sites in the Truth Call Set for
                which there is no path through the Query Call Set that is
                consistent with all of the alleles at this site, or sites for
                which there is an inaccurate genotype call for the event. Sites
                with correct variant but incorrect genotype are counted here.
            queryFP:
              type: number
              description: False positives, i.e. the number of sites in the Query Call Set for
                which there is no path through the Truth Call Set that is
                consistent with this site. Sites with correct variant but
                incorrect genotype are counted here.
            gtFP:
              type: number
              description: The number of false positives where the non&ndash;REF alleles in
                the Truth and Query Call Sets match (i.e. cases where the truth
                is 1/1 and the query is 0/1 or similar).
            precision:
              type: number
              description: QUERY.TP / (QUERY.TP + QUERY.FP).
            recall:
              type: number
              description: TRUTH.TP / (TRUTH.TP + TRUTH.FN).
            fScore:
              type: number
              description: "Harmonic mean of Recall and Precision, computed as: 2 * precision
                * recall / (precision + recall)."
            roc:
              $ref: "#/components/schemas/MolecularSequence_Quality_Roc"
              description: Receiver Operator Characteristic (ROC) Curve  to give
                sensitivity/specificity tradeoff.
          required:
            - type
    MolecularSequence_Quality_Roc:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            score:
              type: array
              items:
                type: integer
                format: int32
                description: Invidual data point representing the GQ (genotype quality) score
                  threshold.
            numTP:
              type: array
              items:
                type: integer
                format: int32
                description: The number of true positives if the GQ score threshold was set to
                  "score" field value.
            numFP:
              type: array
              items:
                type: integer
                format: int32
                description: The number of false positives if the GQ score threshold was set to
                  "score" field value.
            numFN:
              type: array
              items:
                type: integer
                format: int32
                description: The number of false negatives if the GQ score threshold was set to
                  "score" field value.
            precision:
              type: array
              items:
                type: number
                description: Calculated precision if the GQ score threshold was set to "score"
                  field value.
            sensitivity:
              type: array
              items:
                type: number
                description: Calculated sensitivity if the GQ score threshold was set to "score"
                  field value.
            fMeasure:
              type: array
              items:
                type: number
                description: Calculated fScore if the GQ score threshold was set to "score"
                  field value.
    MolecularSequence_ReferenceSeq:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            chromosome:
              $ref: "#/components/schemas/CodeableConcept"
              description: Structural unit composed of a nucleic acid molecule which controls
                its own replication through the interaction of specific proteins
                at one or more origins of replication
                ([SO:0000340](http://www.sequenceontology.org/browser/current_svn/term/SO:0000340)).
            genomeBuild:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The Genome Build used for reference, following GRCh build versions
                e.g. 'GRCh 37'.  Version number must be included if a versioned
                release of a primary build was used.
            orientation:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A relative reference to a DNA strand based on gene orientation. The
                strand that contains the open reading frame of the gene is the
                "sense" strand, and the opposite complementary strand is the
                "antisense" strand.
            referenceSeqId:
              $ref: "#/components/schemas/CodeableConcept"
              description: Reference identifier of reference sequence submitted to NCBI. It
                must match the type in the MolecularSequence.type field. For
                example, the prefix, &ldquo;NG_&rdquo; identifies reference
                sequence for genes, &ldquo;NM_&rdquo; for messenger RNA
                transcripts, and &ldquo;NP_&rdquo; for amino acid sequences.
            referenceSeqPointer:
              $ref: "#/components/schemas/Reference"
              description: A pointer to another MolecularSequence entity as reference
                sequence.
            referenceSeqString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A string like "ACGT".
            strand:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: An absolute reference to a strand. The Watson strand is the strand
                whose 5'&ndash;end is on the short arm of the chromosome, and
                the Crick strand as the one whose 5'&ndash;end is on the long
                arm.
            windowStart:
              type: integer
              format: int32
              description: Start position of the window on the reference sequence. If the
                coordinate system is either 0&ndash;based or 1&ndash;based, then
                start position is inclusive.
            windowEnd:
              type: integer
              format: int32
              description: End position of the window on the reference sequence. If the
                coordinate system is 0&ndash;based then end is exclusive and
                does not include the last position. If the coordinate system is
                1&ndash;base, then end is inclusive and includes the last
                position.
    MolecularSequence_Repository:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Click and see / RESTful API / Need login to see / RESTful API with
                authentication / Other ways to see resource.
            url:
              type: string
              pattern: \\S*
              description: URI of an external repository which contains further details about
                the genetics data.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: URI of an external repository which contains further details about
                the genetics data.
            datasetId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Id of the variant in this external repository. The server will
                understand how to use this id to call for more info about
                datasets in external repository.
            variantsetId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Id of the variantset in this external repository. The server will
                understand how to use this id to call for more info about
                variantsets in external repository.
            readsetId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Id of the read in this external repository.
          required:
            - type
    MolecularSequence_StructureVariant:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            variantType:
              $ref: "#/components/schemas/CodeableConcept"
              description: Information about chromosome structure variation DNA change type.
            exact:
              type: boolean
              description: Used to indicate if the outer and inner start&ndash;end values have
                the same meaning.
            length:
              type: integer
              format: int32
              description: Length of the variant chromosome.
            outer:
              $ref: "#/components/schemas/MolecularSequence_StructureVariant_Outer"
              description: Structural variant outer.
            inner:
              $ref: "#/components/schemas/MolecularSequence_StructureVariant_Inner"
              description: Structural variant inner.
    MolecularSequence_StructureVariant_Inner:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            start:
              type: integer
              format: int32
              description: Structural variant inner start. If the coordinate system is either
                0&ndash;based or 1&ndash;based, then start position is
                inclusive.
            end:
              type: integer
              format: int32
              description: Structural variant inner end. If the coordinate system is
                0&ndash;based then end is exclusive and does not include the
                last position. If the coordinate system is 1&ndash;base, then
                end is inclusive and includes the last position.
    MolecularSequence_StructureVariant_Outer:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            start:
              type: integer
              format: int32
              description: Structural variant outer start. If the coordinate system is either
                0&ndash;based or 1&ndash;based, then start position is
                inclusive.
            end:
              type: integer
              format: int32
              description: Structural variant outer end. If the coordinate system is
                0&ndash;based then end is exclusive and does not include the
                last position. If the coordinate system is 1&ndash;base, then
                end is inclusive and includes the last position.
    MolecularSequence_Variant:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            start:
              type: integer
              format: int32
              description: Start position of the variant on the  reference sequence. If the
                coordinate system is either 0&ndash;based or 1&ndash;based, then
                start position is inclusive.
            end:
              type: integer
              format: int32
              description: End position of the variant on the reference sequence. If the
                coordinate system is 0&ndash;based then end is exclusive and
                does not include the last position. If the coordinate system is
                1&ndash;base, then end is inclusive and includes the last
                position.
            observedAllele:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An allele is one of a set of coexisting sequence variants of a gene
                ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)).  Nucleotide(s)/amino
                acids from start position of sequence to stop position of
                sequence on the positive (+) strand of the observed  sequence.
                When the sequence  type is DNA, it should be the sequence on the
                positive (+) strand. This will lay in the range between
                variant.start and variant.end.
            referenceAllele:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An allele is one of a set of coexisting sequence variants of a gene
                ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)).
                Nucleotide(s)/amino acids from start position of sequence to
                stop position of sequence on the positive (+) strand of the
                reference sequence. When the sequence  type is DNA, it should be
                the sequence on the positive (+) strand. This will lay in the
                range between variant.start and variant.end.
            cigar:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Extended CIGAR string for aligning the sequence with reference
                bases. See detailed documentation
                [here](http://support.illumina.com/help/SequencingAnalysisWorkflow/Content/Vault/Informatics/Sequencing_Analysis/CASAVA/swSEQ_mCA_ExtendedCIGARFormat.htm).
            variantPointer:
              $ref: "#/components/schemas/Reference"
              description: A pointer to an Observation containing variant information.
    NamingSystem:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the naming system. This name
                should be usable as an identifier for the module by machine
                processing applications such as code generation.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this naming system. Enables tracking the
                life&ndash;cycle of the content.
            kind:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the purpose for the naming system &ndash; what kinds of
                things does it make unique?
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the naming system was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                naming system changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                naming system.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            responsible:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization that is responsible for issuing
                identifiers or codes for this namespace and ensuring their
                non&ndash;collision.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Categorizes a naming system for easier search by grouping related
                naming systems.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the naming system from
                a consumer's perspective. Details about what the namespace
                identifies including scope, granularity, version labeling, etc.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate naming
                  system instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the naming system is intended
                  to be used.
            usage:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Provides guidance on the use of the namespace, including the
                handling of formatting characters, use of upper vs. lower case,
                etc.
            uniqueId:
              type: array
              items:
                $ref: "#/components/schemas/NamingSystem_UniqueId"
                description: Indicates how the system may be identified when referenced in
                  electronic exchange.
              minItems: 1
          required:
            - name
            - status
            - kind
            - date
            - uniqueId
      example:
        resourceType: NamingSystem
        meta:
          tag:
            - code: ibm/minimal
        _name:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _kind:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _date:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        uniqueId:
          - _type:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
            _value:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    NamingSystem_UniqueId:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identifies the unique identifier scheme used for this particular
                identifier.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The string that should be sent over the wire to identify the code
                system or identifier system.
            preferred:
              type: boolean
              description: Indicates whether this identifier is the "preferred" identifier of
                this type.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Notes about the past or intended usage of this identifier.
            period:
              $ref: "#/components/schemas/Period"
              description: Identifies the period of time over which this identifier is
                considered appropriate to refer to the naming system.  Outside
                of this window, the identifier might be non&ndash;deterministic.
          required:
            - type
            - value
    NutritionProduct:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of the product.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Nutrition products can have different classifications &ndash;
                  according to its nutritional properties, preparation methods,
                  etc.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The code assigned to the product, for example a manufacturer number
                or other terminology.
            manufacturer:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The organisation (manufacturer, representative or legal
                  authorisation holder) that is responsible for the device.
            nutrient:
              type: array
              items:
                $ref: "#/components/schemas/NutritionProduct_Nutrient"
                description: The product's nutritional information expressed by the nutrients.
            ingredient:
              type: array
              items:
                $ref: "#/components/schemas/NutritionProduct_Ingredient"
                description: Ingredients contained in this product.
            knownAllergen:
              type: array
              items:
                $ref: "#/components/schemas/CodeableReference"
                description: Allergens that are known or suspected to be a part of this
                  nutrition product.
            productCharacteristic:
              type: array
              items:
                $ref: "#/components/schemas/NutritionProduct_ProductCharacteristic"
                description: Specifies descriptive properties of the nutrition product.
            instance:
              $ref: "#/components/schemas/NutritionProduct_Instance"
              description: Conveys instance&ndash;level information about this product item.
                One or several physical, countable instances or occurrences of
                the product.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Comments made about the product.
          required:
            - status
      example:
        resourceType: NutritionProduct
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    NutritionProduct_Ingredient:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            item:
              $ref: "#/components/schemas/CodeableReference"
              description: The ingredient contained in the product.
            amount:
              type: array
              items:
                $ref: "#/components/schemas/Ratio"
                description: The amount of ingredient that is in the product.
          required:
            - item
    NutritionProduct_Instance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The amount of items or instances that the resource considers, for
                instance when referring to 2 identical units together.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: The identifier for the physical instance, typically a serial
                  number.
            lotNumber:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identification of the batch or lot of the product.
            expiry:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time after which the product is no longer expected to be in
                proper condition, or its use is not advised or not allowed.
            useBy:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time after which the product is no longer expected to be in
                proper condition, or its use is not advised or not allowed.
    NutritionProduct_Nutrient:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            item:
              $ref: "#/components/schemas/CodeableReference"
              description: The (relevant) nutrients in the product.
            amount:
              type: array
              items:
                $ref: "#/components/schemas/Ratio"
                description: "The amount of nutrient expressed in one or more units: X per pack
                  / per serving / per dose."
    NutritionProduct_ProductCharacteristic:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code specifying which characteristic of the product is being
                described (for example, colour, shape).
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The actual characteristic value corresponding to the type.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The actual characteristic value corresponding to the type.
            valueQuantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The actual characteristic value corresponding to the type.
            valueBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: The actual characteristic value corresponding to the type.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: The actual characteristic value corresponding to the type.
            valueBoolean:
              type: boolean
              description: The actual characteristic value corresponding to the type.
          required:
            - type
    ObservationDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A code that classifies the general type of observation.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Describes what will be observed. Sometimes this is called the
                observation "name".
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this ObservationDefinition
                  artifact.
            permittedDataType:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: The data types allowed for the value element of the instance
                  observations conforming to this ObservationDefinition.
            multipleResultsAllowed:
              type: boolean
              description: Multiple results allowed for observations conforming to this
                ObservationDefinition.
            method:
              $ref: "#/components/schemas/CodeableConcept"
              description: The method or technique used to perform the observation.
            preferredReportName:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The preferred name to be used when reporting the results of
                observations conforming to this ObservationDefinition.
            quantitativeDetails:
              $ref: "#/components/schemas/ObservationDefinition_QuantitativeDetails"
              description: Characteristics for quantitative results of this observation.
            qualifiedInterval:
              type: array
              items:
                $ref: "#/components/schemas/ObservationDefinition_QualifiedInterval"
                description: Multiple  ranges of results qualified by different contexts for
                  ordinal or continuous observations conforming to this
                  ObservationDefinition.
            validCodedValueSet:
              $ref: "#/components/schemas/Reference"
              description: The set of valid coded results for the observations  conforming to
                this ObservationDefinition.
            normalCodedValueSet:
              $ref: "#/components/schemas/Reference"
              description: The set of normal coded results for the observations conforming to
                this ObservationDefinition.
            abnormalCodedValueSet:
              $ref: "#/components/schemas/Reference"
              description: The set of abnormal coded results for the observation conforming to
                this ObservationDefinition.
            criticalCodedValueSet:
              $ref: "#/components/schemas/Reference"
              description: The set of critical coded results for the observation conforming to
                this ObservationDefinition.
          required:
            - code
      example:
        resourceType: ObservationDefinition
        meta:
          tag:
            - code: ibm/minimal
        code:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    ObservationDefinition_QualifiedInterval:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            category:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The category of interval of values for continuous or ordinal
                observations conforming to this ObservationDefinition.
            range:
              $ref: "#/components/schemas/Range"
              description: The low and high values determining the interval. There may be only
                one of the two.
            context:
              $ref: "#/components/schemas/CodeableConcept"
              description: Codes to indicate the health context the range applies to. For
                example, the normal or therapeutic range.
            appliesTo:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Codes to indicate the target population this reference range
                  applies to.
            gender:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Sex of the population the range applies to.
            age:
              $ref: "#/components/schemas/Range"
              description: The age at which this reference range is applicable. This is a
                neonatal age (e.g. number of weeks at term) if the meaning says
                so.
            gestationalAge:
              $ref: "#/components/schemas/Range"
              description: The gestational age to which this reference range is applicable, in
                the context of pregnancy.
            condition:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Text based condition for which the reference range is valid.
    ObservationDefinition_QuantitativeDetails:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            customaryUnit:
              $ref: "#/components/schemas/CodeableConcept"
              description: Customary unit used to report quantitative results of observations
                conforming to this ObservationDefinition.
            unit:
              $ref: "#/components/schemas/CodeableConcept"
              description: SI unit used to report quantitative results of observations
                conforming to this ObservationDefinition.
            conversionFactor:
              type: number
              description: Factor for converting value expressed with SI unit to value
                expressed with customary unit.
            decimalPrecision:
              type: integer
              format: int32
              description: Number of digits after decimal separator when the results of such
                observations are of type Quantity.
    OperationDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this operation definition
                when it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this operation definition is
                (or will be) published. This URL can be the target of a
                canonical reference. It SHALL remain the same when the operation
                definition is stored on different servers.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                operation definition when it is referenced in a specification,
                model, design or instance. This is an arbitrary value managed by
                the operation definition author and is not expected to be
                globally unique. For example, it might be a timestamp (e.g.
                yyyymmdd) if a managed version is not available. There is also
                no expectation that versions can be placed in a lexicographical
                sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the operation definition. This
                name should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the operation
                definition.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this operation definition. Enables tracking the
                life&ndash;cycle of the content.
            kind:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Whether this is an operation or a named query.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this operation definition is
                authored for testing purposes (or
                education/evaluation/marketing) and is not intended to be used
                for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the operation definition was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                operation definition changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                operation definition.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the operation
                definition from a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate operation
                  definition instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the operation definition is
                  intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this operation definition is needed and why it
                has been designed as it has.
            affectsState:
              type: boolean
              description: Whether the operation affects state. Side effects such as producing
                audit trail entries do not count as 'affecting  state'.
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The name used to invoke the operation.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional information about how to use this operation or named
                query.
            base:
              type: string
              pattern: \\S*
              description: Indicates that this operation definition is a constraining profile
                on the base.
            resource:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: The types on which this operation can be executed.
            system:
              type: boolean
              description: Indicates whether this operation or named query can be invoked at
                the system level (e.g. without needing to choose a resource type
                for the context).
            type:
              type: boolean
              description: Indicates whether this operation or named query can be invoked at
                the resource type level for any given resource type level (e.g.
                without needing to choose a specific resource id for the
                context).
            instance:
              type: boolean
              description: Indicates whether this operation can be invoked on a particular
                instance of one of the given types.
            inputProfile:
              type: string
              pattern: \\S*
              description: Additional validation information for the in parameters &ndash; a
                single profile that covers all the parameters. The profile is a
                constraint on the parameters resource as a whole.
            outputProfile:
              type: string
              pattern: \\S*
              description: Additional validation information for the out parameters &ndash; a
                single profile that covers all the parameters. The profile is a
                constraint on the parameters resource.
            parameter:
              type: array
              items:
                $ref: "#/components/schemas/OperationDefinition_Parameter"
                description: The parameters for the operation/query.
            overload:
              type: array
              items:
                $ref: "#/components/schemas/OperationDefinition_Overload"
                description: Defines an appropriate combination of parameters to use when
                  invoking this operation, to help code generators when
                  generating overloaded parameter sets for this operation.
          required:
            - name
            - status
            - kind
            - code
            - system
            - type
            - instance
      example:
        resourceType: OperationDefinition
        meta:
          tag:
            - code: ibm/minimal
        _name:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _kind:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _code:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _system:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _type:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _instance:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    OperationDefinition_Overload:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            parameterName:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Name of parameter to include in overload.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Comments to go on overload.
    OperationDefinition_Parameter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The name of used to identify the parameter.
            use:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Whether this is an input or an output parameter.
            min:
              type: integer
              format: int32
              description: The minimum number of times this parameter SHALL appear in the
                request or response.
            max:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The maximum number of times this element is permitted to appear in
                the request or response.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Describes the meaning or use of this parameter.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type for this parameter.
            targetProfile:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Used when the type is "Reference" or "canonical", and identifies a
                  profile structure or implementation Guide that applies to the
                  target of the reference this parameter refers to. If any
                  profiles are specified, then the content must conform to at
                  least one of them. The URL can be a local reference &ndash; to
                  a contained StructureDefinition, or a reference to another
                  StructureDefinition or Implementation Guide by a canonical
                  URL. When an implementation guide is specified, the target
                  resource SHALL conform to at least one profile defined in the
                  implementation guide.
            searchType:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the parameter is understood as a search parameter. This is only
                used if the parameter type is 'string'.
            binding:
              $ref: "#/components/schemas/OperationDefinition_Parameter_Binding"
              description: Binds to a value set if this parameter is coded (code, Coding,
                CodeableConcept).
            referencedFrom:
              type: array
              items:
                $ref: "#/components/schemas/OperationDefinition_Parameter_ReferencedFrom"
                description: Identifies other resource parameters within the operation
                  invocation that are expected to resolve to this resource.
            part:
              type: array
              items:
                $ref: "#/components/schemas/OperationDefinition_Parameter"
                description: The parts of a nested Parameter.
          required:
            - name
            - use
            - min
            - max
    OperationDefinition_Parameter_Binding:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            strength:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the degree of conformance expectations associated with
                this binding &ndash; that is, the degree to which the provided
                value set must be adhered to in the instances.
            valueSet:
              type: string
              pattern: \\S*
              description: Points to the value set or external definition (e.g. implicit value
                set) that identifies the set of codes to be used.
          required:
            - strength
            - valueSet
    OperationDefinition_Parameter_ReferencedFrom:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            source:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the parameter or dot&ndash;separated path of parameter
                names pointing to the resource parameter that is expected to
                contain a reference to this resource.
            sourceId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The id of the element in the referencing resource that is expected
                to resolve to this resource.
          required:
            - source
    Organization:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier for the organization that is used to identify the
                  organization across multiple disparate systems.
            active:
              type: boolean
              description: Whether the organization's record is still in active use.
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The kind(s) of organization that this is.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A name associated with the organization.
            alias:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: A list of alternate names that the organization is known as, or was
                  known as in the past.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: A contact detail for the organization.
            address:
              type: array
              items:
                $ref: "#/components/schemas/Address"
                description: An address for the organization.
            partOf:
              $ref: "#/components/schemas/Reference"
              description: The organization of which this organization forms a part.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/Organization_Contact"
                description: Contact for the organization for a certain purpose.
            endpoint:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Technical endpoints providing access to services operated for the
                  organization.
      example:
        resourceType: Organization
        meta:
          tag:
            - code: ibm/minimal
    Organization_Contact:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            purpose:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates a purpose for which the contact can be reached.
            name:
              $ref: "#/components/schemas/HumanName"
              description: A name associated with the contact.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: A contact detail (e.g. a telephone number or an email address) by
                  which the party may be contacted.
            address:
              $ref: "#/components/schemas/Address"
              description: Visiting or postal addresses for the contact.
    OrganizationAffiliation:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers that are specific to this role.
            active:
              type: boolean
              description: Whether this organization affiliation record is in active use.
            period:
              $ref: "#/components/schemas/Period"
              description: The period during which the participatingOrganization is affiliated
                with the primary organization.
            organization:
              $ref: "#/components/schemas/Reference"
              description: Organization where the role is available (primary organization/has
                members).
            participatingOrganization:
              $ref: "#/components/schemas/Reference"
              description: The Participating Organization provides/performs the role(s)
                defined by the code to the Primary Organization (e.g. providing
                services or is a member of).
            network:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Health insurance provider network in which the
                  participatingOrganization provides the role's services (if
                  defined) at the indicated locations (if defined).
            code:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Definition of the role the participatingOrganization plays in the
                  association.
            specialty:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Specific specialty of the participatingOrganization in the context
                  of the role.
            location:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The location(s) at which the role occurs.
            healthcareService:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Healthcare services provided through the role.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: Contact details at the participatingOrganization relevant to this
                  Affiliation.
            endpoint:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Technical endpoints providing access to services operated for this
                  role.
      example:
        resourceType: OrganizationAffiliation
        meta:
          tag:
            - code: ibm/minimal
    PackagedProductDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier for this package as whole. Unique instance
                  identifiers assigned to a package by manufacturers,
                  regulators, drug catalogue custodians or other organizations.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A name for this package. Typically what it would be listed as in a
                drug formulary or catalogue, inventory etc.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A high level category e.g. medicinal product, raw material,
                shipping/transport container, etc.
            packageFor:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The product that this is a pack for.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: The status within the lifecycle of this item. A high level status,
                this is not intended to duplicate details carried elsewhere such
                as legal status, or authorization or marketing status.
            statusDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date at which the given status became applicable.
            containedItemQuantity:
              type: array
              items:
                $ref: "#/components/schemas/Quantity"
                description: A total of the complete count of contained items of a particular
                  type/form, independent of sub&ndash;packaging or organization.
                  This can be considered as the pack size. This attribute
                  differs from containedItem.amount in that it can give a single
                  aggregated count of all tablet types in a pack, even when
                  these are different manufactured items. For example a pill
                  pack of 21 tablets plus 7 sugar tablets, can be denoted here
                  as '28 tablets'. This attribute is repeatable so that the
                  different item types in one pack type can be counted (e.g. a
                  count of vials and count of syringes). Each repeat must have
                  different units, so that it is clear what the different sets
                  of counted items are, and it is not intended to allow
                  different counts of similar items (e.g. not '2 tubes and 3
                  tubes'). Repeats are not to be used to represent different
                  pack sizes (e.g. 20 pack vs. 50 pack) &ndash; which would be
                  different instances of this resource.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Textual description. Note that this is not the name of the package
                or product.
            legalStatusOfSupply:
              type: array
              items:
                $ref: "#/components/schemas/PackagedProductDefinition_LegalStatusOfSupply"
                description: The legal status of supply of the packaged item as classified by
                  the regulator.
            marketingStatus:
              type: array
              items:
                $ref: "#/components/schemas/MarketingStatus"
                description: Allows specifying that an item is on the market for sale, or that
                  it is not available, and the dates and locations associated.
            characteristic:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Allows the key features to be recorded, such as "hospital pack",
                  "nurse prescribable", "calendar pack".
            copackagedIndicator:
              type: boolean
              description: States whether a drug product is supplied with another item such as
                a diluent or adjuvant.
            manufacturer:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Manufacturer of this package type. When there are multiple it means
                  these are all possible manufacturers.
            package:
              $ref: "#/components/schemas/PackagedProductDefinition_Package"
              description: A packaging item, as a container for medically related items,
                possibly with other packaging items within, or a packaging
                component, such as bottle cap (which is not a device or a
                medication manufactured item).
      example:
        resourceType: PackagedProductDefinition
        meta:
          tag:
            - code: ibm/minimal
    PackagedProductDefinition_LegalStatusOfSupply:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The actual status of supply. Conveys in what situation this package
                type may be supplied for use.
            jurisdiction:
              $ref: "#/components/schemas/CodeableConcept"
              description: The place where the legal status of supply applies. When not
                specified, this indicates it is unknown in this context.
    PackagedProductDefinition_Package:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: An identifier that is specific to this particular part of the
                  packaging. Including possibly Data Carrier Identifier (a GS1
                  barcode).
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The physical type of the container of the items.
            quantity:
              type: integer
              format: int32
              description: The quantity of this level of packaging in the package that
                contains it. If specified, the outermost level is always 1.
            material:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Material type of the package item.
            alternateMaterial:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A possible alternate material for this part of the packaging, that
                  is allowed to be used instead of the usual material (e.g.
                  different types of plastic for a blister sleeve).
            shelfLifeStorage:
              type: array
              items:
                $ref: "#/components/schemas/PackagedProductDefinition_Package_ShelfLifeStorage"
                description: Shelf Life and storage information.
            manufacturer:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Manufacturer of this package Item. When there are multiple it means
                  these are all possible manufacturers.
            property:
              type: array
              items:
                $ref: "#/components/schemas/PackagedProductDefinition_Package_Property"
                description: General characteristics of this item.
            containedItem:
              type: array
              items:
                $ref: "#/components/schemas/PackagedProductDefinition_Package_ContainedItem"
                description: The item(s) within the packaging.
            package:
              type: array
              items:
                $ref: "#/components/schemas/PackagedProductDefinition_Package"
                description: Allows containers (and parts of containers) parwithin containers,
                  still a single packaged product.  See also
                  PackagedProductDefinition.package.containedItem.item(PackagedProductDefinition).
    PackagedProductDefinition_Package_ContainedItem:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            item:
              $ref: "#/components/schemas/CodeableReference"
              description: The actual item(s) of medication, as manufactured, or a device
                (typically, but not necessarily, a co&ndash;packaged one), or
                other medically related item (such as food, biologicals, raw
                materials, medical fluids, gases etc.), as contained in the
                package. This also allows another whole packaged product to be
                included, which is solely for the case where a package of other
                entire packages is wanted &ndash; such as a wholesale or
                distribution pack (for layers within one package, use
                PackagedProductDefinition.package.package).
            amount:
              $ref: "#/components/schemas/Quantity"
              description: The number of this type of item within this packaging.
          required:
            - item
    PackagedProductDefinition_Package_Property:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code expressing the type of characteristic.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A value for the characteristic.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: A value for the characteristic.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: A value for the characteristic.
            valueBoolean:
              type: boolean
              description: A value for the characteristic.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: A value for the characteristic.
          required:
            - type
    PackagedProductDefinition_Package_ShelfLifeStorage:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: This describes the shelf life, taking into account various
                scenarios such as shelf life of the packaged Medicinal Product
                itself, shelf life after transformation where necessary and
                shelf life after the first opening of a bottle, etc. The shelf
                life type shall be specified using an appropriate controlled
                vocabulary The controlled term and the controlled term
                identifier shall be specified.
            periodDuration:
              $ref: "#/components/schemas/Duration"
              description: The shelf life time period can be specified using a numerical value
                for the period of time and its unit of time measurement The unit
                of measurement shall be specified in accordance with ISO 11240
                and the resulting terminology The symbol and the symbol
                identifier shall be used.
            periodString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The shelf life time period can be specified using a numerical value
                for the period of time and its unit of time measurement The unit
                of measurement shall be specified in accordance with ISO 11240
                and the resulting terminology The symbol and the symbol
                identifier shall be used.
            specialPrecautionsForStorage:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Special precautions for storage, if any, can be specified using an
                  appropriate controlled vocabulary. The controlled term and the
                  controlled term identifier shall be specified.
    Patient:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: An identifier for this patient.
            active:
              type: boolean
              description: >-
                Whether this patient record is in active use. 

                Many systems use this property to mark as non&ndash;current
                patients, such as those that have not been seen for a period of
                time based on an organization's business rules.


                It is often used to filter patient lists to exclude inactive
                patients


                Deceased patients may also be marked as inactive for the same
                reasons, but may be active for some time after death.
            name:
              type: array
              items:
                $ref: "#/components/schemas/HumanName"
                description: A name associated with the individual.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: A contact detail (e.g. a telephone number or an email address) by
                  which the individual may be contacted.
            gender:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Administrative Gender &ndash; the gender that the patient is
                considered to have for administration and record keeping
                purposes.
            birthDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date of birth for the individual.
            deceasedBoolean:
              type: boolean
              description: Indicates if the individual is deceased or not.
            deceasedDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Indicates if the individual is deceased or not.
            address:
              type: array
              items:
                $ref: "#/components/schemas/Address"
                description: An address for the individual.
            maritalStatus:
              $ref: "#/components/schemas/CodeableConcept"
              description: This field contains a patient's most recent marital (civil) status.
            multipleBirthBoolean:
              type: boolean
              description: Indicates whether the patient is part of a multiple (boolean) or
                indicates the actual birth order (integer).
            multipleBirthInteger:
              type: integer
              format: int32
              description: Indicates whether the patient is part of a multiple (boolean) or
                indicates the actual birth order (integer).
            photo:
              type: array
              items:
                $ref: "#/components/schemas/Attachment"
                description: Image of the patient.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/Patient_Contact"
                description: A contact party (e.g. guardian, partner, friend) for the patient.
            communication:
              type: array
              items:
                $ref: "#/components/schemas/Patient_Communication"
                description: A language which may be used to communicate with the patient about
                  his or her health.
            generalPractitioner:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Patient's nominated care provider.
            managingOrganization:
              $ref: "#/components/schemas/Reference"
              description: Organization that is the custodian of the patient record.
            link:
              type: array
              items:
                $ref: "#/components/schemas/Patient_Link"
                description: Link to another patient resource that concerns the same actual
                  patient.
      example:
        resourceType: Patient
        meta:
          tag:
            - code: ibm/minimal
    Patient_Communication:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            language:
              $ref: "#/components/schemas/CodeableConcept"
              description: The ISO&ndash;639&ndash;1 alpha 2 code in lower case for the
                language, optionally followed by a hyphen and the
                ISO&ndash;3166&ndash;1 alpha 2 code for the region in upper
                case; e.g. "en" for English, or "en&ndash;US" for American
                English versus "en&ndash;EN" for England English.
            preferred:
              type: boolean
              description: Indicates whether or not the patient prefers this language (over
                other languages he masters up a certain level).
          required:
            - language
    Patient_Contact:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            relationship:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The nature of the relationship between the patient and the contact
                  person.
            name:
              $ref: "#/components/schemas/HumanName"
              description: A name associated with the contact person.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: A contact detail for the person, e.g. a telephone number or an
                  email address.
            address:
              $ref: "#/components/schemas/Address"
              description: Address for the contact person.
            gender:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Administrative Gender &ndash; the gender that the contact person is
                considered to have for administration and record keeping
                purposes.
            organization:
              $ref: "#/components/schemas/Reference"
              description: Organization on behalf of which the contact is acting or for which
                the contact is working.
            period:
              $ref: "#/components/schemas/Period"
              description: The period during which this contact person or organization is
                valid to be contacted relating to this patient.
    Patient_Link:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            other:
              $ref: "#/components/schemas/Reference"
              description: The other patient resource that the link refers to.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of link between this patient resource and another patient
                resource.
          required:
            - other
            - type
    ResearchSubject:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers assigned to this research subject for a study.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of the subject.
            period:
              $ref: "#/components/schemas/Period"
              description: The dates the subject began and ended their participation in the
                study.
            study:
              $ref: "#/components/schemas/Reference"
              description: Reference to the study the subject is participating in.
            individual:
              $ref: "#/components/schemas/Reference"
              description: The record of the person or animal who is involved in the study.
            assignedArm:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the arm in the study the subject is expected to follow
                as part of this study.
            actualArm:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the arm in the study the subject actually followed as
                part of this study.
            consent:
              $ref: "#/components/schemas/Reference"
              description: A record of the patient's informed agreement to participate in the
                study.
          required:
            - status
            - study
            - individual
      example:
        resourceType: ResearchSubject
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        study:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        individual:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    RelatedPerson:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier for a person within a particular scope.
            active:
              type: boolean
              description: Whether this related person record is in active use.
            patient:
              $ref: "#/components/schemas/Reference"
              description: The patient this person is related to.
            relationship:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The nature of the relationship between a patient and the related
                  person.
            name:
              type: array
              items:
                $ref: "#/components/schemas/HumanName"
                description: A name associated with the person.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: A contact detail for the person, e.g. a telephone number or an
                  email address.
            gender:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Administrative Gender &ndash; the gender that the person is
                considered to have for administration and record keeping
                purposes.
            birthDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the related person was born.
            address:
              type: array
              items:
                $ref: "#/components/schemas/Address"
                description: Address where the related person can be contacted or visited.
            photo:
              type: array
              items:
                $ref: "#/components/schemas/Attachment"
                description: Image of the person.
            period:
              $ref: "#/components/schemas/Period"
              description: The period of time during which this relationship is or was active.
                If there are no dates defined, then the interval is unknown.
            communication:
              type: array
              items:
                $ref: "#/components/schemas/RelatedPerson_Communication"
                description: A language which may be used to communicate with about the
                  patient's health.
          required:
            - patient
      example:
        resourceType: RelatedPerson
        meta:
          tag:
            - code: ibm/minimal
        patient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    RelatedPerson_Communication:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            language:
              $ref: "#/components/schemas/CodeableConcept"
              description: The ISO&ndash;639&ndash;1 alpha 2 code in lower case for the
                language, optionally followed by a hyphen and the
                ISO&ndash;3166&ndash;1 alpha 2 code for the region in upper
                case; e.g. "en" for English, or "en&ndash;US" for American
                English versus "en&ndash;EN" for England English.
            preferred:
              type: boolean
              description: Indicates whether or not the patient prefers this language (over
                other languages he masters up a certain level).
          required:
            - language
    Person:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier for a person within a particular scope.
            name:
              type: array
              items:
                $ref: "#/components/schemas/HumanName"
                description: A name associated with the person.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: A contact detail for the person, e.g. a telephone number or an
                  email address.
            gender:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Administrative Gender.
            birthDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The birth date for the person.
            address:
              type: array
              items:
                $ref: "#/components/schemas/Address"
                description: One or more addresses for the person.
            photo:
              $ref: "#/components/schemas/Attachment"
              description: An image that can be displayed as a thumbnail of the person to
                enhance the identification of the individual.
            managingOrganization:
              $ref: "#/components/schemas/Reference"
              description: The organization that is the custodian of the person record.
            active:
              type: boolean
              description: Whether this person's record is in active use.
            link:
              type: array
              items:
                $ref: "#/components/schemas/Person_Link"
                description: Link to a resource that concerns the same actual person.
      example:
        resourceType: Person
        meta:
          tag:
            - code: ibm/minimal
    Person_Link:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            target:
              $ref: "#/components/schemas/Reference"
              description: The resource to which this actual person is associated.
            assurance:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Level of assurance that this link is associated with the target
                resource.
          required:
            - target
    SupplyDelivery:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier for the supply delivery event that is used to identify
                  it across multiple disparate systems.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A plan, proposal or order that is fulfilled in whole or in part by
                  this event.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A larger event of which this particular event is a component or
                  step.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code specifying the state of the dispense event.
            patient:
              $ref: "#/components/schemas/Reference"
              description: A link to a resource representing the person whom the delivered
                item is for.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: "Indicates the type of dispensing event that is performed. Examples
                include: Trial Fill, Completion of Trial, Partial Fill,
                Emergency Fill, Samples, etc."
            suppliedItem:
              $ref: "#/components/schemas/SupplyDelivery_SuppliedItem"
              description: The item that is being delivered or has been supplied.
            occurrenceDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date or time(s) the activity occurred.
            occurrencePeriod:
              $ref: "#/components/schemas/Period"
              description: The date or time(s) the activity occurred.
            occurrenceTiming:
              $ref: "#/components/schemas/Timing"
              description: The date or time(s) the activity occurred.
            supplier:
              $ref: "#/components/schemas/Reference"
              description: The individual responsible for dispensing the medication, supplier
                or device.
            destination:
              $ref: "#/components/schemas/Reference"
              description: Identification of the facility/location where the Supply was
                shipped to, as part of the dispense event.
            receiver:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Identifies the person who picked up the Supply.
      example:
        resourceType: SupplyDelivery
        meta:
          tag:
            - code: ibm/minimal
    SupplyDelivery_SuppliedItem:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The amount of supply that has been dispensed. Includes unit of
                measure.
            itemCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the medication, substance or device being dispensed.
                This is either a link to a resource representing the details of
                the item or a code that identifies the item from a known list.
            itemReference:
              $ref: "#/components/schemas/Reference"
              description: Identifies the medication, substance or device being dispensed.
                This is either a link to a resource representing the details of
                the item or a code that identifies the item from a known list.
    PaymentNotice:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this payment notice.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            request:
              $ref: "#/components/schemas/Reference"
              description: Reference of resource for which payment is being made.
            response:
              $ref: "#/components/schemas/Reference"
              description: Reference of response to resource for which payment is being made.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date when this resource was created.
            provider:
              $ref: "#/components/schemas/Reference"
              description: The practitioner who is responsible for the services rendered to
                the patient.
            payment:
              $ref: "#/components/schemas/Reference"
              description: A reference to the payment which is the subject of this notice.
            paymentDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date when the above payment action occurred.
            payee:
              $ref: "#/components/schemas/Reference"
              description: The party who will receive or has received payment that is the
                subject of this notification.
            recipient:
              $ref: "#/components/schemas/Reference"
              description: The party who is notified of the payment status.
            amount:
              $ref: "#/components/schemas/Money"
              description: The amount sent to the payee.
            paymentStatus:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code indicating whether payment has been sent or cleared.
          required:
            - status
            - created
            - payment
            - recipient
            - amount
      example:
        resourceType: PaymentNotice
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _created:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        payment:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        recipient:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        amount:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    PaymentReconciliation:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A unique identifier assigned to this payment reconciliation.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the resource instance.
            period:
              $ref: "#/components/schemas/Period"
              description: The period of time for which payments have been gathered into this
                bulk payment for settlement.
            created:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date when the resource was created.
            paymentIssuer:
              $ref: "#/components/schemas/Reference"
              description: The party who generated the payment.
            request:
              $ref: "#/components/schemas/Reference"
              description: Original request resource reference.
            requestor:
              $ref: "#/components/schemas/Reference"
              description: The practitioner who is responsible for the services rendered to
                the patient.
            outcome:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The outcome of a request for a reconciliation.
            disposition:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A human readable description of the status of the request for the
                reconciliation.
            paymentDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date of payment as indicated on the financial instrument.
            paymentAmount:
              $ref: "#/components/schemas/Money"
              description: Total payment amount as indicated on the financial instrument.
            paymentIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: Issuer's unique identifier for the payment instrument.
            detail:
              type: array
              items:
                $ref: "#/components/schemas/PaymentReconciliation_Detail"
                description: Distribution of the payment amount for a previously acknowledged
                  payable.
            formCode:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code for the form to be used for printing the content.
            processNote:
              type: array
              items:
                $ref: "#/components/schemas/PaymentReconciliation_ProcessNote"
                description: A note that describes or explains the processing in a human
                  readable form.
          required:
            - status
            - created
            - paymentDate
            - paymentAmount
      example:
        resourceType: PaymentReconciliation
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _created:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _paymentDate:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        paymentAmount:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    PaymentReconciliation_Detail:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Unique identifier for the current payment item for the referenced
                payable.
            predecessor:
              $ref: "#/components/schemas/Identifier"
              description: Unique identifier for the prior payment item for the referenced
                payable.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Code to indicate the nature of the payment.
            request:
              $ref: "#/components/schemas/Reference"
              description: A resource, such as a Claim, the evaluation of which could lead to
                payment.
            submitter:
              $ref: "#/components/schemas/Reference"
              description: The party which submitted the claim or financial transaction.
            response:
              $ref: "#/components/schemas/Reference"
              description: A resource, such as a ClaimResponse, which contains a commitment to
                payment.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date from the response resource containing a commitment to pay.
            responsible:
              $ref: "#/components/schemas/Reference"
              description: A reference to the individual who is responsible for inquiries
                regarding the response and its payment.
            payee:
              $ref: "#/components/schemas/Reference"
              description: The party which is receiving the payment.
            amount:
              $ref: "#/components/schemas/Money"
              description: The monetary amount allocated from the total payment to the
                payable.
          required:
            - type
    PaymentReconciliation_ProcessNote:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The business purpose of the note text.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The explanation or description associated with the processing.
    PlanDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this plan definition when
                it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this plan definition is (or
                will be) published. This URL can be the target of a canonical
                reference. It SHALL remain the same when the plan definition is
                stored on different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this plan definition
                  when it is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the plan
                definition when it is referenced in a specification, model,
                design or instance. This is an arbitrary value managed by the
                plan definition author and is not expected to be globally
                unique. For example, it might be a timestamp (e.g. yyyymmdd) if
                a managed version is not available. There is also no expectation
                that versions can be placed in a lexicographical sequence. To
                provide a version consistent with the Decision Support Service
                specification, use the format Major.Minor.Revision (e.g. 1.0.0).
                For more information on versioning knowledge assets, refer to
                the Decision Support Service specification. Note that a version
                is required for non&ndash;experimental active artifacts.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the plan definition. This name
                should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the plan
                definition.
            subtitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An explanatory or alternate title for the plan definition giving
                additional information about its content.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A high&ndash;level category for the plan definition that
                distinguishes the kinds of systems that would be interested in
                the plan definition.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this plan definition. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this plan definition is authored
                for testing purposes (or education/evaluation/marketing) and is
                not intended to be used for genuine usage.
            subjectCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code, group definition, or canonical reference that describes  or
                identifies the intended subject of the plan definition.
                Canonical references are allowed to support the definition of
                protocols for drug and substance quality specifications, and is
                allowed to reference a MedicinalProductDefinition,
                SubstanceDefinition, AdministrableProductDefinition,
                ManufacturedItemDefinition, or PackagedProductDefinition
                resource.
            subjectReference:
              $ref: "#/components/schemas/Reference"
              description: A code, group definition, or canonical reference that describes  or
                identifies the intended subject of the plan definition.
                Canonical references are allowed to support the definition of
                protocols for drug and substance quality specifications, and is
                allowed to reference a MedicinalProductDefinition,
                SubstanceDefinition, AdministrableProductDefinition,
                ManufacturedItemDefinition, or PackagedProductDefinition
                resource.
            subjectCanonical:
              type: string
              pattern: \\S*
              description: A code, group definition, or canonical reference that describes  or
                identifies the intended subject of the plan definition.
                Canonical references are allowed to support the definition of
                protocols for drug and substance quality specifications, and is
                allowed to reference a MedicinalProductDefinition,
                SubstanceDefinition, AdministrableProductDefinition,
                ManufacturedItemDefinition, or PackagedProductDefinition
                resource.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the plan definition was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                plan definition changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the plan
                definition.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the plan definition
                from a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate plan
                  definition instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the plan definition is
                  intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this plan definition is needed and why it has
                been designed as it has.
            usage:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A detailed description of how the plan definition is used from a
                clinical perspective.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the plan definition and/or its
                contents. Copyright statements are generally legal restrictions
                on the use and publishing of the plan definition.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was approved by the
                publisher. Approval happens once when the content is officially
                approved for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was last reviewed. Review
                happens periodically after approval but does not change the
                original approval date.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the plan definition content was or is
                planned to be in active use.
            topic:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Descriptive topics related to the content of the plan definition.
                  Topics provide a high&ndash;level categorization of the
                  definition that can be useful for filtering and searching.
            author:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual or organization primarily involved in the creation
                  and maintenance of the content.
            editor:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for internal
                  coherence of the content.
            reviewer:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for review of
                  some aspect of the content.
            endorser:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization responsible for officially endorsing
                  the content for use in some setting.
            relatedArtifact:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Related artifacts such as additional documentation, justification,
                  or bibliographic references.
            library:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A reference to a Library resource containing any formal logic used
                  by the plan definition.
            goal:
              type: array
              items:
                $ref: "#/components/schemas/PlanDefinition_Goal"
                description: A goal describes an expected outcome that activities within the
                  plan are intended to achieve. For example, weight loss,
                  restoring an activity of daily living, obtaining herd immunity
                  via immunization, meeting a process improvement objective,
                  meeting the acceptance criteria for a test as specified by a
                  quality specification, etc.
            action:
              type: array
              items:
                $ref: "#/components/schemas/PlanDefinition_Action"
                description: An action or group of actions to be taken as part of the plan. For
                  example, in clinical care, an action would be to prescribe a
                  particular indicated medication, or perform a particular test
                  as appropriate. In pharmaceutical quality, an action would be
                  the test that needs to be performed on a drug product as
                  defined in the quality specification.
          required:
            - status
      example:
        resourceType: PlanDefinition
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    PlanDefinition_Action:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            prefix:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A user&ndash;visible prefix for the action.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The textual description of the action displayed to a user. For
                example, when the action is a test to be performed, the title
                would be the title of the test such as Assay by HPLC.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A brief description of the action used to provide a summary to
                display to the user.
            textEquivalent:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A text equivalent of the action to be performed. This provides a
                human&ndash;interpretable description of the action when the
                definition is consumed by a system that might not be capable of
                interpreting it dynamically.
            priority:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how quickly the action should be addressed with respect
                to other actions.
            code:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A code that provides a meaning, grouping, or classification for the
                  action or action group. For example, a section may have a
                  LOINC code for the section of a documentation template. In
                  pharmaceutical quality, an action (Test) such as pH could be
                  classified as a physical property.
            reason:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A description of why this action is necessary or appropriate.
            documentation:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Didactic or other informational resources associated with the
                  action that can be provided to the CDS recipient. Information
                  resources can include inline text commentary and links to web
                  resources.
            goalId:
              type: array
              items:
                type: string
                pattern: "[A-Za-z0-9\\-\\.]{1,64}"
                description: Identifies goals that this action supports. The reference must be
                  to a goal element defined within this plan definition. In
                  pharmaceutical quality, a goal represents acceptance criteria
                  (Goal) for a given action (Test), so the goalId would be the
                  unique id of a defined goal element establishing the
                  acceptance criteria for the action.
            subjectCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code, group definition, or canonical reference that describes the
                intended subject of the action and its children, if any.
                Canonical references are allowed to support the definition of
                protocols for drug and substance quality specifications, and is
                allowed to reference a MedicinalProductDefinition,
                SubstanceDefinition, AdministrableProductDefinition,
                ManufacturedItemDefinition, or PackagedProductDefinition
                resource.
            subjectReference:
              $ref: "#/components/schemas/Reference"
              description: A code, group definition, or canonical reference that describes the
                intended subject of the action and its children, if any.
                Canonical references are allowed to support the definition of
                protocols for drug and substance quality specifications, and is
                allowed to reference a MedicinalProductDefinition,
                SubstanceDefinition, AdministrableProductDefinition,
                ManufacturedItemDefinition, or PackagedProductDefinition
                resource.
            subjectCanonical:
              type: string
              pattern: \\S*
              description: A code, group definition, or canonical reference that describes the
                intended subject of the action and its children, if any.
                Canonical references are allowed to support the definition of
                protocols for drug and substance quality specifications, and is
                allowed to reference a MedicinalProductDefinition,
                SubstanceDefinition, AdministrableProductDefinition,
                ManufacturedItemDefinition, or PackagedProductDefinition
                resource.
            trigger:
              type: array
              items:
                $ref: "#/components/schemas/TriggerDefinition"
                description: A description of when the action should be triggered.
            condition:
              type: array
              items:
                $ref: "#/components/schemas/PlanDefinition_Action_Condition"
                description: An expression that describes applicability criteria or start/stop
                  conditions for the action.
            input:
              type: array
              items:
                $ref: "#/components/schemas/DataRequirement"
                description: Defines input data requirements for the action.
            output:
              type: array
              items:
                $ref: "#/components/schemas/DataRequirement"
                description: Defines the outputs of the action, if any.
            relatedAction:
              type: array
              items:
                $ref: "#/components/schemas/PlanDefinition_Action_RelatedAction"
                description: A relationship to another action such as "before" or "30&ndash;60
                  minutes after start of".
            timingDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: An optional value describing when the action should be performed.
            timingAge:
              $ref: "#/components/schemas/Age"
              description: An optional value describing when the action should be performed.
            timingPeriod:
              $ref: "#/components/schemas/Period"
              description: An optional value describing when the action should be performed.
            timingDuration:
              $ref: "#/components/schemas/Duration"
              description: An optional value describing when the action should be performed.
            timingRange:
              $ref: "#/components/schemas/Range"
              description: An optional value describing when the action should be performed.
            timingTiming:
              $ref: "#/components/schemas/Timing"
              description: An optional value describing when the action should be performed.
            participant:
              type: array
              items:
                $ref: "#/components/schemas/PlanDefinition_Action_Participant"
                description: Indicates who should participate in performing the action
                  described.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of action to perform (create, update, remove).
            groupingBehavior:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines the grouping behavior for the action and its children.
            selectionBehavior:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines the selection behavior for the action and its children.
            requiredBehavior:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines the required behavior for the action.
            precheckBehavior:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines whether the action should usually be preselected.
            cardinalityBehavior:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines whether the action can be selected multiple times.
            definitionCanonical:
              type: string
              pattern: \\S*
              description: A reference to an ActivityDefinition that describes the action to
                be taken in detail, or a PlanDefinition that describes a series
                of actions to be taken.
            definitionUri:
              type: string
              pattern: \\S*
              description: A reference to an ActivityDefinition that describes the action to
                be taken in detail, or a PlanDefinition that describes a series
                of actions to be taken.
            transform:
              type: string
              pattern: \\S*
              description: A reference to a StructureMap resource that defines a transform
                that can be executed to produce the intent resource using the
                ActivityDefinition instance as the input.
            dynamicValue:
              type: array
              items:
                $ref: "#/components/schemas/PlanDefinition_Action_DynamicValue"
                description: Customizations that should be applied to the statically defined
                  resource. For example, if the dosage of a medication must be
                  computed based on the patient's weight, a customization would
                  be used to specify an expression that calculated the weight,
                  and the path on the resource that would contain the result.
            action:
              type: array
              items:
                $ref: "#/components/schemas/PlanDefinition_Action"
                description: Sub actions that are contained within the action. The behavior of
                  this action determines the functionality of the
                  sub&ndash;actions. For example, a selection behavior of
                  at&ndash;most&ndash;one indicates that of the
                  sub&ndash;actions, at most one may be chosen as part of
                  realizing the action definition.
    PlanDefinition_Action_Condition:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            kind:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The kind of condition.
            expression:
              $ref: "#/components/schemas/Expression"
              description: An expression that returns true or false, indicating whether the
                condition is satisfied.
          required:
            - kind
    PlanDefinition_Action_DynamicValue:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            path:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The path to the element to be customized. This is the path on the
                resource that will hold the result of the calculation defined by
                the expression. The specified path SHALL be a FHIRPath
                resolveable on the specified target type of the
                ActivityDefinition, and SHALL consist only of identifiers,
                constant indexers, and a restricted subset of functions. The
                path is allowed to contain qualifiers (.) to traverse
                sub&ndash;elements, as well as indexers ([x]) to traverse
                multiple&ndash;cardinality sub&ndash;elements (see the [Simple
                FHIRPath Profile](fhirpath.html#simple) for full details).
            expression:
              $ref: "#/components/schemas/Expression"
              description: An expression specifying the value of the customized element.
    PlanDefinition_Action_Participant:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of participant in the action.
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: The role the participant should play in performing the described
                action.
          required:
            - type
    PlanDefinition_Action_RelatedAction:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            actionId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The element id of the related action.
            relationship:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The relationship of this action to the related action.
            offsetDuration:
              $ref: "#/components/schemas/Duration"
              description: A duration or range of durations to apply to the relationship. For
                example, 30&ndash;60 minutes before.
            offsetRange:
              $ref: "#/components/schemas/Range"
              description: A duration or range of durations to apply to the relationship. For
                example, 30&ndash;60 minutes before.
          required:
            - actionId
            - relationship
    PlanDefinition_Goal:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            category:
              $ref: "#/components/schemas/CodeableConcept"
              description: Indicates a category the goal falls within.
            description:
              $ref: "#/components/schemas/CodeableConcept"
              description: Human&ndash;readable and/or coded description of a specific desired
                objective of care, such as "control blood pressure" or
                "negotiate an obstacle course" or "dance with child at wedding".
            priority:
              $ref: "#/components/schemas/CodeableConcept"
              description: Identifies the expected level of importance associated with
                reaching/sustaining the defined goal.
            start:
              $ref: "#/components/schemas/CodeableConcept"
              description: The event after which the goal should begin being pursued.
            addresses:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Identifies problems, conditions, issues, or concerns the goal is
                  intended to address.
            documentation:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Didactic or other informational resources associated with the goal
                  that provide further supporting information about the goal.
                  Information resources can include inline text commentary and
                  links to web resources.
            target:
              type: array
              items:
                $ref: "#/components/schemas/PlanDefinition_Goal_Target"
                description: Indicates what should be done and within what timeframe.
          required:
            - description
    PlanDefinition_Goal_Target:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            measure:
              $ref: "#/components/schemas/CodeableConcept"
              description: The parameter whose value is to be tracked, e.g. body weight, blood
                pressure, or hemoglobin A1c level.
            detailQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The target value of the measure to be achieved to signify
                fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case
                of pharmaceutical quality &ndash; NMT 0.6%, Clear solution, etc.
                Either the high or low or both values of the range can be
                specified. When a low value is missing, it indicates that the
                goal is achieved at any value at or below the high value.
                Similarly, if the high value is missing, it indicates that the
                goal is achieved at any value at or above the low value.
            detailRange:
              $ref: "#/components/schemas/Range"
              description: The target value of the measure to be achieved to signify
                fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case
                of pharmaceutical quality &ndash; NMT 0.6%, Clear solution, etc.
                Either the high or low or both values of the range can be
                specified. When a low value is missing, it indicates that the
                goal is achieved at any value at or below the high value.
                Similarly, if the high value is missing, it indicates that the
                goal is achieved at any value at or above the low value.
            detailCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The target value of the measure to be achieved to signify
                fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case
                of pharmaceutical quality &ndash; NMT 0.6%, Clear solution, etc.
                Either the high or low or both values of the range can be
                specified. When a low value is missing, it indicates that the
                goal is achieved at any value at or below the high value.
                Similarly, if the high value is missing, it indicates that the
                goal is achieved at any value at or above the low value.
            due:
              $ref: "#/components/schemas/Duration"
              description: Indicates the timeframe after the start of the goal in which the
                goal should be met.
    Practitioner:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: An identifier that applies to this person in this role.
            active:
              type: boolean
              description: Whether this practitioner's record is in active use.
            name:
              type: array
              items:
                $ref: "#/components/schemas/HumanName"
                description: The name(s) associated with the practitioner.
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: A contact detail for the practitioner, e.g. a telephone number or
                  an email address.
            address:
              type: array
              items:
                $ref: "#/components/schemas/Address"
                description: Address(es) of the practitioner that are not role specific
                  (typically home address). \rWork addresses are not typically
                  entered in this property as they are usually role dependent.
            gender:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Administrative Gender &ndash; the gender that the person is
                considered to have for administration and record keeping
                purposes.
            birthDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date of birth for the practitioner.
            photo:
              type: array
              items:
                $ref: "#/components/schemas/Attachment"
                description: Image of the person.
            qualification:
              type: array
              items:
                $ref: "#/components/schemas/Practitioner_Qualification"
                description: The official certifications, training, and licenses that authorize
                  or otherwise pertain to the provision of care by the
                  practitioner.  For example, a medical license issued by a
                  medical board authorizing the practitioner to practice
                  medicine within a certian locality.
            communication:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A language the practitioner can use in patient communication.
      example:
        resourceType: Practitioner
        meta:
          tag:
            - code: ibm/minimal
    Practitioner_Qualification:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: An identifier that applies to this person's qualification in this
                  role.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: Coded representation of the qualification.
            period:
              $ref: "#/components/schemas/Period"
              description: Period during which the qualification is valid.
            issuer:
              $ref: "#/components/schemas/Reference"
              description: Organization that regulates and issues the qualification.
          required:
            - code
    ResearchStudy:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifiers assigned to this research study by the sponsor or other
                  systems.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive user&ndash;friendly label for the study.
            protocol:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The set of steps expected to be performed as part of the execution
                  of the study.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A larger research study of which this particular study is a
                  component or step.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of the study.
            primaryPurposeType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of study based upon the intent of the study's activities.
                A classification of the intent of the study.
            phase:
              $ref: "#/components/schemas/CodeableConcept"
              description: The stage in the progression of a therapy from initial experimental
                use in humans in clinical trials to post&ndash;market
                evaluation.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Codes categorizing the type of study such as investigational vs.
                  observational, type of blinding, type of randomization, safety
                  vs. efficacy, etc.
            focus:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The medication(s), food(s), therapy(ies), device(s) or other
                  concerns or interventions that the study is seeking to gain
                  more information about.
            condition:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The condition that is the focus of the study.  For example, In a
                  study to examine risk factors for Lupus, might have as an
                  inclusion criterion "healthy volunteer", but the target
                  condition code would be a Lupus SNOMED code.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in learning more about or engaging
                  with the study.
            relatedArtifact:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Citations, references and other related documents.
            keyword:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Key terms to aid in searching for or filtering the study.
            location:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Indicates a country, state or other region where the study is
                  taking place.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A full description of how the study is being conducted.
            enrollment:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Reference to a Group that defines the criteria for and quantity of
                  subjects participating in the study.  E.g. " 200 female
                  Europeans between the ages of 20 and 45 with early onset
                  diabetes".
            period:
              $ref: "#/components/schemas/Period"
              description: Identifies the start date and the expected (or actual, depending on
                status) end date for the study.
            sponsor:
              $ref: "#/components/schemas/Reference"
              description: An organization that initiates the investigation and is legally
                responsible for the study.
            principalInvestigator:
              $ref: "#/components/schemas/Reference"
              description: A researcher in a study who oversees multiple aspects of the study,
                such as concept development, protocol writing, protocol
                submission for IRB approval, participant recruitment, informed
                consent, data collection, analysis, interpretation and
                presentation.
            site:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A facility in which study activities are conducted.
            reasonStopped:
              $ref: "#/components/schemas/CodeableConcept"
              description: A description and/or code explaining the premature termination of
                the study.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Comments made about the study by the performer, subject or other
                  participants.
            arm:
              type: array
              items:
                $ref: "#/components/schemas/ResearchStudy_Arm"
                description: Describes an expected sequence of events for one of the
                  participants of a study.  E.g. Exposure to drug A,
                  wash&ndash;out, exposure to drug B, wash&ndash;out,
                  follow&ndash;up.
            objective:
              type: array
              items:
                $ref: "#/components/schemas/ResearchStudy_Objective"
                description: A goal that the study is aiming to achieve in terms of a scientific
                  question to be answered by the analysis of data collected
                  during the study.
          required:
            - status
      example:
        resourceType: ResearchStudy
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ResearchStudy_Arm:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Unique, human&ndash;readable label for this arm of the study.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Categorization of study arm, e.g. experimental, active comparator,
                placebo comparater.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A succinct description of the path through the study that would be
                followed by a subject adhering to this arm.
          required:
            - name
    ResearchStudy_Objective:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Unique, human&ndash;readable label for this objective of the study.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of study objective.
    PractitionerRole:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business Identifiers that are specific to a role/location.
            active:
              type: boolean
              description: Whether this practitioner role record is in active use.
            period:
              $ref: "#/components/schemas/Period"
              description: The period during which the person is authorized to act as a
                practitioner in these role(s) for the organization.
            practitioner:
              $ref: "#/components/schemas/Reference"
              description: Practitioner that is able to provide the defined services for the
                organization.
            organization:
              $ref: "#/components/schemas/Reference"
              description: The organization where the Practitioner performs the roles
                associated.
            code:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Roles which this practitioner is authorized to perform for the
                  organization.
            specialty:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Specific specialty of the practitioner.
            location:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The location(s) at which this practitioner provides care.
            healthcareService:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The list of healthcare services that this worker provides for this
                  role's Organization/Location(s).
            telecom:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: Contact details that are specific to the role/location/service.
            availableTime:
              type: array
              items:
                $ref: "#/components/schemas/PractitionerRole_AvailableTime"
                description: A collection of times the practitioner is available or performing
                  this role at the location and/or healthcareservice.
            notAvailable:
              type: array
              items:
                $ref: "#/components/schemas/PractitionerRole_NotAvailable"
                description: The practitioner is not available or performing this role during
                  this period of time due to the provided reason.
            availabilityExceptions:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of site availability exceptions, e.g. public holiday
                availability. Succinctly describing all possible exceptions to
                normal site availability as details in the available Times and
                not available Times.
            endpoint:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Technical endpoints providing access to services operated for the
                  practitioner with this role.
      example:
        resourceType: PractitionerRole
        meta:
          tag:
            - code: ibm/minimal
    PractitionerRole_AvailableTime:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            daysOfWeek:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Indicates which days of the week are available between the start
                  and end Times.
            allDay:
              type: boolean
              description: Is this always available? (hence times are irrelevant) e.g. 24 hour
                service.
            availableStartTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: "The opening time of day. Note: If the AllDay flag is set, then
                this time is ignored."
            availableEndTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: "The closing time of day. Note: If the AllDay flag is set, then
                this time is ignored."
    PractitionerRole_NotAvailable:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The reason that can be presented to the user as to why this time is
                not available.
            during:
              $ref: "#/components/schemas/Period"
              description: Service is not available (seasonally or for a public holiday) from
                this date.
          required:
            - description
    Questionnaire:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this questionnaire when it
                is referenced in a specification, model, design or an instance;
                also called its canonical identifier. This SHOULD be globally
                unique and SHOULD be a literal address at which at which an
                authoritative instance of this questionnaire is (or will be)
                published. This URL can be the target of a canonical reference.
                It SHALL remain the same when the questionnaire is stored on
                different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this questionnaire
                  when it is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                questionnaire when it is referenced in a specification, model,
                design or instance. This is an arbitrary value managed by the
                questionnaire author and is not expected to be globally unique.
                For example, it might be a timestamp (e.g. yyyymmdd) if a
                managed version is not available. There is also no expectation
                that versions can be placed in a lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the questionnaire. This name
                should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the
                questionnaire.
            derivedFrom:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The URL of a Questionnaire that this Questionnaire is based on.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this questionnaire. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this questionnaire is authored for
                testing purposes (or education/evaluation/marketing) and is not
                intended to be used for genuine usage.
            subjectType:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: The types of subjects that can be the subject of responses created
                  for the questionnaire.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the questionnaire was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                questionnaire changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                questionnaire.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the questionnaire from
                a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate
                  questionnaire instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the questionnaire is intended
                  to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this questionnaire is needed and why it has been
                designed as it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the questionnaire and/or its
                contents. Copyright statements are generally legal restrictions
                on the use and publishing of the questionnaire.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was approved by the
                publisher. Approval happens once when the content is officially
                approved for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was last reviewed. Review
                happens periodically after approval but does not change the
                original approval date.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the questionnaire content was or is planned
                to be in active use.
            code:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: An identifier for this question or group of questions in a
                  particular terminology such as LOINC.
            item:
              type: array
              items:
                $ref: "#/components/schemas/Questionnaire_Item"
                description: A particular question, question grouping or display text that is
                  part of the questionnaire.
          required:
            - status
      example:
        resourceType: Questionnaire
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Questionnaire_Item:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            linkId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An identifier that is unique within the Questionnaire allowing
                linkage to the equivalent item in a QuestionnaireResponse
                resource.
            definition:
              type: string
              pattern: \\S*
              description: >-
                This element is a URI that refers to an
                [ElementDefinition](elementdefinition.html) that provides
                information about this item, including information that might
                otherwise be included in the instance of the Questionnaire
                resource. A detailed description of the construction of the URI
                is shown in Comments, below. If this element is present then the
                following element values MAY be derived from the Element
                Definition if the corresponding elements of this Questionnaire
                resource instance have no value:


                * code (ElementDefinition.code) 

                * type (ElementDefinition.type) 

                * required (ElementDefinition.min) 

                * repeats (ElementDefinition.max) 

                * maxLength (ElementDefinition.maxLength) 

                * answerValueSet (ElementDefinition.binding)

                * options (ElementDefinition.binding).
            code:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: A terminology code that corresponds to this group or question (e.g.
                  a code from LOINC, which defines many questions and answers).
            prefix:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short label for a particular group, question or set of display
                text within the questionnaire used for reference by the
                individual completing the questionnaire.
            text:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of a section, the text of a question or text content for a
                display item.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of questionnaire item this is &ndash; whether text for
                display, a grouping of other items or a particular type of data
                to be captured (string, integer, coded choice, etc.).
            enableWhen:
              type: array
              items:
                $ref: "#/components/schemas/Questionnaire_Item_EnableWhen"
                description: A constraint indicating that this item should only be enabled
                  (displayed/allow answers to be captured) when the specified
                  condition is true.
            enableBehavior:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Controls how multiple enableWhen values are interpreted
                &ndash;  whether all or any must be true.
            required:
              type: boolean
              description: An indication, if true, that the item must be present in a
                "completed" QuestionnaireResponse.  If false, the item may be
                skipped when answering the questionnaire.
            repeats:
              type: boolean
              description: An indication, if true, that the item may occur multiple times in
                the response, collecting multiple answers for questions or
                multiple sets of answers for groups.
            readOnly:
              type: boolean
              description: An indication, when true, that the value cannot be changed by a
                human respondent to the Questionnaire.
            maxLength:
              type: integer
              format: int32
              description: The maximum number of characters that are permitted in the answer
                to be considered a "valid" QuestionnaireResponse.
            answerValueSet:
              type: string
              pattern: \\S*
              description: A reference to a value set containing a list of codes representing
                permitted answers for a "choice" or "open&ndash;choice"
                question.
            answerOption:
              type: array
              items:
                $ref: "#/components/schemas/Questionnaire_Item_AnswerOption"
                description: One of the permitted answers for a "choice" or "open&ndash;choice"
                  question.
            initial:
              type: array
              items:
                $ref: "#/components/schemas/Questionnaire_Item_Initial"
                description: One or more values that should be pre&ndash;populated in the answer
                  when initially rendering the questionnaire for user input.
            item:
              type: array
              items:
                $ref: "#/components/schemas/Questionnaire_Item"
                description: Text, questions and other groups to be nested beneath a question or
                  group.
          required:
            - linkId
            - type
    Questionnaire_Item_AnswerOption:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            valueInteger:
              type: integer
              format: int32
              description: A potential answer that's allowed as the answer to this question.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: A potential answer that's allowed as the answer to this question.
            valueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: A potential answer that's allowed as the answer to this question.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A potential answer that's allowed as the answer to this question.
            valueCoding:
              $ref: "#/components/schemas/Coding"
              description: A potential answer that's allowed as the answer to this question.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: A potential answer that's allowed as the answer to this question.
            initialSelected:
              type: boolean
              description: Indicates whether the answer value is selected when the list of
                possible answers is initially shown.
    Questionnaire_Item_EnableWhen:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            question:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The linkId for the question whose answer (or lack of answer)
                governs whether this item is enabled.
            operator:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Specifies the criteria by which the question is enabled.
            answerBoolean:
              type: boolean
              description: A value that the referenced question is tested using the specified
                operator in order for the item to be enabled.
            answerDecimal:
              type: number
              description: A value that the referenced question is tested using the specified
                operator in order for the item to be enabled.
            answerInteger:
              type: integer
              format: int32
              description: A value that the referenced question is tested using the specified
                operator in order for the item to be enabled.
            answerDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: A value that the referenced question is tested using the specified
                operator in order for the item to be enabled.
            answerDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: A value that the referenced question is tested using the specified
                operator in order for the item to be enabled.
            answerTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: A value that the referenced question is tested using the specified
                operator in order for the item to be enabled.
            answerString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A value that the referenced question is tested using the specified
                operator in order for the item to be enabled.
            answerCoding:
              $ref: "#/components/schemas/Coding"
              description: A value that the referenced question is tested using the specified
                operator in order for the item to be enabled.
            answerQuantity:
              $ref: "#/components/schemas/Quantity"
              description: A value that the referenced question is tested using the specified
                operator in order for the item to be enabled.
            answerReference:
              $ref: "#/components/schemas/Reference"
              description: A value that the referenced question is tested using the specified
                operator in order for the item to be enabled.
          required:
            - question
            - operator
    Questionnaire_Item_Initial:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            valueBoolean:
              type: boolean
              description: The actual value to for an initial answer.
            valueDecimal:
              type: number
              description: The actual value to for an initial answer.
            valueInteger:
              type: integer
              format: int32
              description: The actual value to for an initial answer.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The actual value to for an initial answer.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The actual value to for an initial answer.
            valueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: The actual value to for an initial answer.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The actual value to for an initial answer.
            valueUri:
              type: string
              pattern: \\S*
              description: The actual value to for an initial answer.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: The actual value to for an initial answer.
            valueCoding:
              $ref: "#/components/schemas/Coding"
              description: The actual value to for an initial answer.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The actual value to for an initial answer.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: The actual value to for an initial answer.
    RegulatedAuthorization:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifier for the authorization, typically assigned by
                  the authorizing body.
            subject:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The product type, treatment, facility or activity that is being
                  authorized.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Overall type of this authorization, for example drug marketing
                approval, orphan drug designation.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: General textual supporting information.
            region:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The territory (e.g., country, jurisdiction etc.) in which the
                  authorization has been granted.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: The status that is authorised e.g. approved. Intermediate states
                and actions can be tracked with cases and applications.
            statusDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date at which the current status was assigned.
            validityPeriod:
              $ref: "#/components/schemas/Period"
              description: The time period in which the regulatory approval, clearance or
                licencing is in effect. As an example, a Marketing Authorization
                includes the date of authorization and/or an expiration date.
            indication:
              $ref: "#/components/schemas/CodeableReference"
              description: Condition for which the use of the regulated product applies.
            intendedUse:
              $ref: "#/components/schemas/CodeableConcept"
              description: The intended use of the product, e.g. prevention, treatment,
                diagnosis.
            basis:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The legal or regulatory framework against which this authorization
                  is granted, or other reasons for it.
            holder:
              $ref: "#/components/schemas/Reference"
              description: The organization that has been granted this authorization, by some
                authoritative body (the 'regulator').
            regulator:
              $ref: "#/components/schemas/Reference"
              description: The regulatory authority or authorizing body granting the
                authorization. For example, European Medicines Agency (EMA),
                Food and Drug Administration (FDA), Health Canada (HC), etc.
            case:
              $ref: "#/components/schemas/RegulatedAuthorization_Case"
              description: "The case or regulatory procedure for granting or amending a
                regulated authorization. An authorization is granted in response
                to submissions/applications by those seeking authorization. A
                case is the administrative process that deals with the
                application(s) that relate to this and assesses them. Note: This
                area is subject to ongoing review and the workgroup is seeking
                implementer feedback on its use (see link at bottom of page)."
      example:
        resourceType: RegulatedAuthorization
        meta:
          tag:
            - code: ibm/minimal
    RegulatedAuthorization_Case:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Identifier by which this case can be referenced.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The defining type of case.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: The status associated with the case.
            datePeriod:
              $ref: "#/components/schemas/Period"
              description: Relevant date for this case.
            dateDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Relevant date for this case.
            application:
              type: array
              items:
                $ref: "#/components/schemas/RegulatedAuthorization_Case"
                description: A regulatory submission from an organization to a regulator, as
                  part of an assessing case. Multiple applications may occur
                  over time, with more or different information to support or
                  modify the submission or the authorization. The applications
                  can be considered as steps within the longer running case or
                  procedure for this authorization process.
    ResearchDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this research definition
                when it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this research definition is
                (or will be) published. This URL can be the target of a
                canonical reference. It SHALL remain the same when the research
                definition is stored on different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this research
                  definition when it is represented in other formats, or
                  referenced in a specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                research definition when it is referenced in a specification,
                model, design or instance. This is an arbitrary value managed by
                the research definition author and is not expected to be
                globally unique. For example, it might be a timestamp (e.g.
                yyyymmdd) if a managed version is not available. There is also
                no expectation that versions can be placed in a lexicographical
                sequence. To provide a version consistent with the Decision
                Support Service specification, use the format
                Major.Minor.Revision (e.g. 1.0.0). For more information on
                versioning knowledge assets, refer to the Decision Support
                Service specification. Note that a version is required for
                non&ndash;experimental active artifacts.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the research definition. This
                name should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the research
                definition.
            shortTitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The short title provides an alternate title for use in informal
                descriptive contexts where the full, formal title is not
                necessary.
            subtitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An explanatory or alternate title for the ResearchDefinition giving
                additional information about its content.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this research definition. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this research definition is
                authored for testing purposes (or
                education/evaluation/marketing) and is not intended to be used
                for genuine usage.
            subjectCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The intended subjects for the ResearchDefinition. If this element
                is not provided, a Patient subject is assumed, but the subject
                of the ResearchDefinition can be anything.
            subjectReference:
              $ref: "#/components/schemas/Reference"
              description: The intended subjects for the ResearchDefinition. If this element
                is not provided, a Patient subject is assumed, but the subject
                of the ResearchDefinition can be anything.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the research definition was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                research definition changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                research definition.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the research definition
                from a consumer's perspective.
            comment:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: A human&ndash;readable string to clarify or explain concepts about
                  the resource.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate research
                  definition instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the research definition is
                  intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this research definition is needed and why it
                has been designed as it has.
            usage:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A detailed description, from a clinical perspective, of how the
                ResearchDefinition is used.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the research definition and/or
                its contents. Copyright statements are generally legal
                restrictions on the use and publishing of the research
                definition.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was approved by the
                publisher. Approval happens once when the content is officially
                approved for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was last reviewed. Review
                happens periodically after approval but does not change the
                original approval date.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the research definition content was or is
                planned to be in active use.
            topic:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Descriptive topics related to the content of the
                  ResearchDefinition. Topics provide a high&ndash;level
                  categorization grouping types of ResearchDefinitions that can
                  be useful for filtering and searching.
            author:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual or organization primarily involved in the creation
                  and maintenance of the content.
            editor:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for internal
                  coherence of the content.
            reviewer:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for review of
                  some aspect of the content.
            endorser:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization responsible for officially endorsing
                  the content for use in some setting.
            relatedArtifact:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Related artifacts such as additional documentation, justification,
                  or bibliographic references.
            library:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A reference to a Library resource containing the formal logic used
                  by the ResearchDefinition.
            population:
              $ref: "#/components/schemas/Reference"
              description: A reference to a ResearchElementDefinition resource that defines
                the population for the research.
            exposure:
              $ref: "#/components/schemas/Reference"
              description: A reference to a ResearchElementDefinition resource that defines
                the exposure for the research.
            exposureAlternative:
              $ref: "#/components/schemas/Reference"
              description: A reference to a ResearchElementDefinition resource that defines
                the exposureAlternative for the research.
            outcome:
              $ref: "#/components/schemas/Reference"
              description: A reference to a ResearchElementDefinition resomece that defines
                the outcome for the research.
          required:
            - status
            - population
      example:
        resourceType: ResearchDefinition
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        population:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ResearchElementDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this research element
                definition when it is referenced in a specification, model,
                design or an instance; also called its canonical identifier.
                This SHOULD be globally unique and SHOULD be a literal address
                at which at which an authoritative instance of this research
                element definition is (or will be) published. This URL can be
                the target of a canonical reference. It SHALL remain the same
                when the research element definition is stored on different
                servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this research element
                  definition when it is represented in other formats, or
                  referenced in a specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                research element definition when it is referenced in a
                specification, model, design or instance. This is an arbitrary
                value managed by the research element definition author and is
                not expected to be globally unique. For example, it might be a
                timestamp (e.g. yyyymmdd) if a managed version is not available.
                There is also no expectation that versions can be placed in a
                lexicographical sequence. To provide a version consistent with
                the Decision Support Service specification, use the format
                Major.Minor.Revision (e.g. 1.0.0). For more information on
                versioning knowledge assets, refer to the Decision Support
                Service specification. Note that a version is required for
                non&ndash;experimental active artifacts.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the research element
                definition. This name should be usable as an identifier for the
                module by machine processing applications such as code
                generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the research
                element definition.
            shortTitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The short title provides an alternate title for use in informal
                descriptive contexts where the full, formal title is not
                necessary.
            subtitle:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An explanatory or alternate title for the ResearchElementDefinition
                giving additional information about its content.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this research element definition. Enables tracking
                the life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this research element definition
                is authored for testing purposes (or
                education/evaluation/marketing) and is not intended to be used
                for genuine usage.
            subjectCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The intended subjects for the ResearchElementDefinition. If this
                element is not provided, a Patient subject is assumed, but the
                subject of the ResearchElementDefinition can be anything.
            subjectReference:
              $ref: "#/components/schemas/Reference"
              description: The intended subjects for the ResearchElementDefinition. If this
                element is not provided, a Patient subject is assumed, but the
                subject of the ResearchElementDefinition can be anything.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the research element
                definition was published. The date must change when the business
                version changes and it must change if the status code changes.
                In addition, it should change when the substantive content of
                the research element definition changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                research element definition.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the research element
                definition from a consumer's perspective.
            comment:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: A human&ndash;readable string to clarify or explain concepts about
                  the resource.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate research
                  element definition instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the research element
                  definition is intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this research element definition is needed and
                why it has been designed as it has.
            usage:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A detailed description, from a clinical perspective, of how the
                ResearchElementDefinition is used.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the research element definition
                and/or its contents. Copyright statements are generally legal
                restrictions on the use and publishing of the research element
                definition.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was approved by the
                publisher. Approval happens once when the content is officially
                approved for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the resource content was last reviewed. Review
                happens periodically after approval but does not change the
                original approval date.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the research element definition content was
                or is planned to be in active use.
            topic:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Descriptive topics related to the content of the
                  ResearchElementDefinition. Topics provide a high&ndash;level
                  categorization grouping types of ResearchElementDefinitions
                  that can be useful for filtering and searching.
            author:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individiual or organization primarily involved in the creation
                  and maintenance of the content.
            editor:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for internal
                  coherence of the content.
            reviewer:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization primarily responsible for review of
                  some aspect of the content.
            endorser:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: An individual or organization responsible for officially endorsing
                  the content for use in some setting.
            relatedArtifact:
              type: array
              items:
                $ref: "#/components/schemas/RelatedArtifact"
                description: Related artifacts such as additional documentation, justification,
                  or bibliographic references.
            library:
              type: array
              items:
                type: string
                pattern: \\S*
                description: A reference to a Library resource containing the formal logic used
                  by the ResearchElementDefinition.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of research element, a population, an exposure, or an
                outcome.
            variableType:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of the outcome (e.g. Dichotomous, Continuous, or
                Descriptive).
            characteristic:
              type: array
              items:
                $ref: "#/components/schemas/ResearchElementDefinition_Characteristic"
                description: A characteristic that defines the members of the research element.
                  Multiple characteristics are applied with "and" semantics.
              minItems: 1
          required:
            - status
            - type
            - characteristic
      example:
        resourceType: ResearchElementDefinition
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _type:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        characteristic:
          - definitionCodeableConcept:
              coding:
                - extension:
                    - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                      valueCode: unknown
    ResearchElementDefinition_Characteristic:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            definitionCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Define members of the research element using Codes (such as
                condition, medication, or observation), Expressions ( using an
                expression language such as FHIRPath or CQL) or DataRequirements
                (such as Diabetes diagnosis onset in the last year).
            definitionCanonical:
              type: string
              pattern: \\S*
              description: Define members of the research element using Codes (such as
                condition, medication, or observation), Expressions ( using an
                expression language such as FHIRPath or CQL) or DataRequirements
                (such as Diabetes diagnosis onset in the last year).
            usageContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: Use UsageContext to define the members of the population, such as
                  Age Ranges, Genders, Settings.
            exclude:
              type: boolean
              description: When true, members with this characteristic are excluded from the
                element.
            unitOfMeasure:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specifies the UCUM unit for the outcome.
            studyEffectiveDescription:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A narrative description of the time period the study covers.
            studyEffectiveDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Indicates what effective period the study covers.
            studyEffectivePeriod:
              $ref: "#/components/schemas/Period"
              description: Indicates what effective period the study covers.
            studyEffectiveDuration:
              $ref: "#/components/schemas/Duration"
              description: Indicates what effective period the study covers.
            studyEffectiveTiming:
              $ref: "#/components/schemas/Timing"
              description: Indicates what effective period the study covers.
            studyEffectiveTimeFromStart:
              $ref: "#/components/schemas/Duration"
              description: Indicates duration from the study initiation.
            studyEffectiveGroupMeasure:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how elements are aggregated within the study effective
                period.
            participantEffectiveDescription:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A narrative description of the time period the study covers.
            participantEffectiveDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Indicates what effective period the study covers.
            participantEffectivePeriod:
              $ref: "#/components/schemas/Period"
              description: Indicates what effective period the study covers.
            participantEffectiveDuration:
              $ref: "#/components/schemas/Duration"
              description: Indicates what effective period the study covers.
            participantEffectiveTiming:
              $ref: "#/components/schemas/Timing"
              description: Indicates what effective period the study covers.
            participantEffectiveTimeFromStart:
              $ref: "#/components/schemas/Duration"
              description: Indicates duration from the participant's study entry.
            participantEffectiveGroupMeasure:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how elements are aggregated within the study effective
                period.
    SearchParameter:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this search parameter when
                it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this search parameter is (or
                will be) published. This URL can be the target of a canonical
                reference. It SHALL remain the same when the search parameter is
                stored on different servers.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the search
                parameter when it is referenced in a specification, model,
                design or instance. This is an arbitrary value managed by the
                search parameter author and is not expected to be globally
                unique. For example, it might be a timestamp (e.g. yyyymmdd) if
                a managed version is not available. There is also no expectation
                that versions can be placed in a lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the search parameter. This name
                should be usable as an identifier for the module by machine
                processing applications such as code generation.
            derivedFrom:
              type: string
              pattern: \\S*
              description: Where this search parameter is originally defined. If a derivedFrom
                is provided, then the details in the search parameter must be
                consistent with the definition from which it is defined. i.e.
                the parameter should have the same meaning, and (usually) the
                functionality should be a proper subset of the underlying search
                parameter.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this search parameter. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this search parameter is authored
                for testing purposes (or education/evaluation/marketing) and is
                not intended to be used for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the search parameter was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                search parameter changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                search parameter.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: And how it used.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate search
                  parameter instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the search parameter is
                  intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this search parameter is needed and why it has
                been designed as it has.
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The code used in the URL or the parameter name in a parameters
                resource for this search parameter.
            base:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: The base resource type(s) that this search parameter can be used
                  against.
              minItems: 1
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of value that a search parameter may contain, and how the
                content is interpreted.
            expression:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A FHIRPath expression that returns a set of elements for the search
                parameter.
            xpath:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An XPath expression that returns a set of elements for the search
                parameter.
            xpathUsage:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the search parameter relates to the set of elements returned by
                evaluating the xpath query.
            target:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Types of resource (if a resource is referenced).
            multipleOr:
              type: boolean
              description: Whether multiple values are allowed for each time the parameter
                exists. Values are separated by commas, and the parameter
                matches if any of the values match.
            multipleAnd:
              type: boolean
              description: Whether multiple parameters are allowed &ndash; e.g. more than one
                parameter with the same name. The search matches if all the
                parameters match.
            comparator:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Comparators supported for the search parameter.
            modifier:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: A modifier supported for the search parameter.
            chain:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Contains the names of any search parameters which may be chained to
                  the containing search parameter. Chained parameters may be
                  added to search parameters of type reference and specify that
                  resources will only be returned if they contain a reference to
                  a resource which matches the chained parameter value. Values
                  for this field should be drawn from SearchParameter.code for a
                  parameter on the target resource type.
            component:
              type: array
              items:
                $ref: "#/components/schemas/SearchParameter_Component"
                description: Used to define the parts of a composite search parameter.
          required:
            - url
            - name
            - status
            - description
            - code
            - base
            - type
      example:
        resourceType: SearchParameter
        meta:
          tag:
            - code: ibm/minimal
        _url:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _name:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _description:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _code:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        base:
          - null
        _base:
          - extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
        _type:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    SearchParameter_Component:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            definition:
              type: string
              pattern: \\S*
              description: The definition of the search parameter that describes this part.
            expression:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A sub&ndash;expression that defines how to extract values for this
                component from the output of the main
                SearchParameter.expression.
          required:
            - definition
            - expression
    Slot:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: External Ids for this item.
            serviceCategory:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A broad categorization of the service that is to be performed
                  during this appointment.
            serviceType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The type of appointments that can be booked into this slot (ideally
                  this would be an identifiable service &ndash; which is at a
                  location, rather than the location itself). If provided then
                  this overrides the value provided on the availability
                  resource.
            specialty:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The specialty of a practitioner that would be required to perform
                  the service requested in this appointment.
            appointmentType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The style of appointment or patient that may be booked in the slot
                (not service type).
            schedule:
              $ref: "#/components/schemas/Reference"
              description: The schedule resource that this slot defines an interval of status
                information.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: busy | free | busy&ndash;unavailable | busy&ndash;tentative |
                entered&ndash;in&ndash;error.
            start:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: Date/Time that the slot is to begin.
            end:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: Date/Time that the slot is to conclude.
            overbooked:
              type: boolean
              description: This slot has already been overbooked, appointments are unlikely to
                be accepted for this time.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Comments on the slot to describe any extended information. Such as
                custom constraints on the slot.
          required:
            - schedule
            - status
            - start
            - end
      example:
        resourceType: Slot
        meta:
          tag:
            - code: ibm/minimal
        schedule:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _start:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _end:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    SpecimenDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: A business identifier associated with the kind of specimen.
            typeCollected:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of material to be collected.
            patientPreparation:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Preparation of the patient for specimen collection.
            timeAspect:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Time aspect of specimen collection (duration or offset).
            collection:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The action to be performed for collecting the specimen.
            typeTested:
              type: array
              items:
                $ref: "#/components/schemas/SpecimenDefinition_TypeTested"
                description: Specimen conditioned in a container as expected by the testing
                  laboratory.
      example:
        resourceType: SpecimenDefinition
        meta:
          tag:
            - code: ibm/minimal
    SpecimenDefinition_TypeTested:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            isDerived:
              type: boolean
              description: Primary of secondary specimen.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of specimen conditioned for testing expected by lab.
            preference:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The preference for this type of conditioned specimen.
            container:
              $ref: "#/components/schemas/SpecimenDefinition_TypeTested_Container"
              description: The specimen's container.
            requirement:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Requirements for delivery and special handling of this kind of
                conditioned specimen.
            retentionTime:
              $ref: "#/components/schemas/Duration"
              description: The usual time that a specimen of this kind is retained after the
                ordered tests are completed, for the purpose of additional
                testing.
            rejectionCriterion:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Criterion for rejection of the specimen in its container by the
                  laboratory.
            handling:
              type: array
              items:
                $ref: "#/components/schemas/SpecimenDefinition_TypeTested_Handling"
                description: Set of instructions for preservation/transport of the specimen at a
                  defined temperature interval, prior the testing process.
          required:
            - preference
    SpecimenDefinition_TypeTested_Container:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            material:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of material of the container.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The type of container used to contain this kind of specimen.
            cap:
              $ref: "#/components/schemas/CodeableConcept"
              description: Color of container cap.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The textual description of the kind of container.
            capacity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The capacity (volume or other measure) of this kind of container.
            minimumVolumeQuantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The minimum volume to be conditioned in the container.
            minimumVolumeString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The minimum volume to be conditioned in the container.
            additive:
              type: array
              items:
                $ref: "#/components/schemas/SpecimenDefinition_TypeTested_Container_Additive"
                description: "Substance introduced in the kind of container to preserve,
                  maintain or enhance the specimen. Examples: Formalin, Citrate,
                  EDTA."
            preparation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Special processing that should be applied to the container for this
                kind of specimen.
    SpecimenDefinition_TypeTested_Container_Additive:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            additiveCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: "Substance introduced in the kind of container to preserve,
                maintain or enhance the specimen. Examples: Formalin, Citrate,
                EDTA."
            additiveReference:
              $ref: "#/components/schemas/Reference"
              description: "Substance introduced in the kind of container to preserve,
                maintain or enhance the specimen. Examples: Formalin, Citrate,
                EDTA."
    SpecimenDefinition_TypeTested_Handling:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            temperatureQualifier:
              $ref: "#/components/schemas/CodeableConcept"
              description: It qualifies the interval of temperature, which characterizes an
                occurrence of handling. Conditions that are not related to
                temperature may be handled in the instruction element.
            temperatureRange:
              $ref: "#/components/schemas/Range"
              description: The temperature interval for this set of handling instructions.
            maxDuration:
              $ref: "#/components/schemas/Duration"
              description: The maximum time interval of preservation of the specimen with
                these conditions.
            instruction:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional textual instructions for the preservation or transport
                of the specimen. For instance, 'Protect from light exposure'.
    StructureDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this structure definition
                when it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this structure definition is
                (or will be) published. This URL can be the target of a
                canonical reference. It SHALL remain the same when the structure
                definition is stored on different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this structure
                  definition when it is represented in other formats, or
                  referenced in a specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                structure definition when it is referenced in a specification,
                model, design or instance. This is an arbitrary value managed by
                the structure definition author and is not expected to be
                globally unique. For example, it might be a timestamp (e.g.
                yyyymmdd) if a managed version is not available. There is also
                no expectation that versions can be placed in a lexicographical
                sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the structure definition. This
                name should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the structure
                definition.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this structure definition. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this structure definition is
                authored for testing purposes (or
                education/evaluation/marketing) and is not intended to be used
                for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the structure definition was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                structure definition changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                structure definition.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the structure
                definition from a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate structure
                  definition instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the structure definition is
                  intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this structure definition is needed and why it
                has been designed as it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the structure definition and/or
                its contents. Copyright statements are generally legal
                restrictions on the use and publishing of the structure
                definition.
            keyword:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: A set of key words or terms from external terminologies that may be
                  used to assist with indexing and searching of templates nby
                  describing the use of this structure definition, or the
                  content it describes.
            fhirVersion:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The version of the FHIR specification on which this
                StructureDefinition is based &ndash; this is the formal version
                of the specification, without the revision number, e.g.
                [publication].[major].[minor], which is 4.3.0&ndash;cibuild for
                this version.
            mapping:
              type: array
              items:
                $ref: "#/components/schemas/StructureDefinition_Mapping"
                description: An external specification that the content is mapped to.
            kind:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines the kind of structure that this definition is describing.
            abstract:
              type: boolean
              description: Whether structure this definition describes is abstract or
                not  &ndash; that is, whether the structure is not intended to
                be instantiated. For Resources and Data types, abstract types
                will never be exchanged  between systems.
            context:
              type: array
              items:
                $ref: "#/components/schemas/StructureDefinition_Context"
                description: Identifies the types of resource or data type elements to which the
                  extension can be applied.
            contextInvariant:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: A set of rules as FHIRPath Invariants about when the extension can
                  be used (e.g. co&ndash;occurrence variants for the extension).
                  All the rules must be true.
            type:
              type: string
              pattern: \\S*
              description: Defines how to interpret the expression that defines what the
                context of the extension is.
            baseDefinition:
              type: string
              pattern: \\S*
              description: An absolute URI that is the base structure from which this type is
                derived, either by specialization or constraint.
            derivation:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the type relates to the baseDefinition.
            snapshot:
              $ref: "#/components/schemas/StructureDefinition_Snapshot"
              description: A snapshot view is expressed in a standalone form that can be used
                and interpreted without considering the base
                StructureDefinition.
            differential:
              $ref: "#/components/schemas/StructureDefinition_Differential"
              description: A differential view is expressed relative to the base
                StructureDefinition &ndash; a statement of differences that it
                applies.
          required:
            - url
            - name
            - status
            - kind
            - abstract
            - type
      example:
        resourceType: StructureDefinition
        meta:
          tag:
            - code: ibm/minimal
        _url:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _name:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _kind:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _abstract:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _type:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    StructureDefinition_Context:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Defines how to interpret the expression that defines what the
                context of the extension is.
            expression:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An expression that defines where an extension can be used in
                resources.
          required:
            - type
            - expression
    StructureDefinition_Differential:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            element:
              type: array
              items:
                $ref: "#/components/schemas/ElementDefinition"
                description: Captures constraints on each element within the resource.
              minItems: 1
          required:
            - element
    StructureDefinition_Mapping:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identity:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: An Internal id that is used to identify this mapping set when
                specific mappings are made.
            uri:
              type: string
              pattern: \\S*
              description: An absolute URI that identifies the specification that this mapping
                is expressed to.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A name for the specification that is being mapped to.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Comments about this mapping, including version notes, issues, scope
                limitations, and other important notes for usage.
          required:
            - identity
    StructureDefinition_Snapshot:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            element:
              type: array
              items:
                $ref: "#/components/schemas/ElementDefinition"
                description: Captures constraints on each element within the resource.
              minItems: 1
          required:
            - element
    ElementDefinition:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            path:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The path identifies the element and is expressed as a
                "."&ndash;separated list of ancestor elements, beginning with
                the name of the resource or extension.
            representation:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Codes that define how this element is represented in instances,
                  when the deviation varies from the normal case.
            sliceName:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of this element definition slice, when slicing is working.
                The name must be a token with no dots or spaces. This is a
                unique name referring to a specific set of constraints applied
                to this element, used to provide a name to different slices of
                the same element.
            sliceIsConstraining:
              type: boolean
              description: If true, indicates that this slice definition is constraining a
                slice definition with the same name in an inherited profile. If
                false, the slice is not overriding any slice in an inherited
                profile. If missing, the slice might or might not be overriding
                a slice in an inherited profile, depending on the sliceName.
            label:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A single preferred label which is the text to display beside the
                element indicating its meaning or to use to prompt for the
                element in a user display or form.
            code:
              type: array
              items:
                $ref: "#/components/schemas/Coding"
                description: A code that has the same meaning as the element in a particular
                  terminology.
            slicing:
              $ref: "#/components/schemas/ElementDefinition_Slicing"
              description: Indicates that the element is sliced into a set of alternative
                definitions (i.e. in a structure definition, there are multiple
                different constraints on a single element in the base resource).
                Slicing can be used in any resource that has cardinality ..* on
                the base resource, or any resource with a choice of types. The
                set of slices is any elements that come after this in the
                element sequence that have the same path, until a shorter path
                occurs (the shorter path terminates the set).
            short:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A concise description of what this element means (e.g. for use in
                autogenerated summaries).
            definition:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: "Provides a complete explanation of the meaning of the data element
                for human readability.  For the case of elements derived from
                existing elements (e.g. constraints), the definition SHALL be
                consistent with the base definition, but convey the meaning of
                the element in the particular context of use of the resource.
                (Note: The text you are reading is specified in
                ElementDefinition.definition)."
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: "Explanatory notes and implementation guidance about the data
                element, including notes about how to use the data properly,
                exceptions to proper use, etc. (Note: The text you are reading
                is specified in ElementDefinition.comment)."
            requirements:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: This element is for traceability of why the element was created and
                why the constraints exist as they do. This may be used to point
                to source materials or specifications that drove the structure
                of this element.
            alias:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Identifies additional names by which this element might also be
                  known.
            min:
              type: integer
              format: int32
              description: The minimum number of times this element SHALL appear in the
                instance.
            max:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The maximum number of times this element is permitted to appear in
                the instance.
            base:
              $ref: "#/components/schemas/ElementDefinition_Base"
              description: Information about the base definition of the element, provided to
                make it unnecessary for tools to trace the deviation of the
                element through the derived and related profiles. When the
                element definition is not the original definition of an element
                &ndash; i.g. either in a constraint on another type, or for
                elements from a super type in a snap shot &ndash; then the
                information in provided in the element definition may be
                different to the base definition. On the original definition of
                the element, it will be same.
            contentReference:
              type: string
              pattern: \\S*
              description: Identifies an element defined elsewhere in the definition whose
                content rules should be applied to the current element.
                ContentReferences bring across all the rules that are in the
                ElementDefinition for the element, including definitions,
                cardinality constraints, bindings, invariants etc.
            type:
              type: array
              items:
                $ref: "#/components/schemas/ElementDefinition_Type"
                description: How the element value is interpreted when discrimination is
                  evaluated.
              minItems: 1
            defaultValueBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueBoolean:
              type: boolean
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueCanonical:
              type: string
              pattern: \\S*
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueCode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueDecimal:
              type: number
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueInteger:
              type: integer
              format: int32
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueMarkdown:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueOid:
              type: string
              pattern: urn:oid:[0-2](\\.(0|[1-9][0-9]*))+
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValuePositiveInt:
              type: integer
              format: int32
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueUnsignedInt:
              type: integer
              format: int32
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueUri:
              type: string
              pattern: \\S*
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueUrl:
              type: string
              pattern: \\S*
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueUuid:
              type: string
              pattern: urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueAddress:
              $ref: "#/components/schemas/Address"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueAge:
              $ref: "#/components/schemas/Age"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueAnnotation:
              $ref: "#/components/schemas/Annotation"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueCodeableReference:
              $ref: "#/components/schemas/CodeableReference"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueCoding:
              $ref: "#/components/schemas/Coding"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueContactPoint:
              $ref: "#/components/schemas/ContactPoint"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueCount:
              $ref: "#/components/schemas/Count"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueDistance:
              $ref: "#/components/schemas/Distance"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueDuration:
              $ref: "#/components/schemas/Duration"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueHumanName:
              $ref: "#/components/schemas/HumanName"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueMoney:
              $ref: "#/components/schemas/Money"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValuePeriod:
              $ref: "#/components/schemas/Period"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueRange:
              $ref: "#/components/schemas/Range"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueRatio:
              $ref: "#/components/schemas/Ratio"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueRatioRange:
              $ref: "#/components/schemas/RatioRange"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueReference:
              $ref: "#/components/schemas/Reference"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueSampledData:
              $ref: "#/components/schemas/SampledData"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueSignature:
              $ref: "#/components/schemas/Signature"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueTiming:
              $ref: "#/components/schemas/Timing"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueContactDetail:
              $ref: "#/components/schemas/ContactDetail"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueRelatedArtifact:
              $ref: "#/components/schemas/RelatedArtifact"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            defaultValueUsageContext:
              $ref: "#/components/schemas/UsageContext"
              description: The value that should be used if there is no value stated in the
                instance (e.g. 'if not otherwise specified, the abstract is
                false').
            meaningWhenMissing:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The Implicit meaning that is to be understood when this element is
                missing (e.g. 'when this element is missing, the period is
                ongoing').
            orderMeaning:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: If present, indicates that the order of the repeating element has
                meaning and describes what that meaning is.  If absent, it means
                that the order of the element has no meaning.
            fixedBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedBoolean:
              type: boolean
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedCanonical:
              type: string
              pattern: \\S*
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedCode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedDecimal:
              type: number
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedInteger:
              type: integer
              format: int32
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedMarkdown:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedOid:
              type: string
              pattern: urn:oid:[0-2](\\.(0|[1-9][0-9]*))+
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedPositiveInt:
              type: integer
              format: int32
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedUnsignedInt:
              type: integer
              format: int32
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedUri:
              type: string
              pattern: \\S*
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedUrl:
              type: string
              pattern: \\S*
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedUuid:
              type: string
              pattern: urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedAddress:
              $ref: "#/components/schemas/Address"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedAge:
              $ref: "#/components/schemas/Age"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedAnnotation:
              $ref: "#/components/schemas/Annotation"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedAttachment:
              $ref: "#/components/schemas/Attachment"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedCodeableReference:
              $ref: "#/components/schemas/CodeableReference"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedCoding:
              $ref: "#/components/schemas/Coding"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedContactPoint:
              $ref: "#/components/schemas/ContactPoint"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedCount:
              $ref: "#/components/schemas/Count"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedDistance:
              $ref: "#/components/schemas/Distance"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedDuration:
              $ref: "#/components/schemas/Duration"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedHumanName:
              $ref: "#/components/schemas/HumanName"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedMoney:
              $ref: "#/components/schemas/Money"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedPeriod:
              $ref: "#/components/schemas/Period"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedQuantity:
              $ref: "#/components/schemas/Quantity"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedRange:
              $ref: "#/components/schemas/Range"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedRatio:
              $ref: "#/components/schemas/Ratio"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedRatioRange:
              $ref: "#/components/schemas/RatioRange"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedReference:
              $ref: "#/components/schemas/Reference"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedSampledData:
              $ref: "#/components/schemas/SampledData"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedSignature:
              $ref: "#/components/schemas/Signature"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedTiming:
              $ref: "#/components/schemas/Timing"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedContactDetail:
              $ref: "#/components/schemas/ContactDetail"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedRelatedArtifact:
              $ref: "#/components/schemas/RelatedArtifact"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            fixedUsageContext:
              $ref: "#/components/schemas/UsageContext"
              description: Specifies a value that SHALL be exactly the value  for this element
                in the instance. For purposes of comparison,
                non&ndash;significant whitespace is ignored, and all values must
                be an exact match (case and accent sensitive). Missing
                elements/attributes must also be missing.
            patternBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternBoolean:
              type: boolean
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternCanonical:
              type: string
              pattern: \\S*
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternCode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternDecimal:
              type: number
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternInteger:
              type: integer
              format: int32
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternMarkdown:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternOid:
              type: string
              pattern: urn:oid:[0-2](\\.(0|[1-9][0-9]*))+
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternPositiveInt:
              type: integer
              format: int32
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternUnsignedInt:
              type: integer
              format: int32
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternUri:
              type: string
              pattern: \\S*
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternUrl:
              type: string
              pattern: \\S*
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternUuid:
              type: string
              pattern: urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternAddress:
              $ref: "#/components/schemas/Address"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternAge:
              $ref: "#/components/schemas/Age"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternAnnotation:
              $ref: "#/components/schemas/Annotation"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternAttachment:
              $ref: "#/components/schemas/Attachment"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternCodeableReference:
              $ref: "#/components/schemas/CodeableReference"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternCoding:
              $ref: "#/components/schemas/Coding"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternContactPoint:
              $ref: "#/components/schemas/ContactPoint"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternCount:
              $ref: "#/components/schemas/Count"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternDistance:
              $ref: "#/components/schemas/Distance"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternDuration:
              $ref: "#/components/schemas/Duration"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternHumanName:
              $ref: "#/components/schemas/HumanName"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternMoney:
              $ref: "#/components/schemas/Money"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternPeriod:
              $ref: "#/components/schemas/Period"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternQuantity:
              $ref: "#/components/schemas/Quantity"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternRange:
              $ref: "#/components/schemas/Range"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternRatio:
              $ref: "#/components/schemas/Ratio"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternRatioRange:
              $ref: "#/components/schemas/RatioRange"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternReference:
              $ref: "#/components/schemas/Reference"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternSampledData:
              $ref: "#/components/schemas/SampledData"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternSignature:
              $ref: "#/components/schemas/Signature"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternTiming:
              $ref: "#/components/schemas/Timing"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternContactDetail:
              $ref: "#/components/schemas/ContactDetail"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternRelatedArtifact:
              $ref: "#/components/schemas/RelatedArtifact"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            patternUsageContext:
              $ref: "#/components/schemas/UsageContext"
              description: >-
                Specifies a value that the value in the instance SHALL follow
                &ndash; that is, any value in the pattern must be found in the
                instance. Other additional values may be found too. This is
                effectively constraint by example.  


                When pattern[x] is used to constrain a primitive, it means that
                the value provided in the pattern[x] must match the instance
                value exactly.


                When pattern[x] is used to constrain an array, it means that
                each element provided in the pattern[x] array must (recursively)
                match at least one element from the instance array.


                When pattern[x] is used to constrain a complex object, it means
                that each property in the pattern must be present in the complex
                object, and its value must recursively match &ndash;&ndash;
                i.e.,


                1. If primitive: it must match exactly the pattern value

                2. If a complex object: it must match (recursively) the pattern
                value

                3. If an array: it must match (recursively) the pattern value.
            example:
              type: array
              items:
                $ref: "#/components/schemas/ElementDefinition_Example"
                description: A sample value for this element demonstrating the type of
                  information that would typically be found in the element.
            minValueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The minimum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            minValueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The minimum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            minValueInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The minimum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            minValueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: The minimum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            minValueDecimal:
              type: number
              description: The minimum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            minValueInteger:
              type: integer
              format: int32
              description: The minimum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            minValuePositiveInt:
              type: integer
              format: int32
              description: The minimum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            minValueUnsignedInt:
              type: integer
              format: int32
              description: The minimum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            minValueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The minimum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            maxValueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The maximum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            maxValueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The maximum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            maxValueInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The maximum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            maxValueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: The maximum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            maxValueDecimal:
              type: number
              description: The maximum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            maxValueInteger:
              type: integer
              format: int32
              description: The maximum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            maxValuePositiveInt:
              type: integer
              format: int32
              description: The maximum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            maxValueUnsignedInt:
              type: integer
              format: int32
              description: The maximum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            maxValueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The maximum allowed value for the element. The value is inclusive.
                This is allowed for the types date, dateTime, instant, time,
                decimal, integer, and Quantity.
            maxLength:
              type: integer
              format: int32
              description: Indicates the maximum length in characters that is permitted to be
                present in conformant instances and which is expected to be
                supported by conformant consumers that support the element.
            condition:
              type: array
              items:
                type: string
                pattern: "[A-Za-z0-9\\-\\.]{1,64}"
                description: A reference to an invariant that may make additional statements
                  about the cardinality or value in the instance.
            constraint:
              type: array
              items:
                $ref: "#/components/schemas/ElementDefinition_Constraint"
                description: Formal constraints such as co&ndash;occurrence and other
                  constraints that can be computationally evaluated within the
                  context of the instance.
            mustSupport:
              type: boolean
              description: If true, implementations that produce or consume resources SHALL
                provide "support" for the element in some meaningful way.  If
                false, the element may be ignored and not supported. If false,
                whether to populate or use the data element in any way is at the
                discretion of the implementation.
            isModifier:
              type: boolean
              description: "If true, the value of this element affects the interpretation of
                the element or resource that contains it, and the value of the
                element cannot be ignored. Typically, this is used for status,
                negation and qualification codes. The effect of this is that the
                element cannot be ignored by systems: they SHALL either
                recognize the element and process it, and/or a
                pre&ndash;determination has been made that it is not relevant to
                their particular system."
            isModifierReason:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explains how that element affects the interpretation of the
                resource or element that contains it.
            isSummary:
              type: boolean
              description: Whether the element should be included if a client requests a
                search with the parameter _summary=true.
            binding:
              $ref: "#/components/schemas/ElementDefinition_Binding"
              description: Binds to a value set if this element is coded (code, Coding,
                CodeableConcept, Quantity), or the data types (string, uri).
            mapping:
              type: array
              items:
                $ref: "#/components/schemas/ElementDefinition_Mapping"
                description: Identifies a concept from an external specification that roughly
                  corresponds to this element.
          required:
            - path
    ElementDefinition_Base:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            path:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The Path that identifies the base element &ndash; this matches the
                ElementDefinition.path for that element. Across FHIR, there is
                only one base definition of any element &ndash; that is, an
                element definition on a
                [StructureDefinition](structuredefinition.html#) without a
                StructureDefinition.base.
            min:
              type: integer
              format: int32
              description: Minimum cardinality of the base element identified by the path.
            max:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Maximum cardinality of the base element identified by the path.
          required:
            - path
            - min
            - max
    ElementDefinition_Binding:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            strength:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the degree of conformance expectations associated with
                this binding &ndash; that is, the degree to which the provided
                value set must be adhered to in the instances.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Describes the intended use of this particular set of codes.
            valueSet:
              type: string
              pattern: \\S*
              description: Refers to the value set that identifies the set of codes the
                binding refers to.
          required:
            - strength
    ElementDefinition_Constraint:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            key:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Allows identification of which elements have their cardinalities
                impacted by the constraint.  Will not be referenced for
                constraints that do not affect cardinality.
            requirements:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of why this constraint is necessary or appropriate.
            severity:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identifies the impact constraint violation has on the conformance
                of the instance.
            human:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Text that can be used to describe the constraint in messages
                identifying that the constraint has been violated.
            expression:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A [FHIRPath](fhirpath.html) expression of constraint that can be
                executed to see if this constraint is met.
            xpath:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An XPath expression of constraint that can be executed to see if
                this constraint is met.
            source:
              type: string
              pattern: \\S*
              description: A reference to the original source of the constraint, for
                traceability purposes.
          required:
            - key
            - severity
            - human
    ElementDefinition_Example:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            label:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Describes the purpose of this example amoung the set of examples.
            valueBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueBoolean:
              type: boolean
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueCanonical:
              type: string
              pattern: \\S*
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueCode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueDecimal:
              type: number
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueInteger:
              type: integer
              format: int32
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueMarkdown:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueOid:
              type: string
              pattern: urn:oid:[0-2](\\.(0|[1-9][0-9]*))+
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valuePositiveInt:
              type: integer
              format: int32
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueUnsignedInt:
              type: integer
              format: int32
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueUri:
              type: string
              pattern: \\S*
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueUrl:
              type: string
              pattern: \\S*
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueUuid:
              type: string
              pattern: urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueAddress:
              $ref: "#/components/schemas/Address"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueAge:
              $ref: "#/components/schemas/Age"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueAnnotation:
              $ref: "#/components/schemas/Annotation"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueCodeableReference:
              $ref: "#/components/schemas/CodeableReference"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueCoding:
              $ref: "#/components/schemas/Coding"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueContactPoint:
              $ref: "#/components/schemas/ContactPoint"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueCount:
              $ref: "#/components/schemas/Count"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueDistance:
              $ref: "#/components/schemas/Distance"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueDuration:
              $ref: "#/components/schemas/Duration"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueHumanName:
              $ref: "#/components/schemas/HumanName"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueMoney:
              $ref: "#/components/schemas/Money"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valuePeriod:
              $ref: "#/components/schemas/Period"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueRatio:
              $ref: "#/components/schemas/Ratio"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueRatioRange:
              $ref: "#/components/schemas/RatioRange"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueSampledData:
              $ref: "#/components/schemas/SampledData"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueSignature:
              $ref: "#/components/schemas/Signature"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueTiming:
              $ref: "#/components/schemas/Timing"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueContactDetail:
              $ref: "#/components/schemas/ContactDetail"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueRelatedArtifact:
              $ref: "#/components/schemas/RelatedArtifact"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
            valueUsageContext:
              $ref: "#/components/schemas/UsageContext"
              description: The actual value for the element, which must be one of the types
                allowed for this element.
          required:
            - label
    ElementDefinition_Mapping:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identity:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: An internal reference to the definition of a mapping.
            language:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Identifies the computable language in which mapping.map is
                expressed.
            map:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Expresses what part of the target specification corresponds to this
                element.
            comment:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Comments that provide information about the mapping or its use.
          required:
            - identity
            - map
    ElementDefinition_Slicing:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            discriminator:
              type: array
              items:
                $ref: "#/components/schemas/ElementDefinition_Slicing_Discriminator"
                description: Designates which child elements are used to discriminate between
                  the slices when processing an instance. If one or more
                  discriminators are provided, the value of the child elements
                  in the instance data SHALL completely distinguish which slice
                  the element in the resource matches based on the allowed
                  values for those elements in each of the slices.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A human&ndash;readable text description of how the slicing works.
                If there is no discriminator, this is required to be present to
                provide whatever information is possible about how the slices
                can be differentiated.
            ordered:
              type: boolean
              description: If the matching elements have to occur in the same order as defined
                in the profile.
            rules:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Whether additional slices are allowed or not. When the slices are
                ordered, profile authors can also say that additional slices are
                only allowed at the end.
          required:
            - rules
    ElementDefinition_Slicing_Discriminator:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the element value is interpreted when discrimination is
                evaluated.
            path:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A FHIRPath expression, using [the simple subset of
                FHIRPath](fhirpath.html#simple), that is used to identify the
                element on which discrimination is based.
          required:
            - type
            - path
    ElementDefinition_Type:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: \\S*
              description: URL of Data type or Resource that is a(or the) type used for this
                element. References are URLs that are relative to
                http://hl7.org/fhir/StructureDefinition e.g. "string" is a
                reference to http://hl7.org/fhir/StructureDefinition/string.
                Absolute URLs are only allowed in logical models.
            profile:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Identifies a profile structure or implementation Guide that applies
                  to the datatype this element refers to. If any profiles are
                  specified, then the content must conform to at least one of
                  them. The URL can be a local reference &ndash; to a contained
                  StructureDefinition, or a reference to another
                  StructureDefinition or Implementation Guide by a canonical
                  URL. When an implementation guide is specified, the type SHALL
                  conform to at least one profile defined in the implementation
                  guide.
            targetProfile:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Used when the type is "Reference" or "canonical", and identifies a
                  profile structure or implementation Guide that applies to the
                  target of the reference this element refers to. If any
                  profiles are specified, then the content must conform to at
                  least one of them. The URL can be a local reference &ndash; to
                  a contained StructureDefinition, or a reference to another
                  StructureDefinition or Implementation Guide by a canonical
                  URL. When an implementation guide is specified, the target
                  resource SHALL conform to at least one profile defined in the
                  implementation guide.
            aggregation:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: If the type is a reference to another resource, how the resource is
                  or can be aggregated &ndash; is it a contained resource, or a
                  reference, and if the context is a bundle, is it included in
                  the bundle.
            versioning:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Whether this reference needs to be version specific or version
                independent, or whether either can be used.
          required:
            - code
    StructureMap:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this structure map when it
                is referenced in a specification, model, design or an instance;
                also called its canonical identifier. This SHOULD be globally
                unique and SHOULD be a literal address at which at which an
                authoritative instance of this structure map is (or will be)
                published. This URL can be the target of a canonical reference.
                It SHALL remain the same when the structure map is stored on
                different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this structure map
                  when it is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                structure map when it is referenced in a specification, model,
                design or instance. This is an arbitrary value managed by the
                structure map author and is not expected to be globally unique.
                For example, it might be a timestamp (e.g. yyyymmdd) if a
                managed version is not available. There is also no expectation
                that versions can be placed in a lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the structure map. This name
                should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the structure
                map.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this structure map. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this structure map is authored for
                testing purposes (or education/evaluation/marketing) and is not
                intended to be used for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the structure map was
                published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                structure map changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                structure map.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the structure map from
                a consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate structure
                  map instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the structure map is intended
                  to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this structure map is needed and why it has been
                designed as it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the structure map and/or its
                contents. Copyright statements are generally legal restrictions
                on the use and publishing of the structure map.
            structure:
              type: array
              items:
                $ref: "#/components/schemas/StructureMap_Structure"
                description: A structure definition used by this map. The structure definition
                  may describe instances that are converted, or the instances
                  that are produced.
            import:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Other maps used by this map (canonical URLs).
            group:
              type: array
              items:
                $ref: "#/components/schemas/StructureMap_Group"
                description: Organizes the mapping into manageable chunks for human review/ease
                  of maintenance.
              minItems: 1
          required:
            - url
            - name
            - status
            - group
      example:
        resourceType: StructureMap
        meta:
          tag:
            - code: ibm/minimal
        _url:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _name:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        group:
          - _name:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
            _typeMode:
              extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
            input:
              - _name:
                  extension:
                    - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                      valueCode: unknown
                _mode:
                  extension:
                    - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                      valueCode: unknown
            rule:
              - _name:
                  extension:
                    - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                      valueCode: unknown
                source:
                  - _context:
                      extension:
                        - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                          valueCode: unknown
    StructureMap_Group:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: A unique name for the group for the convenience of human readers.
            extends:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Another group that this group adds rules to.
            typeMode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: If this is the default rule set to apply for the source type or
                this combination of types.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Additional supporting documentation that explains the purpose of
                the group and the types of mappings within it.
            input:
              type: array
              items:
                $ref: "#/components/schemas/StructureMap_Group_Input"
                description: A name assigned to an instance of data. The instance must be
                  provided when the mapping is invoked.
              minItems: 1
            rule:
              type: array
              items:
                $ref: "#/components/schemas/StructureMap_Group_Rule"
                description: Transform Rule from source to target.
              minItems: 1
          required:
            - name
            - typeMode
            - input
            - rule
    StructureMap_Group_Input:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Name for this instance of data.
            type:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Type for this instance of data.
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Mode for this instance of data.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Documentation for this instance of data.
          required:
            - name
            - mode
    StructureMap_Group_Rule:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Name of the rule for internal references.
            source:
              type: array
              items:
                $ref: "#/components/schemas/StructureMap_Group_Rule_Source"
                description: Source inputs to the mapping.
              minItems: 1
            target:
              type: array
              items:
                $ref: "#/components/schemas/StructureMap_Group_Rule_Target"
                description: Content to create because of this mapping rule.
            rule:
              type: array
              items:
                $ref: "#/components/schemas/StructureMap_Group_Rule"
                description: Rules contained in this rule.
            dependent:
              type: array
              items:
                $ref: "#/components/schemas/StructureMap_Group_Rule_Dependent"
                description: Which other rules to apply in the context of this rule.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Documentation for this instance of data.
          required:
            - name
            - source
    StructureMap_Group_Rule_Dependent:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Name of a rule or group to apply.
            variable:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Variable to pass to the rule or group.
              minItems: 1
          required:
            - name
            - variable
    StructureMap_Group_Rule_Source:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            context:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Type or variable this rule applies to.
            min:
              type: integer
              format: int32
              description: Specified minimum cardinality for the element. This is optional; if
                present, it acts an implicit check on the input content.
            max:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Specified maximum cardinality for the element &ndash; a number or a
                "*". This is optional; if present, it acts an implicit check on
                the input content (* just serves as documentation; it's the
                default value).
            type:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Specified type for the element. This works as a condition on the
                mapping &ndash; use for polymorphic elements.
            defaultValueBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: A value to use if there is no existing value in the source object.
            defaultValueBoolean:
              type: boolean
              description: A value to use if there is no existing value in the source object.
            defaultValueCanonical:
              type: string
              pattern: \\S*
              description: A value to use if there is no existing value in the source object.
            defaultValueCode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A value to use if there is no existing value in the source object.
            defaultValueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: A value to use if there is no existing value in the source object.
            defaultValueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: A value to use if there is no existing value in the source object.
            defaultValueDecimal:
              type: number
              description: A value to use if there is no existing value in the source object.
            defaultValueId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: A value to use if there is no existing value in the source object.
            defaultValueInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: A value to use if there is no existing value in the source object.
            defaultValueInteger:
              type: integer
              format: int32
              description: A value to use if there is no existing value in the source object.
            defaultValueMarkdown:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A value to use if there is no existing value in the source object.
            defaultValueOid:
              type: string
              pattern: urn:oid:[0-2](\\.(0|[1-9][0-9]*))+
              description: A value to use if there is no existing value in the source object.
            defaultValuePositiveInt:
              type: integer
              format: int32
              description: A value to use if there is no existing value in the source object.
            defaultValueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A value to use if there is no existing value in the source object.
            defaultValueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: A value to use if there is no existing value in the source object.
            defaultValueUnsignedInt:
              type: integer
              format: int32
              description: A value to use if there is no existing value in the source object.
            defaultValueUri:
              type: string
              pattern: \\S*
              description: A value to use if there is no existing value in the source object.
            defaultValueUrl:
              type: string
              pattern: \\S*
              description: A value to use if there is no existing value in the source object.
            defaultValueUuid:
              type: string
              pattern: urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
              description: A value to use if there is no existing value in the source object.
            defaultValueAddress:
              $ref: "#/components/schemas/Address"
              description: A value to use if there is no existing value in the source object.
            defaultValueAge:
              $ref: "#/components/schemas/Age"
              description: A value to use if there is no existing value in the source object.
            defaultValueAnnotation:
              $ref: "#/components/schemas/Annotation"
              description: A value to use if there is no existing value in the source object.
            defaultValueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: A value to use if there is no existing value in the source object.
            defaultValueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A value to use if there is no existing value in the source object.
            defaultValueCoding:
              $ref: "#/components/schemas/Coding"
              description: A value to use if there is no existing value in the source object.
            defaultValueContactPoint:
              $ref: "#/components/schemas/ContactPoint"
              description: A value to use if there is no existing value in the source object.
            defaultValueCount:
              $ref: "#/components/schemas/Count"
              description: A value to use if there is no existing value in the source object.
            defaultValueDistance:
              $ref: "#/components/schemas/Distance"
              description: A value to use if there is no existing value in the source object.
            defaultValueDuration:
              $ref: "#/components/schemas/Duration"
              description: A value to use if there is no existing value in the source object.
            defaultValueHumanName:
              $ref: "#/components/schemas/HumanName"
              description: A value to use if there is no existing value in the source object.
            defaultValueIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: A value to use if there is no existing value in the source object.
            defaultValueMoney:
              $ref: "#/components/schemas/Money"
              description: A value to use if there is no existing value in the source object.
            defaultValuePeriod:
              $ref: "#/components/schemas/Period"
              description: A value to use if there is no existing value in the source object.
            defaultValueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: A value to use if there is no existing value in the source object.
            defaultValueRange:
              $ref: "#/components/schemas/Range"
              description: A value to use if there is no existing value in the source object.
            defaultValueRatio:
              $ref: "#/components/schemas/Ratio"
              description: A value to use if there is no existing value in the source object.
            defaultValueReference:
              $ref: "#/components/schemas/Reference"
              description: A value to use if there is no existing value in the source object.
            defaultValueSampledData:
              $ref: "#/components/schemas/SampledData"
              description: A value to use if there is no existing value in the source object.
            defaultValueSignature:
              $ref: "#/components/schemas/Signature"
              description: A value to use if there is no existing value in the source object.
            defaultValueTiming:
              $ref: "#/components/schemas/Timing"
              description: A value to use if there is no existing value in the source object.
            defaultValueContactDetail:
              $ref: "#/components/schemas/ContactDetail"
              description: A value to use if there is no existing value in the source object.
            defaultValueRelatedArtifact:
              $ref: "#/components/schemas/RelatedArtifact"
              description: A value to use if there is no existing value in the source object.
            defaultValueUsageContext:
              $ref: "#/components/schemas/UsageContext"
              description: A value to use if there is no existing value in the source object.
            defaultValueMeta:
              $ref: "#/components/schemas/Meta"
              description: A value to use if there is no existing value in the source object.
            element:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Optional field for this source.
            listMode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How to handle the list mode for this element.
            variable:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Named context for field, if a field is specified.
            condition:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: FHIRPath expression  &ndash; must be true or the rule does not
                apply.
            check:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: FHIRPath expression  &ndash; must be true or the mapping engine
                throws an error instead of completing.
            logMessage:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A FHIRPath expression which specifies a message to put in the
                transform log when content matching the source rule is found.
          required:
            - context
    StructureMap_Group_Rule_Target:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            context:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Type or variable this rule applies to.
            contextType:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How to interpret the context.
            element:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Field to create in the context.
            variable:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Named context for field, if desired, and a field is specified.
            listMode:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: If field is a list, how to manage the list.
            listRuleId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Internal rule reference for shared list items.
            transform:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the data is copied / created.
            parameter:
              type: array
              items:
                $ref: "#/components/schemas/StructureMap_Group_Rule_Target_Parameter"
                description: Parameters to the transform.
    StructureMap_Group_Rule_Target_Parameter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            valueId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Parameter value &ndash; variable or literal.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Parameter value &ndash; variable or literal.
            valueBoolean:
              type: boolean
              description: Parameter value &ndash; variable or literal.
            valueInteger:
              type: integer
              format: int32
              description: Parameter value &ndash; variable or literal.
            valueDecimal:
              type: number
              description: Parameter value &ndash; variable or literal.
    StructureMap_Structure:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: The canonical reference to the structure.
            mode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: How the referenced structure is used in this mapping.
            alias:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name used for this type in the map.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Documentation that describes how the structure is used in the
                mapping.
          required:
            - url
            - mode
    Contributor:
      allOf:
        - $ref: "#/components/schemas/Element"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of contributor.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the individual or organization responsible for the
                contribution.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the contributor.
          required:
            - type
            - name
    Population:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            ageRange:
              $ref: "#/components/schemas/Range"
              description: The age of the specific population.
            ageCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The age of the specific population.
            gender:
              $ref: "#/components/schemas/CodeableConcept"
              description: The gender of the specific population.
            race:
              $ref: "#/components/schemas/CodeableConcept"
              description: Race of the specific population.
            physiologicalCondition:
              $ref: "#/components/schemas/CodeableConcept"
              description: The existing physiological conditions of the specific population to
                which this applies.
    Subscription:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the subscription, which marks the server state for
                managing the subscription.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactPoint"
                description: Contact details for a human to contact about the subscription. The
                  primary use of this for system administrator troubleshooting.
            end:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The time for the server to turn the subscription off.
            reason:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of why this subscription is defined.
            criteria:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The rules that the server should use to determine when to generate
                notifications for this subscription.
            error:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A record of the last error that occurred when the server processed
                a notification.
            channel:
              $ref: "#/components/schemas/Subscription_Channel"
              description: Details where to send notifications when resources are received
                that meet the criteria.
          required:
            - status
            - reason
            - criteria
            - channel
      example:
        resourceType: Subscription
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _reason:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _criteria:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        channel:
          _type:
            extension:
              - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                valueCode: unknown
    Subscription_Channel:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of channel to send notifications on.
            endpoint:
              type: string
              pattern: \\S*
              description: The url that describes the actual end&ndash;point to send messages
                to.
            payload:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The mime type to send the payload in &ndash; either
                application/fhir+xml, or application/fhir+json. If the payload
                is not present, then there is no payload in the notification,
                just a notification. The mime type "text/plain" may also be used
                for Email and SMS subscriptions.
            header:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Additional headers / information to send as part of the
                  notification.
          required:
            - type
    SubscriptionStatus:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of the subscription, which marks the server state for
                managing the subscription.
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of event being conveyed with this notificaiton.
            eventsSinceSubscriptionStart:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The total number of actual events which have been generated since
                the Subscription was created (inclusive of this notification)
                &ndash; regardless of how many have been successfully
                communicated.  This number is NOT incremented for handshake and
                heartbeat notifications.
            notificationEvent:
              type: array
              items:
                $ref: "#/components/schemas/SubscriptionStatus_NotificationEvent"
                description: Detailed information about events relevant to this subscription
                  notification.
            subscription:
              $ref: "#/components/schemas/Reference"
              description: The reference to the Subscription which generated this
                notification.
            topic:
              type: string
              pattern: \\S*
              description: The reference to the SubscriptionTopic for the Subscription which
                generated this notification.
            error:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A record of errors that occurred when the server processed a
                  notification.
          required:
            - type
            - subscription
      example:
        resourceType: SubscriptionStatus
        meta:
          tag:
            - code: ibm/minimal
        _type:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        subscription:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    SubscriptionStatus_NotificationEvent:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            eventNumber:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The sequential number of this event in this subscription context.
                Note that this value is a 64&ndash;bit integer value, encoded as
                a string.
            timestamp:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The actual time this event occured on the server.
            focus:
              $ref: "#/components/schemas/Reference"
              description: The focus of this event. While this will usually be a reference to
                the focus resource of the event, it MAY contain a reference to a
                non&ndash;FHIR object.
            additionalContext:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Additional context information for this event. Generally, this will
                  contain references to additional resources included with the
                  event (e.g., the Patient relevant to an Encounter), however it
                  MAY refer to non&ndash;FHIR objects.
          required:
            - eventNumber
    SubscriptionTopic:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this subscription topic
                when it is referenced in a specification, model, design or an
                instance; also called its canonical identifier. This SHOULD be
                globally unique and SHOULD be a literal address at which at
                which an authoritative instance of this subscription topic is
                (or will be) published. This URL can be the target of a
                canonical reference. It SHALL remain the same when the
                subscription topic is stored on different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Business identifiers assigned to this subscription topic by the
                  performer and/or other systems.  These identifiers remain
                  constant as the resource is updated and propagates from server
                  to server.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                subscription topic when it is referenced in a specification,
                model, design or instance. This is an arbitrary value managed by
                the Topic author and is not expected to be globally unique. For
                example, it might be a timestamp (e.g. yyyymmdd) if a managed
                version is not available. There is also no expectation that
                versions are orderable.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the
                SubscriptionTopic, for example, "admission".
            derivedFrom:
              type: array
              items:
                type: string
                pattern: \\S*
                description: The canonical URL pointing to another FHIR&ndash;defined
                  SubscriptionTopic that is adhered to in whole or in part by
                  this SubscriptionTopic.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of the SubscriptionTopic.
            experimental:
              type: boolean
              description: A flag to indicate that this TopSubscriptionTopicic is authored for
                testing purposes (or education/evaluation/marketing), and is not
                intended to be used for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: For draft definitions, indicates the date of initial creation.  For
                active definitions, represents the date of activation.  For
                withdrawn definitions, indicates the date of withdrawal.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Helps establish the "authority/credibility" of the
                SubscriptionTopic.  May also allow for contact.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the Topic from the
                consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These terms may be used to assist
                  with indexing and searching of code system definitions.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A jurisdiction in which the Topic is intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explains why this Topic is needed and why it has been designed as
                it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the SubscriptionTopic and/or its
                contents. Copyright statements are generally legal restrictions
                on the use and publishing of the SubscriptionTopic.
            approvalDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the asset content was approved by the publisher.
                Approval happens once when the content is officially approved
                for usage.
            lastReviewDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date on which the asset content was last reviewed. Review
                happens periodically after that, but doesn't change the original
                approval date.
            effectivePeriod:
              $ref: "#/components/schemas/Period"
              description: The period during which the SubscriptionTopic content was or is
                planned to be effective.
            resourceTrigger:
              type: array
              items:
                $ref: "#/components/schemas/SubscriptionTopic_ResourceTrigger"
                description: A definition of a resource&ndash;based event that triggers a
                  notification based on the SubscriptionTopic. The criteria may
                  be just a human readable description and/or a full FHIR search
                  string or FHIRPath expression. Multiple triggers are
                  considered OR joined (e.g., a resource update matching ANY of
                  the definitions will trigger a notification).
            eventTrigger:
              type: array
              items:
                $ref: "#/components/schemas/SubscriptionTopic_EventTrigger"
                description: Event definition which can be used to trigger the
                  SubscriptionTopic.
            canFilterBy:
              type: array
              items:
                $ref: "#/components/schemas/SubscriptionTopic_CanFilterBy"
                description: List of properties by which Subscriptions on the SubscriptionTopic
                  can be filtered. May be defined Search Parameters (e.g.,
                  Encounter.patient) or parameters defined within this
                  SubscriptionTopic context (e.g., hub.event).
            notificationShape:
              type: array
              items:
                $ref: "#/components/schemas/SubscriptionTopic_NotificationShape"
                description: List of properties to describe the shape (e.g., resources) included
                  in notifications from this Subscription Topic.
          required:
            - url
            - status
      example:
        resourceType: SubscriptionTopic
        meta:
          tag:
            - code: ibm/minimal
        _url:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    SubscriptionTopic_CanFilterBy:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of how this filtering parameter is intended to be used.
            resource:
              type: string
              pattern: \\S*
              description: URL of the Resource that is the type used in this filter. This is
                the "focus" of the topic (or one of them if there are more than
                one). It will be the same, a generality, or a specificity of
                SubscriptionTopic.resourceTrigger.resource or
                SubscriptionTopic.eventTrigger.resource when they are present.
            filterParameter:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Either the canonical URL to a search parameter (like
                "http://hl7.org/fhir/SearchParameter/encounter&ndash;patient")
                or topic&ndash;defined parameter (like "hub.event") which is a
                label for the filter.
            filterDefinition:
              type: string
              pattern: \\S*
              description: Either the canonical URL to a search parameter (like
                "http://hl7.org/fhir/SearchParameter/encounter&ndash;patient")
                or the officially&ndash;defined URI for a shared filter concept
                (like
                "http://example.org/concepts/shared&ndash;common&ndash;event").
            modifier:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Allowable operators to apply when determining matches (Search
                  Modifiers).  If the filterParameter is a SearchParameter, this
                  list of modifiers SHALL be a strict subset of the modifiers
                  defined on that SearchParameter.
          required:
            - filterParameter
    SubscriptionTopic_EventTrigger:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The human readable description of an event to trigger a
                notification for the SubscriptionTopic &ndash; for example,
                "Patient Admission, as defined in HL7v2 via message ADT^A01".
                Multiple values are considered OR joined (e.g., matching any
                single event listed).
            event:
              $ref: "#/components/schemas/CodeableConcept"
              description: A well&ndash;defined event which can be used to trigger
                notifications from the SubscriptionTopic.
            resource:
              type: string
              pattern: \\S*
              description: URL of the Resource that is the focus type used in this event
                trigger.  Relative URLs are relative to the StructureDefinition
                root of the implemented FHIR version (e.g.,
                http://hl7.org/fhir/StructureDefinition). For example, "Patient"
                maps to http://hl7.org/fhir/StructureDefinition/Patient.  For
                more information, see <a
                href="elementdefinition&ndash;definitions.html#ElementDefinition.type.code">ElementDefinition.type.code</a>.
          required:
            - event
            - resource
    SubscriptionTopic_NotificationShape:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            resource:
              type: string
              pattern: \\S*
              description: URL of the Resource that is the type used in this shape. This is
                the "focus" of the topic (or one of them if there are more than
                one) and the root resource for this shape definition. It will be
                the same, a generality, or a specificity of
                SubscriptionTopic.resourceTrigger.resource or
                SubscriptionTopic.eventTrigger.resource when they are present.
            include:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Search&ndash;style _include directives, rooted in the resource for
                  this shape. Servers SHOULD include resources listed here, if
                  they exist and the user is authorized to receive
                  them.  Clients SHOULD be prepared to receive these additional
                  resources, but SHALL function properly without them.
            revInclude:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: Search&ndash;style _revinclude directives, rooted in the resource
                  for this shape. Servers SHOULD include resources listed here,
                  if they exist and the user is authorized to receive
                  them.  Clients SHOULD be prepared to receive these additional
                  resources, but SHALL function properly without them.
          required:
            - resource
    SubscriptionTopic_ResourceTrigger:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The human readable description of this resource trigger for the
                SubscriptionTopic &ndash;  for example, "An Encounter enters the
                'in&ndash;progress' state".
            resource:
              type: string
              pattern: \\S*
              description: URL of the Resource that is the type used in this resource
                trigger.  Relative URLs are relative to the StructureDefinition
                root of the implemented FHIR version (e.g.,
                http://hl7.org/fhir/StructureDefinition). For example, "Patient"
                maps to http://hl7.org/fhir/StructureDefinition/Patient.  For
                more information, see <a
                href="elementdefinition&ndash;definitions.html#ElementDefinition.type.code">ElementDefinition.type.code</a>.
            supportedInteraction:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: The FHIR RESTful interaction which can be used to trigger a
                  notification for the SubscriptionTopic. Multiple values are
                  considered OR joined (e.g., CREATE or UPDATE).
            queryCriteria:
              $ref: "#/components/schemas/SubscriptionTopic_ResourceTrigger_QueryCriteria"
              description: The FHIR query based rules that the server should use to determine
                when to trigger a notification for this subscription topic.
            fhirPathCriteria:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The FHIRPath based rules that the server should use to determine
                when to trigger a notification for this topic.
          required:
            - resource
    SubscriptionTopic_ResourceTrigger_QueryCriteria:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            previous:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The FHIR query based rules are applied to the previous resource
                state (e.g., state before an update).
            resultForCreate:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: For "create" interactions, should the "previous" criteria count as
                an automatic pass or an automatic fail.
            current:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The FHIR query based rules are applied to the current resource
                state (e.g., state after an update).
            resultForDelete:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: For "delete" interactions, should the "current" criteria count as
                an automatic pass or an automatic fail.
            requireBoth:
              type: boolean
              description: If set to true, both current and previous criteria must evaluate
                true to  trigger a notification for this topic.  Otherwise a
                notification for this topic will be triggered if either one
                evaluates to true.
    Substance:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Unique identifier for the substance.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code to indicate if the substance is actively used.
            category:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A code that classifies the general type of substance.  This is
                  used  for searching, sorting and display purposes.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code (or set of codes) that identify this substance.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A description of the substance &ndash; its appearance, handling
                requirements, and other usage notes.
            instance:
              type: array
              items:
                $ref: "#/components/schemas/Substance_Instance"
                description: "Substance may be used to describe a kind of substance, or a
                  specific package/container of the substance: an instance."
            ingredient:
              type: array
              items:
                $ref: "#/components/schemas/Substance_Ingredient"
                description: A substance can be composed of other substances.
          required:
            - code
      example:
        resourceType: Substance
        meta:
          tag:
            - code: ibm/minimal
        code:
          coding:
            - extension:
                - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
                  valueCode: unknown
    Substance_Ingredient:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            quantity:
              $ref: "#/components/schemas/Ratio"
              description: The amount of the ingredient in the substance &ndash; a
                concentration ratio.
            substanceCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Another substance that is a component of this substance.
            substanceReference:
              $ref: "#/components/schemas/Reference"
              description: Another substance that is a component of this substance.
    Substance_Instance:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Identifier associated with the package/container (usually a label
                affixed directly).
            expiry:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When the substance is no longer valid to use. For some substances,
                a single arbitrary date is used for expiry.
            quantity:
              $ref: "#/components/schemas/SimpleQuantity"
              description: The amount of the substance.
    SubstanceDefinition:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: Identifier by which this substance is known.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A business level version identifier of the substance.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: Status of substance within the catalogue e.g. active, retired.
            classification:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A high level categorization, e.g. polymer or nucleic acid, or food,
                  chemical, biological, or a lower level such as the general
                  types of polymer (linear or branch chain) or type of impurity
                  (process related or contaminant).
            domain:
              $ref: "#/components/schemas/CodeableConcept"
              description: If the substance applies to human or veterinary use.
            grade:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The quality standard, established benchmark, to which substance
                  complies (e.g. USP/NF, Ph. Eur, JP, BP, Company Standard).
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Textual description of the substance.
            informationSource:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Supporting literature.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Textual comment about the substance's catalogue or registry record.
            manufacturer:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The entity that creates, makes, produces or fabricates the
                  substance. This is a set of potential manufacturers but is not
                  necessarily comprehensive.
            supplier:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: An entity that is the source for the substance. It may be different
                  from the manufacturer. Supplier is synonymous to a
                  distributor.
            moiety:
              type: array
              items:
                $ref: "#/components/schemas/SubstanceDefinition_Moiety"
                description: Moiety, for structural modifications.
            property:
              type: array
              items:
                $ref: "#/components/schemas/SubstanceDefinition_Property"
                description: General specifications for this substance.
            molecularWeight:
              type: array
              items:
                $ref: "#/components/schemas/SubstanceDefinition_MolecularWeight"
                description: The molecular weight or weight range (for proteins, polymers or
                  nucleic acids).
            structure:
              $ref: "#/components/schemas/SubstanceDefinition_Structure"
              description: Structural information.
            code:
              type: array
              items:
                $ref: "#/components/schemas/SubstanceDefinition_Code"
                description: Codes associated with the substance.
            name:
              type: array
              items:
                $ref: "#/components/schemas/SubstanceDefinition_Name"
                description: Textual name for this moiety substance.
            relationship:
              type: array
              items:
                $ref: "#/components/schemas/SubstanceDefinition_Relationship"
                description: A link between this substance and another, with details of the
                  relationship.
            sourceMaterial:
              $ref: "#/components/schemas/SubstanceDefinition_SourceMaterial"
              description: Material or taxonomic/anatomical source for the substance.
      example:
        resourceType: SubstanceDefinition
        meta:
          tag:
            - code: ibm/minimal
    SubstanceDefinition_Code:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: The specific code.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: Status of the code assignment, for example 'provisional',
                'approved'.
            statusDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date at which the code status was changed as part of the
                terminology maintenance.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Any comment can be provided in this field, if necessary.
            source:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Supporting literature.
    SubstanceDefinition_Moiety:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            role:
              $ref: "#/components/schemas/CodeableConcept"
              description: Role that the moiety is playing.
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Identifier by which this moiety substance is known.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Textual name for this moiety substance.
            stereochemistry:
              $ref: "#/components/schemas/CodeableConcept"
              description: Stereochemistry type.
            opticalActivity:
              $ref: "#/components/schemas/CodeableConcept"
              description: Optical activity type.
            molecularFormula:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Molecular formula for this moiety of this substance, typically
                using the Hill system.
            amountQuantity:
              $ref: "#/components/schemas/Quantity"
              description: Quantitative value for this moiety.
            amountString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Quantitative value for this moiety.
            measurementType:
              $ref: "#/components/schemas/CodeableConcept"
              description: The measurement type of the quantitative value. In capturing the
                actual relative amounts of substances or molecular fragments it
                may be necessary to indicate whether the amount refers to, for
                example, a mole ratio or weight ratio.
    SubstanceDefinition_MolecularWeight:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            method:
              $ref: "#/components/schemas/CodeableConcept"
              description: The method by which the molecular weight was determined.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Type of molecular weight such as exact, average (also known as.
                number average), weight average.
            amount:
              $ref: "#/components/schemas/Quantity"
              description: Used to capture quantitative values for a variety of elements. If
                only limits are given, the arithmetic mean would be the average.
                If only a single definite value for a given element is given, it
                would be captured in this field.
          required:
            - amount
    SubstanceDefinition_Name:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The actual name.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: Name type, for example 'systematic',  'scientific, 'brand'.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: The status of the name, for example 'current', 'proposed'.
            preferred:
              type: boolean
              description: If this is the preferred name for this substance.
            language:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Human language that the name is written in.
            domain:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The use context of this name for example if there is a different
                  name a drug active ingredient as opposed to a food colour
                  additive.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The jurisdiction where this name applies.
            synonym:
              type: array
              items:
                $ref: "#/components/schemas/SubstanceDefinition_Name"
                description: A synonym of this particular name, by which the substance is also
                  known.
            translation:
              type: array
              items:
                $ref: "#/components/schemas/SubstanceDefinition_Name"
                description: A translation for this name into another human language.
            official:
              type: array
              items:
                $ref: "#/components/schemas/SubstanceDefinition_Name_Official"
                description: Details of the official nature of this name.
            source:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Supporting literature.
          required:
            - name
    SubstanceDefinition_Name_Official:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            authority:
              $ref: "#/components/schemas/CodeableConcept"
              description: Which authority uses this official name.
            status:
              $ref: "#/components/schemas/CodeableConcept"
              description: The status of the official name, for example 'draft', 'active',
                'retired'.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Date of the official name change.
    SubstanceDefinition_Property:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code expressing the type of property.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A value for the property.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: A value for the property.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: A value for the property.
            valueBoolean:
              type: boolean
              description: A value for the property.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: A value for the property.
          required:
            - type
    SubstanceDefinition_Relationship:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            substanceDefinitionReference:
              $ref: "#/components/schemas/Reference"
              description: A pointer to another substance, as a resource or just a
                representational code.
            substanceDefinitionCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: A pointer to another substance, as a resource or just a
                representational code.
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: For example "salt to parent", "active moiety", "starting material",
                "polymorph", "impurity of".
            isDefining:
              type: boolean
              description: For example where an enzyme strongly bonds with a particular
                substance, this is a defining relationship for that enzyme, out
                of several possible substance relationships.
            amountQuantity:
              $ref: "#/components/schemas/Quantity"
              description: A numeric factor for the relationship, for instance to express that
                the salt of a substance has some percentage of the active
                substance in relation to some other.
            amountRatio:
              $ref: "#/components/schemas/Ratio"
              description: A numeric factor for the relationship, for instance to express that
                the salt of a substance has some percentage of the active
                substance in relation to some other.
            amountString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A numeric factor for the relationship, for instance to express that
                the salt of a substance has some percentage of the active
                substance in relation to some other.
            ratioHighLimitAmount:
              $ref: "#/components/schemas/Ratio"
              description: For use when the numeric has an uncertain range.
            comparator:
              $ref: "#/components/schemas/CodeableConcept"
              description: An operator for the amount, for example "average", "approximately",
                "less than".
            source:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Supporting literature.
          required:
            - type
    SubstanceDefinition_SourceMaterial:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: "A classification that provides the origin of the raw material.
                Example: cat hair would be an Animal source type."
            genus:
              $ref: "#/components/schemas/CodeableConcept"
              description: The genus of an organism, typically referring to the Latin epithet
                of the genus element of the plant/animal scientific name.
            species:
              $ref: "#/components/schemas/CodeableConcept"
              description: The species of an organism, typically referring to the Latin
                epithet of the species of the plant/animal.
            part:
              $ref: "#/components/schemas/CodeableConcept"
              description: An anatomical origin of the source material within an organism.
            countryOfOrigin:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The country or countries where the material is harvested.
    SubstanceDefinition_Structure:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            stereochemistry:
              $ref: "#/components/schemas/CodeableConcept"
              description: Stereochemistry type.
            opticalActivity:
              $ref: "#/components/schemas/CodeableConcept"
              description: Optical activity type.
            molecularFormula:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Molecular formula of this substance, typically using the Hill
                system.
            molecularFormulaByMoiety:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Specified per moiety according to the Hill system, i.e. first C,
                then H, then alphabetical, each moiety separated by a dot.
            molecularWeight:
              $ref: "#/components/schemas/SubstanceDefinition_MolecularWeight"
              description: The molecular weight or weight range (for proteins, polymers or
                nucleic acids).
            technique:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: "The method used to elucidate the structure or characterization of
                  the drug substance. Examples: X&ndash;ray, HPLC, NMR, Peptide
                  mapping, Ligand binding assay."
            sourceDocument:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The source of information about the structure.
            representation:
              type: array
              items:
                $ref: "#/components/schemas/SubstanceDefinition_Structure_Representation"
                description: A depiction of the structure or characterization of the substance.
    SubstanceDefinition_Structure_Representation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The kind of structural representation (e.g. full, partial).
            representation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The structural representation or characterization as a text string
                in a standard format.
            format:
              $ref: "#/components/schemas/CodeableConcept"
              description: The format of the representation e.g. InChI, SMILES, MOLFILE, CDX,
                SDF, PDB, mmCIF. The logical content type rather than the
                physical file format of a document.
            document:
              $ref: "#/components/schemas/Reference"
              description: An attached file with the structural representation or
                characterization e.g. a molecular structure graphic of the
                substance, a JCAMP or AnIML file.
    Task:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: The business identifier for this task.
            instantiatesCanonical:
              type: string
              pattern: \\S*
              description: The URL pointing to a *FHIR*&ndash;defined protocol, guideline,
                orderset or other definition that is adhered to in whole or in
                part by this Task.
            instantiatesUri:
              type: string
              pattern: \\S*
              description: The URL pointing to an *externally* maintained  protocol,
                guideline, orderset or other definition that is adhered to in
                whole or in part by this Task.
            basedOn:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: BasedOn refers to a higher&ndash;level authorization that triggered
                  the creation of the task.  It references a "request" resource
                  such as a ServiceRequest, MedicationRequest, ServiceRequest,
                  CarePlan, etc. which is distinct from the "request" resource
                  the task is seeking to fulfill.  This latter resource is
                  referenced by FocusOn.  For example, based on a ServiceRequest
                  (= BasedOn), a task is created to fulfill a procedureRequest (
                  = FocusOn ) to collect a specimen from a patient.
            groupIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: An identifier that links together multiple tasks and other requests
                that were created in the same context.
            partOf:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Task that this particular task is part of.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current status of the task.
            statusReason:
              $ref: "#/components/schemas/CodeableConcept"
              description: An explanation as to why this task is held, failed, was refused,
                etc.
            businessStatus:
              $ref: "#/components/schemas/CodeableConcept"
              description: Contains business&ndash;specific nuances of the business state.
            intent:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates the "level" of actionability associated with the Task,
                i.e. i+R[9]Cs this a proposed task, a planned task, an
                actionable task, etc.
            priority:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Indicates how quickly the Task should be addressed with respect to
                other requests.
            code:
              $ref: "#/components/schemas/CodeableConcept"
              description: A name or code (or both) briefly describing what the task involves.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free&ndash;text description of what is to be performed.
            focus:
              $ref: "#/components/schemas/Reference"
              description: The request being actioned or the resource being manipulated by
                this task.
            for:
              $ref: "#/components/schemas/Reference"
              description: The entity who benefits from the performance of the service
                specified in the task (e.g., the patient).
            encounter:
              $ref: "#/components/schemas/Reference"
              description: The healthcare event  (e.g. a patient and healthcare provider
                interaction) during which this task was created.
            executionPeriod:
              $ref: "#/components/schemas/Period"
              description: Identifies the time action was first taken against the task (start)
                and/or the time final action was taken against the task prior to
                marking it as completed (end).
            authoredOn:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date and time this task was created.
            lastModified:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date and time of last modification to this task.
            requester:
              $ref: "#/components/schemas/Reference"
              description: The creator of the task.
            performerType:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The kind of participant that should perform the task.
            owner:
              $ref: "#/components/schemas/Reference"
              description: Individual organization or Device currently responsible for task
                execution.
            location:
              $ref: "#/components/schemas/Reference"
              description: Principal physical location where the this task is performed.
            reasonCode:
              $ref: "#/components/schemas/CodeableConcept"
              description: A description or code indicating why this task needs to be
                performed.
            reasonReference:
              $ref: "#/components/schemas/Reference"
              description: A resource reference indicating why this task needs to be
                performed.
            insurance:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Insurance plans, coverage extensions, pre&ndash;authorizations
                  and/or pre&ndash;determinations that may be relevant to the
                  Task.
            note:
              type: array
              items:
                $ref: "#/components/schemas/Annotation"
                description: Free&ndash;text information captured about the task as it
                  progresses.
            relevantHistory:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: Links to Provenance records for past versions of this Task that
                  identify key state transitions or updates that are likely to
                  be relevant to a user looking at the current version of the
                  task.
            restriction:
              $ref: "#/components/schemas/Task_Restriction"
              description: If the Task.focus is a request resource and the task is seeking
                fulfillment (i.e. is asking for the request to be actioned),
                this element identifies any limitations on what parts of the
                referenced request should be actioned.
            input:
              type: array
              items:
                $ref: "#/components/schemas/Task_Input"
                description: Additional information that may be needed in the execution of the
                  task.
            output:
              type: array
              items:
                $ref: "#/components/schemas/Task_Output"
                description: Outputs produced by the Task.
          required:
            - status
            - intent
      example:
        resourceType: Task
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _intent:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    Task_Input:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: A code or description indicating how the input is intended to be
                used as part of the task execution.
            valueBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: The value of the input parameter as a basic type.
            valueBoolean:
              type: boolean
              description: The value of the input parameter as a basic type.
            valueCanonical:
              type: string
              pattern: \\S*
              description: The value of the input parameter as a basic type.
            valueCode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The value of the input parameter as a basic type.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The value of the input parameter as a basic type.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The value of the input parameter as a basic type.
            valueDecimal:
              type: number
              description: The value of the input parameter as a basic type.
            valueId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The value of the input parameter as a basic type.
            valueInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The value of the input parameter as a basic type.
            valueInteger:
              type: integer
              format: int32
              description: The value of the input parameter as a basic type.
            valueMarkdown:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value of the input parameter as a basic type.
            valueOid:
              type: string
              pattern: urn:oid:[0-2](\\.(0|[1-9][0-9]*))+
              description: The value of the input parameter as a basic type.
            valuePositiveInt:
              type: integer
              format: int32
              description: The value of the input parameter as a basic type.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value of the input parameter as a basic type.
            valueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: The value of the input parameter as a basic type.
            valueUnsignedInt:
              type: integer
              format: int32
              description: The value of the input parameter as a basic type.
            valueUri:
              type: string
              pattern: \\S*
              description: The value of the input parameter as a basic type.
            valueUrl:
              type: string
              pattern: \\S*
              description: The value of the input parameter as a basic type.
            valueUuid:
              type: string
              pattern: urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
              description: The value of the input parameter as a basic type.
            valueAddress:
              $ref: "#/components/schemas/Address"
              description: The value of the input parameter as a basic type.
            valueAge:
              $ref: "#/components/schemas/Age"
              description: The value of the input parameter as a basic type.
            valueAnnotation:
              $ref: "#/components/schemas/Annotation"
              description: The value of the input parameter as a basic type.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: The value of the input parameter as a basic type.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The value of the input parameter as a basic type.
            valueCoding:
              $ref: "#/components/schemas/Coding"
              description: The value of the input parameter as a basic type.
            valueContactPoint:
              $ref: "#/components/schemas/ContactPoint"
              description: The value of the input parameter as a basic type.
            valueCount:
              $ref: "#/components/schemas/Count"
              description: The value of the input parameter as a basic type.
            valueDistance:
              $ref: "#/components/schemas/Distance"
              description: The value of the input parameter as a basic type.
            valueDuration:
              $ref: "#/components/schemas/Duration"
              description: The value of the input parameter as a basic type.
            valueHumanName:
              $ref: "#/components/schemas/HumanName"
              description: The value of the input parameter as a basic type.
            valueIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: The value of the input parameter as a basic type.
            valueMoney:
              $ref: "#/components/schemas/Money"
              description: The value of the input parameter as a basic type.
            valuePeriod:
              $ref: "#/components/schemas/Period"
              description: The value of the input parameter as a basic type.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The value of the input parameter as a basic type.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: The value of the input parameter as a basic type.
            valueRatio:
              $ref: "#/components/schemas/Ratio"
              description: The value of the input parameter as a basic type.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: The value of the input parameter as a basic type.
            valueSampledData:
              $ref: "#/components/schemas/SampledData"
              description: The value of the input parameter as a basic type.
            valueSignature:
              $ref: "#/components/schemas/Signature"
              description: The value of the input parameter as a basic type.
            valueTiming:
              $ref: "#/components/schemas/Timing"
              description: The value of the input parameter as a basic type.
            valueContactDetail:
              $ref: "#/components/schemas/ContactDetail"
              description: The value of the input parameter as a basic type.
            valueRelatedArtifact:
              $ref: "#/components/schemas/RelatedArtifact"
              description: The value of the input parameter as a basic type.
            valueUsageContext:
              $ref: "#/components/schemas/UsageContext"
              description: The value of the input parameter as a basic type.
            valueMeta:
              $ref: "#/components/schemas/Meta"
              description: The value of the input parameter as a basic type.
          required:
            - type
    Task_Output:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/CodeableConcept"
              description: The name of the Output parameter.
            valueBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: The value of the Output parameter as a basic type.
            valueBoolean:
              type: boolean
              description: The value of the Output parameter as a basic type.
            valueCanonical:
              type: string
              pattern: \\S*
              description: The value of the Output parameter as a basic type.
            valueCode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The value of the Output parameter as a basic type.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The value of the Output parameter as a basic type.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The value of the Output parameter as a basic type.
            valueDecimal:
              type: number
              description: The value of the Output parameter as a basic type.
            valueId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The value of the Output parameter as a basic type.
            valueInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: The value of the Output parameter as a basic type.
            valueInteger:
              type: integer
              format: int32
              description: The value of the Output parameter as a basic type.
            valueMarkdown:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value of the Output parameter as a basic type.
            valueOid:
              type: string
              pattern: urn:oid:[0-2](\\.(0|[1-9][0-9]*))+
              description: The value of the Output parameter as a basic type.
            valuePositiveInt:
              type: integer
              format: int32
              description: The value of the Output parameter as a basic type.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value of the Output parameter as a basic type.
            valueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: The value of the Output parameter as a basic type.
            valueUnsignedInt:
              type: integer
              format: int32
              description: The value of the Output parameter as a basic type.
            valueUri:
              type: string
              pattern: \\S*
              description: The value of the Output parameter as a basic type.
            valueUrl:
              type: string
              pattern: \\S*
              description: The value of the Output parameter as a basic type.
            valueUuid:
              type: string
              pattern: urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
              description: The value of the Output parameter as a basic type.
            valueAddress:
              $ref: "#/components/schemas/Address"
              description: The value of the Output parameter as a basic type.
            valueAge:
              $ref: "#/components/schemas/Age"
              description: The value of the Output parameter as a basic type.
            valueAnnotation:
              $ref: "#/components/schemas/Annotation"
              description: The value of the Output parameter as a basic type.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: The value of the Output parameter as a basic type.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: The value of the Output parameter as a basic type.
            valueCoding:
              $ref: "#/components/schemas/Coding"
              description: The value of the Output parameter as a basic type.
            valueContactPoint:
              $ref: "#/components/schemas/ContactPoint"
              description: The value of the Output parameter as a basic type.
            valueCount:
              $ref: "#/components/schemas/Count"
              description: The value of the Output parameter as a basic type.
            valueDistance:
              $ref: "#/components/schemas/Distance"
              description: The value of the Output parameter as a basic type.
            valueDuration:
              $ref: "#/components/schemas/Duration"
              description: The value of the Output parameter as a basic type.
            valueHumanName:
              $ref: "#/components/schemas/HumanName"
              description: The value of the Output parameter as a basic type.
            valueIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: The value of the Output parameter as a basic type.
            valueMoney:
              $ref: "#/components/schemas/Money"
              description: The value of the Output parameter as a basic type.
            valuePeriod:
              $ref: "#/components/schemas/Period"
              description: The value of the Output parameter as a basic type.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: The value of the Output parameter as a basic type.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: The value of the Output parameter as a basic type.
            valueRatio:
              $ref: "#/components/schemas/Ratio"
              description: The value of the Output parameter as a basic type.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: The value of the Output parameter as a basic type.
            valueSampledData:
              $ref: "#/components/schemas/SampledData"
              description: The value of the Output parameter as a basic type.
            valueSignature:
              $ref: "#/components/schemas/Signature"
              description: The value of the Output parameter as a basic type.
            valueTiming:
              $ref: "#/components/schemas/Timing"
              description: The value of the Output parameter as a basic type.
            valueContactDetail:
              $ref: "#/components/schemas/ContactDetail"
              description: The value of the Output parameter as a basic type.
            valueRelatedArtifact:
              $ref: "#/components/schemas/RelatedArtifact"
              description: The value of the Output parameter as a basic type.
            valueUsageContext:
              $ref: "#/components/schemas/UsageContext"
              description: The value of the Output parameter as a basic type.
            valueMeta:
              $ref: "#/components/schemas/Meta"
              description: The value of the Output parameter as a basic type.
          required:
            - type
    Task_Restriction:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            repetitions:
              type: integer
              format: int32
              description: Indicates the number of times the requested action should occur.
            period:
              $ref: "#/components/schemas/Period"
              description: Over what time&ndash;period is fulfillment sought.
            recipient:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: For requests that are targeted to more than on potential
                  recipient/target, for whom is fulfillment sought?
    TerminologyCapabilities:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this terminology
                capabilities when it is referenced in a specification, model,
                design or an instance; also called its canonical identifier.
                This SHOULD be globally unique and SHOULD be a literal address
                at which at which an authoritative instance of this terminology
                capabilities is (or will be) published. This URL can be the
                target of a canonical reference. It SHALL remain the same when
                the terminology capabilities is stored on different servers.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the
                terminology capabilities when it is referenced in a
                specification, model, design or instance. This is an arbitrary
                value managed by the terminology capabilities author and is not
                expected to be globally unique. For example, it might be a
                timestamp (e.g. yyyymmdd) if a managed version is not available.
                There is also no expectation that versions can be placed in a
                lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the terminology capabilities.
                This name should be usable as an identifier for the module by
                machine processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the terminology
                capabilities.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this terminology capabilities. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this terminology capabilities is
                authored for testing purposes (or
                education/evaluation/marketing) and is not intended to be used
                for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the terminology capabilities
                was published. The date must change when the business version
                changes and it must change if the status code changes. In
                addition, it should change when the substantive content of the
                terminology capabilities changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the
                terminology capabilities.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the terminology
                capabilities from a consumer's perspective. Typically, this is
                used when the capability statement describes a desired rather
                than an actual solution, for example as a formal expression of
                requirements as part of an RFP.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate terminology
                  capabilities instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the terminology capabilities
                  is intended to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this terminology capabilities is needed and why
                it has been designed as it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the terminology capabilities
                and/or its contents. Copyright statements are generally legal
                restrictions on the use and publishing of the terminology
                capabilities.
            kind:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The way that this statement is intended to be used, to describe an
                actual running instance of software, a particular product (kind,
                not instance of software) or a class of implementation (e.g. a
                desired purchase).
            software:
              $ref: "#/components/schemas/TerminologyCapabilities_Software"
              description: Software that is covered by this terminology capability
                statement.  It is used when the statement describes the
                capabilities of a particular software version, independent of an
                installation.
            implementation:
              $ref: "#/components/schemas/TerminologyCapabilities_Implementation"
              description: Identifies a specific implementation instance that is described by
                the terminology capability statement &ndash; i.e. a particular
                installation, rather than the capabilities of a software
                program.
            lockedDate:
              type: boolean
              description: Whether the server supports lockedDate.
            codeSystem:
              type: array
              items:
                $ref: "#/components/schemas/TerminologyCapabilities_CodeSystem"
                description: Identifies a code system that is supported by the server. If there
                  is a no code system URL, then this declares the general
                  assumptions a client can make about support for any CodeSystem
                  resource.
            expansion:
              $ref: "#/components/schemas/TerminologyCapabilities_Expansion"
              description: Information about the
                [ValueSet/$expand](valueset&ndash;operation&ndash;expand.html)
                operation.
            codeSearch:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The degree to which the server supports the code search parameter
                on ValueSet, if it is supported.
            validateCode:
              $ref: "#/components/schemas/TerminologyCapabilities_ValidateCode"
              description: Information about the
                [ValueSet/$validate&ndash;code](valueset&ndash;operation&ndash;validate&ndash;code.html)
                operation.
            translation:
              $ref: "#/components/schemas/TerminologyCapabilities_Translation"
              description: Information about the
                [ConceptMap/$translate](conceptmap&ndash;operation&ndash;translate.html)
                operation.
            closure:
              $ref: "#/components/schemas/TerminologyCapabilities_Closure"
              description: Whether the $closure operation is supported.
          required:
            - status
            - date
            - kind
      example:
        resourceType: TerminologyCapabilities
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _date:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _kind:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    TerminologyCapabilities_Closure:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            translation:
              type: boolean
              description: If cross&ndash;system closure is supported.
    TerminologyCapabilities_CodeSystem:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            uri:
              type: string
              pattern: \\S*
              description: URI for the Code System.
            version:
              type: array
              items:
                $ref: "#/components/schemas/TerminologyCapabilities_CodeSystem_Version"
                description: For the code system, a list of versions that are supported by the
                  server.
            subsumption:
              type: boolean
              description: True if subsumption is supported for this version of the code
                system.
    TerminologyCapabilities_CodeSystem_Version:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: For version&ndash;less code systems, there should be a single
                version with no identifier.
            isDefault:
              type: boolean
              description: If this is the default version for this code system.
            compositional:
              type: boolean
              description: If the compositional grammar defined by the code system is
                supported.
            language:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Language Displays supported.
            filter:
              type: array
              items:
                $ref: "#/components/schemas/TerminologyCapabilities_CodeSystem_Version_Filter"
                description: Filter Properties supported.
            property:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Properties supported for $lookup.
    TerminologyCapabilities_CodeSystem_Version_Filter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Code of the property supported.
            op:
              type: array
              items:
                type: string
                pattern: "[^\\s]+(\\s[^\\s]+)*"
                description: Operations supported for the property.
              minItems: 1
          required:
            - code
            - op
    TerminologyCapabilities_Expansion:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            hierarchical:
              type: boolean
              description: Whether the server can return nested value sets.
            paging:
              type: boolean
              description: Whether the server supports paging on expansion.
            incomplete:
              type: boolean
              description: Allow request for incomplete expansions?
            parameter:
              type: array
              items:
                $ref: "#/components/schemas/TerminologyCapabilities_Expansion_Parameter"
                description: Supported expansion parameter.
            textFilter:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Documentation about text searching works.
    TerminologyCapabilities_Expansion_Parameter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Expansion Parameter name.
            documentation:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of support for parameter.
          required:
            - name
    TerminologyCapabilities_Implementation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Information about the specific installation that this terminology
                capability statement relates to.
            url:
              type: string
              pattern: \\S*
              description: An absolute base URL for the implementation.
          required:
            - description
    TerminologyCapabilities_Software:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Name the software is known by.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The version identifier for the software covered by this statement.
          required:
            - name
    TerminologyCapabilities_Translation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            needsMap:
              type: boolean
              description: Whether the client must identify the map.
          required:
            - needsMap
    TerminologyCapabilities_ValidateCode:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            translations:
              type: boolean
              description: Whether translations are validated.
          required:
            - translations
    TestReport:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: Identifier for the TestScript assigned for external purposes
                outside the context of FHIR.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language name identifying the executed
                TestScript.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The current state of this test report.
            testScript:
              $ref: "#/components/schemas/Reference"
              description: Ideally this is an absolute URL that is used to identify the
                version&ndash;specific TestScript that was executed, matching
                the `TestScript.url`.
            result:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The overall result from the execution of the TestScript.
            score:
              type: number
              description: The final score (percentage of tests passed) resulting from the
                execution of the TestScript.
            tester:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Name of the tester producing this report (Organization or
                individual).
            issued:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When the TestScript was executed and this TestReport was generated.
            participant:
              type: array
              items:
                $ref: "#/components/schemas/TestReport_Participant"
                description: A participant in the test execution, either the execution engine, a
                  client, or a server.
            setup:
              $ref: "#/components/schemas/TestReport_Setup"
              description: The results of the series of required setup operations before the
                tests were executed.
            test:
              type: array
              items:
                $ref: "#/components/schemas/TestReport_Test"
                description: A test executed from the test script.
            teardown:
              $ref: "#/components/schemas/TestReport_Teardown"
              description: The results of the series of operations required to clean up after
                all the tests were executed (successfully or otherwise).
          required:
            - status
            - testScript
            - result
      example:
        resourceType: TestReport
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        testScript:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _result:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    TestReport_Participant:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of participant.
            uri:
              type: string
              pattern: \\S*
              description: The uri of the participant. An absolute URL is preferred.
            display:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The display name of the participant.
          required:
            - type
            - uri
    TestReport_Setup:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            action:
              type: array
              items:
                $ref: "#/components/schemas/TestReport_Setup_Action"
                description: Action would contain either an operation or an assertion.
              minItems: 1
          required:
            - action
    TestReport_Setup_Action:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            operation:
              $ref: "#/components/schemas/TestReport_Setup_Action_Operation"
              description: The operation performed.
            assert:
              $ref: "#/components/schemas/TestReport_Setup_Action_Assert"
              description: The results of the assertion performed on the previous operations.
    TestReport_Setup_Action_Assert:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            result:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The result of this assertion.
            message:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An explanatory message associated with the result.
            detail:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A link to further details on the result.
          required:
            - result
    TestReport_Setup_Action_Operation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            result:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The result of this operation.
            message:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: An explanatory message associated with the result.
            detail:
              type: string
              pattern: \\S*
              description: A link to further details on the result.
          required:
            - result
    TestReport_Teardown:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            action:
              type: array
              items:
                $ref: "#/components/schemas/TestReport_Teardown_Action"
                description: The teardown action will only contain an operation.
              minItems: 1
          required:
            - action
    TestReport_Teardown_Action:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            operation:
              $ref: "#/components/schemas/TestReport_Setup_Action_Operation"
              description: The operation performed.
          required:
            - operation
    TestReport_Test:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of this test used for tracking/logging purposes by test
                engines.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short description of the test used by test engines for tracking
                and reporting purposes.
            action:
              type: array
              items:
                $ref: "#/components/schemas/TestReport_Test_Action"
                description: Action would contain either an operation or an assertion.
              minItems: 1
          required:
            - action
    TestReport_Test_Action:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            operation:
              $ref: "#/components/schemas/TestReport_Setup_Action_Operation"
              description: The operation performed.
            assert:
              $ref: "#/components/schemas/TestReport_Setup_Action_Assert"
              description: The results of the assertion performed on the previous operations.
    TestScript:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this test script when it
                is referenced in a specification, model, design or an instance;
                also called its canonical identifier. This SHOULD be globally
                unique and SHOULD be a literal address at which at which an
                authoritative instance of this test script is (or will be)
                published. This URL can be the target of a canonical reference.
                It SHALL remain the same when the test script is stored on
                different servers.
            identifier:
              $ref: "#/components/schemas/Identifier"
              description: A formal identifier that is used to identify this test script when
                it is represented in other formats, or referenced in a
                specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the test
                script when it is referenced in a specification, model, design
                or instance. This is an arbitrary value managed by the test
                script author and is not expected to be globally unique. For
                example, it might be a timestamp (e.g. yyyymmdd) if a managed
                version is not available. There is also no expectation that
                versions can be placed in a lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the test script. This name
                should be usable as an identifier for the module by machine
                processing applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the test
                script.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this test script. Enables tracking the
                life&ndash;cycle of the content.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this test script is authored for
                testing purposes (or education/evaluation/marketing) and is not
                intended to be used for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date  (and optionally time) when the test script was published.
                The date must change when the business version changes and it
                must change if the status code changes. In addition, it should
                change when the substantive content of the test script changes.
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the test
                script.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the test script from a
                consumer's perspective.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate test script
                  instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the test script is intended
                  to be used.
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this test script is needed and why it has been
                designed as it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the test script and/or its
                contents. Copyright statements are generally legal restrictions
                on the use and publishing of the test script.
            origin:
              type: array
              items:
                $ref: "#/components/schemas/TestScript_Origin"
                description: An abstract server used in operations within this test script in
                  the origin element.
            destination:
              type: array
              items:
                $ref: "#/components/schemas/TestScript_Destination"
                description: An abstract server used in operations within this test script in
                  the destination element.
            metadata:
              $ref: "#/components/schemas/TestScript_Metadata"
              description: The required capability must exist and are assumed to function
                correctly on the FHIR server being tested.
            fixture:
              type: array
              items:
                $ref: "#/components/schemas/TestScript_Fixture"
                description: Fixture in the test script &ndash; by reference (uri). All fixtures
                  are required for the test script to execute.
            profile:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: The type of origin profile the test system supports.
              minItems: 1
            variable:
              type: array
              items:
                $ref: "#/components/schemas/TestScript_Variable"
                description: Variable is set based either on element value in response body or
                  on header field value in the response headers.
            setup:
              $ref: "#/components/schemas/TestScript_Setup"
              description: A series of required setup operations before tests are executed.
            test:
              type: array
              items:
                $ref: "#/components/schemas/TestScript_Test"
                description: A test in this script.
            teardown:
              $ref: "#/components/schemas/TestScript_Teardown"
              description: A series of operations required to clean up after all the tests are
                executed (successfully or otherwise).
          required:
            - url
            - name
            - status
      example:
        resourceType: TestScript
        meta:
          tag:
            - code: ibm/minimal
        _url:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _name:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    TestScript_Destination:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            index:
              type: integer
              format: int32
              description: Abstract name given to a destination server in this test
                script.  The name is provided as a number starting at 1.
            profile:
              $ref: "#/components/schemas/Coding"
              description: The type of destination profile the test system supports.
          required:
            - index
            - profile
    TestScript_Fixture:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            autocreate:
              type: boolean
              description: Whether or not to implicitly create the fixture during setup. If
                true, the fixture is automatically created on each server being
                tested during setup, therefore no create operation is required
                for this fixture in the TestScript.setup section.
            autodelete:
              type: boolean
              description: Whether or not to implicitly delete the fixture during teardown. If
                true, the fixture is automatically deleted on each server being
                tested during teardown, therefore no delete operation is
                required for this fixture in the TestScript.teardown section.
            resource:
              $ref: "#/components/schemas/Reference"
              description: Reference to the resource (containing the contents of the resource
                needed for operations).
          required:
            - autocreate
            - autodelete
    TestScript_Metadata:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            link:
              type: array
              items:
                $ref: "#/components/schemas/TestScript_Metadata_Link"
                description: A link to the FHIR specification that this test is covering.
            capability:
              type: array
              items:
                $ref: "#/components/schemas/TestScript_Metadata_Capability"
                description: Capabilities that must exist and are assumed to function correctly
                  on the FHIR server being tested.
              minItems: 1
          required:
            - capability
    TestScript_Metadata_Capability:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            required:
              type: boolean
              description: Whether or not the test execution will require the given
                capabilities of the server in order for this test script to
                execute.
            validated:
              type: boolean
              description: Whether or not the test execution will validate the given
                capabilities of the server in order for this test script to
                execute.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Description of the capabilities that this test script is requiring
                the server to support.
            origin:
              type: array
              items:
                type: integer
                format: int32
                description: Which origin server these requirements apply to.
            destination:
              type: integer
              format: int32
              description: Which server these requirements apply to.
            link:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Links to the FHIR specification that describes this interaction and
                  the resources involved in more detail.
            capabilities:
              type: string
              pattern: \\S*
              description: Minimum capabilities required of server for test script to execute
                successfully.   If server does not meet at a minimum the
                referenced capability statement, then all tests in this script
                are skipped.
          required:
            - required
            - validated
            - capabilities
    TestScript_Metadata_Link:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: URL to a particular requirement or feature within the FHIR
                specification.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Short description of the link.
          required:
            - url
    TestScript_Origin:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            index:
              type: integer
              format: int32
              description: Abstract name given to an origin server in this test script.  The
                name is provided as a number starting at 1.
            profile:
              $ref: "#/components/schemas/Coding"
              description: The type of origin profile the test system supports.
          required:
            - index
            - profile
    TestScript_Setup:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            action:
              type: array
              items:
                $ref: "#/components/schemas/TestScript_Setup_Action"
                description: Action would contain either an operation or an assertion.
              minItems: 1
          required:
            - action
    TestScript_Setup_Action:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            operation:
              $ref: "#/components/schemas/TestScript_Setup_Action_Operation"
              description: The operation to perform.
            assert:
              $ref: "#/components/schemas/TestScript_Setup_Action_Assert"
              description: Evaluates the results of previous operations to determine if the
                server under test behaves appropriately.
    TestScript_Setup_Action_Assert:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            label:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The label would be used for tracking/logging purposes by test
                engines.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The description would be used by test engines for tracking and
                reporting purposes.
            direction:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The direction to use for the assertion.
            compareToSourceId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Id of the source fixture used as the contents to be evaluated by
                either the "source/expression" or "sourceId/path" definition.
            compareToSourceExpression:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The FHIRPath expression to evaluate against the source fixture.
                When compareToSourceId is defined, either
                compareToSourceExpression or compareToSourcePath must be
                defined, but not both.
            compareToSourcePath:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: XPath or JSONPath expression to evaluate against the source
                fixture. When compareToSourceId is defined, either
                compareToSourceExpression or compareToSourcePath must be
                defined, but not both.
            contentType:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The mime&ndash;type contents to compare against the request or
                response message 'Content&ndash;Type' header.
            expression:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The FHIRPath expression to be evaluated against the request or
                response message contents &ndash; HTTP headers and payload.
            headerField:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The HTTP header field name e.g. 'Location'.
            minimumId:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The ID of a fixture.  Asserts that the response contains at a
                minimum the fixture specified by minimumId.
            navigationLinks:
              type: boolean
              description: Whether or not the test execution performs validation on the bundle
                navigation links.
            operator:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The operator type defines the conditional behavior of the assert.
                If not defined, the default is equals.
            path:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The XPath or JSONPath expression to be evaluated against the
                fixture representing the response received from server.
            requestMethod:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The request method or HTTP operation code to compare against that
                used by the client system under test.
            requestURL:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value to use in a comparison against the request URL path
                string.
            resource:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of the resource.  See
                http://build.fhir.org/resourcelist.html.
            response:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: okay | created | noContent | notModified | bad | forbidden |
                notFound | methodNotAllowed | conflict | gone |
                preconditionFailed | unprocessable.
            responseCode:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value of the HTTP response code to be tested.
            sourceId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Fixture to evaluate the XPath/JSONPath expression or the
                headerField  against.
            validateProfileId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The ID of the Profile to validate against.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value to compare to.
            warningOnly:
              type: boolean
              description: Whether or not the test execution will produce a warning only on
                error for this assert.
          required:
            - warningOnly
    TestScript_Setup_Action_Operation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            type:
              $ref: "#/components/schemas/Coding"
              description: Server interaction or operation type.
            resource:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The type of the resource.  See
                http://build.fhir.org/resourcelist.html.
            label:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The label would be used for tracking/logging purposes by test
                engines.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The description would be used by test engines for tracking and
                reporting purposes.
            accept:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The mime&ndash;type to use for RESTful operation in the 'Accept'
                header.
            contentType:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The mime&ndash;type to use for RESTful operation in the
                'Content&ndash;Type' header.
            destination:
              type: integer
              format: int32
              description: The server where the request message is destined for.  Must be one
                of the server numbers listed in TestScript.destination section.
            encodeRequestUrl:
              type: boolean
              description: Whether or not to implicitly send the request url in encoded
                format. The default is true to match the standard RESTful client
                behavior. Set to false when communicating with a server that
                does not support encoded url paths.
            method:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The HTTP method the test engine MUST use for this operation
                regardless of any other operation details.
            origin:
              type: integer
              format: int32
              description: The server where the request message originates from.  Must be one
                of the server numbers listed in TestScript.origin section.
            params:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Path plus parameters after [type].  Used to set parts of the
                request URL explicitly.
            requestHeader:
              type: array
              items:
                $ref: "#/components/schemas/TestScript_Setup_Action_Operation_RequestHeader"
                description: Header elements would be used to set HTTP headers.
            requestId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The fixture id (maybe new) to map to the request.
            responseId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The fixture id (maybe new) to map to the response.
            sourceId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: The id of the fixture used as the body of a PUT or POST request.
            targetId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Id of fixture used for extracting the [id],  [type], and [vid] for
                GET requests.
            url:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Complete request URL.
          required:
            - encodeRequestUrl
    TestScript_Setup_Action_Operation_RequestHeader:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            field:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The HTTP header field e.g. "Accept".
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value of the header e.g. "application/fhir+xml".
          required:
            - field
            - value
    TestScript_Teardown:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            action:
              type: array
              items:
                $ref: "#/components/schemas/TestScript_Teardown_Action"
                description: The teardown action will only contain an operation.
              minItems: 1
          required:
            - action
    TestScript_Teardown_Action:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            operation:
              $ref: "#/components/schemas/TestScript_Setup_Action_Operation"
              description: The operation to perform.
          required:
            - operation
    TestScript_Test:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of this test used for tracking/logging purposes by test
                engines.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short description of the test used by test engines for tracking
                and reporting purposes.
            action:
              type: array
              items:
                $ref: "#/components/schemas/TestScript_Test_Action"
                description: Action would contain either an operation or an assertion.
              minItems: 1
          required:
            - action
    TestScript_Test_Action:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            operation:
              $ref: "#/components/schemas/TestScript_Setup_Action_Operation"
              description: The operation to perform.
            assert:
              $ref: "#/components/schemas/TestScript_Setup_Action_Assert"
              description: Evaluates the results of previous operations to determine if the
                server under test behaves appropriately.
    TestScript_Variable:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Descriptive name for this variable.
            defaultValue:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A default, hard&ndash;coded, or user&ndash;defined value for this
                variable.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the variable and its
                purpose.
            expression:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The FHIRPath expression to evaluate against the fixture body. When
                variables are defined, only one of either expression,
                headerField or path must be specified.
            headerField:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Will be used to grab the HTTP header field value from the headers
                that sourceId is pointing to.
            hint:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Displayable text string with hint help information to the user when
                entering a default value.
            path:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: XPath or JSONPath to evaluate against the fixture body.  When
                variables are defined, only one of either expression,
                headerField or path must be specified.
            sourceId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Fixture to evaluate the XPath/JSONPath expression or the
                headerField  against within this variable.
          required:
            - name
    ValueSet:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            url:
              type: string
              pattern: \\S*
              description: An absolute URI that is used to identify this value set when it is
                referenced in a specification, model, design or an instance;
                also called its canonical identifier. This SHOULD be globally
                unique and SHOULD be a literal address at which at which an
                authoritative instance of this value set is (or will be)
                published. This URL can be the target of a canonical reference.
                It SHALL remain the same when the value set is stored on
                different servers.
            identifier:
              type: array
              items:
                $ref: "#/components/schemas/Identifier"
                description: A formal identifier that is used to identify this value set when it
                  is represented in other formats, or referenced in a
                  specification, model, design or an instance.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The identifier that is used to identify this version of the value
                set when it is referenced in a specification, model, design or
                instance. This is an arbitrary value managed by the value set
                author and is not expected to be globally unique. For example,
                it might be a timestamp (e.g. yyyymmdd) if a managed version is
                not available. There is also no expectation that versions can be
                placed in a lexicographical sequence.
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A natural language name identifying the value set. This name should
                be usable as an identifier for the module by machine processing
                applications such as code generation.
            title:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A short, descriptive, user&ndash;friendly title for the value set.
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The status of this value set. Enables tracking the life&ndash;cycle
                of the content. The status of the value set applies to the value
                set definition (ValueSet.compose) and the associated ValueSet
                metadata. Expansions do not have a state.
            experimental:
              type: boolean
              description: A Boolean value to indicate that this value set is authored for
                testing purposes (or education/evaluation/marketing) and is not
                intended to be used for genuine usage.
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date (and optionally time) when the value set was created or
                revised (e.g. the 'content logical definition').
            publisher:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the organization or individual that published the value
                set.
            contact:
              type: array
              items:
                $ref: "#/components/schemas/ContactDetail"
                description: Contact details to assist a user in finding and communicating with
                  the publisher.
            description:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A free text natural language description of the value set from a
                consumer's perspective. The textual description specifies the
                span of meanings for concepts to be included within the Value
                Set Expansion, and also may specify the intended use and
                limitations of the Value Set.
            useContext:
              type: array
              items:
                $ref: "#/components/schemas/UsageContext"
                description: The content was developed with a focus and intent of supporting the
                  contexts that are listed. These contexts may be general
                  categories (gender, age, ...) or may be references to specific
                  programs (insurance plans, studies, ...) and may be used to
                  assist with indexing and searching for appropriate value set
                  instances.
            jurisdiction:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: A legal or geographic region in which the value set is intended to
                  be used.
            immutable:
              type: boolean
              description: "If this is set to 'true', then no new versions of the content
                logical definition can be created.  Note: Other metadata might
                still change."
            purpose:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Explanation of why this value set is needed and why it has been
                designed as it has.
            copyright:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A copyright statement relating to the value set and/or its
                contents. Copyright statements are generally legal restrictions
                on the use and publishing of the value set.
            compose:
              $ref: "#/components/schemas/ValueSet_Compose"
              description: A set of criteria that define the contents of the value set by
                including or excluding codes selected from the specified code
                system(s) that the value set draws from. This is also known as
                the Content Logical Definition (CLD).
            expansion:
              $ref: "#/components/schemas/ValueSet_Expansion"
              description: A value set can also be "expanded", where the value set is turned
                into a simple collection of enumerated codes. This element holds
                the expansion, if it has been performed.
          required:
            - status
      example:
        resourceType: ValueSet
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    ValueSet_Compose:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            lockedDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The Locked Date is  the effective date that is used to determine
                the version of all referenced Code Systems and Value Set
                Definitions included in the compose that are not already tied to
                a specific version.
            inactive:
              type: boolean
              description: Whether inactive codes &ndash; codes that are not approved for
                current use &ndash; are in the value set. If inactive = true,
                inactive codes are to be included in the expansion, if inactive
                = false, the inactive codes will not be included in the
                expansion. If absent, the behavior is determined by the
                implementation, or by the applicable $expand parameters (but
                generally, inactive codes would be expected to be included).
            include:
              type: array
              items:
                $ref: "#/components/schemas/ValueSet_Compose_Include"
                description: Include one or more codes from a code system or other value set(s).
              minItems: 1
            exclude:
              type: array
              items:
                $ref: "#/components/schemas/ValueSet_Compose_Include"
                description: Exclude one or more codes from the value set based on code system
                  filters and/or other value sets.
          required:
            - include
    ValueSet_Compose_Include:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            system:
              type: string
              pattern: \\S*
              description: An absolute URI which is the code system from which the selected
                codes come from.
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The version of the code system that the codes are selected from, or
                the special version '*' for all versions.
            concept:
              type: array
              items:
                $ref: "#/components/schemas/ValueSet_Compose_Include_Concept"
                description: Specifies a concept to be included or excluded.
            filter:
              type: array
              items:
                $ref: "#/components/schemas/ValueSet_Compose_Include_Filter"
                description: Select concepts by specify a matching criterion based on the
                  properties (including relationships) defined by the system, or
                  on filters defined by the system. If multiple filters are
                  specified, they SHALL all be true.
            valueSet:
              type: array
              items:
                type: string
                pattern: \\S*
                description: Selects the concepts found in this value set (based on its value
                  set definition). This is an absolute URI that is a reference
                  to ValueSet.url.  If multiple value sets are specified this
                  includes the union of the contents of all of the referenced
                  value sets.
    ValueSet_Compose_Include_Concept:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Specifies a code for the concept to be included or excluded.
            display:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The text to display to the user for this concept in the context of
                this valueset. If no display is provided, then applications
                using the value set use the display specified for the code by
                the system.
            designation:
              type: array
              items:
                $ref: "#/components/schemas/ValueSet_Compose_Include_Concept_Designation"
                description: Additional representations for this concept when used in this value
                  set &ndash; other languages, aliases, specialized purposes,
                  used for particular purposes, etc.
          required:
            - code
    ValueSet_Compose_Include_Concept_Designation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            language:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The language this designation is defined for.
            use:
              $ref: "#/components/schemas/Coding"
              description: A code that represents types of uses of designations.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The text value for this designation.
          required:
            - value
    ValueSet_Compose_Include_Filter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            property:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: A code that identifies a property or a filter defined in the code
                system.
            op:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The kind of operation to perform as a part of the filter criteria.
            value:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The match value may be either a code defined by the system, or a
                string value, which is a regex match on the literal string of
                the property value  (if the filter represents a property defined
                in CodeSystem) or of the system filter value (if the filter
                represents a filter defined in CodeSystem) when the operation is
                'regex', or one of the values (true and false), when the
                operation is 'exists'.
          required:
            - property
            - op
            - value
    ValueSet_Expansion:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            identifier:
              type: string
              pattern: \\S*
              description: An identifier that uniquely identifies this expansion of the
                valueset, based on a unique combination of the provided
                parameters, the system default parameters, and the underlying
                system code system versions etc. Systems may re&ndash;use the
                same identifier as long as those factors remain the same, and
                the expansion is the same, but are not required to do so. This
                is a business identifier.
            timestamp:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The time at which the expansion was produced by the expanding
                system.
            total:
              type: integer
              format: int32
              description: The total number of concepts in the expansion. If the number of
                concept nodes in this resource is less than the stated number,
                then the server can return more using the offset parameter.
            offset:
              type: integer
              format: int32
              description: If paging is being used, the offset at which this resource
                starts.  I.e. this resource is a partial view into the
                expansion. If paging is not being used, this element SHALL NOT
                be present.
            parameter:
              type: array
              items:
                $ref: "#/components/schemas/ValueSet_Expansion_Parameter"
                description: A parameter that controlled the expansion process. These parameters
                  may be used by users of expanded value sets to check whether
                  the expansion is suitable for a particular purpose, or to pick
                  the correct expansion.
            contains:
              type: array
              items:
                $ref: "#/components/schemas/ValueSet_Expansion_Contains"
                description: The codes that are contained in the value set expansion.
          required:
            - timestamp
    ValueSet_Expansion_Contains:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            system:
              type: string
              pattern: \\S*
              description: An absolute URI which is the code system in which the code for this
                item in the expansion is defined.
            abstract:
              type: boolean
              description: If true, this entry is included in the expansion for navigational
                purposes, and the user cannot select the code directly as a
                proper value.
            inactive:
              type: boolean
              description: If the concept is inactive in the code system that defines it.
                Inactive codes are those that are no longer to be used, but are
                maintained by the code system for understanding legacy data. It
                might not be known or specified whether an concept is inactive
                (and it may depend on the context of use).
            version:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The version of the code system from this code was taken. Note that
                a well&ndash;maintained code system does not need the version
                reported, because the meaning of codes is consistent across
                versions. However this cannot consistently be assured, and when
                the meaning is not guaranteed to be consistent, the version
                SHOULD be exchanged.
            code:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The code for this item in the expansion hierarchy. If this code is
                missing the entry in the hierarchy is a place holder (abstract)
                and does not represent a valid code in the value set.
            display:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The recommended display for this item in the expansion.
            designation:
              type: array
              items:
                $ref: "#/components/schemas/ValueSet_Compose_Include_Concept_Designation"
                description: Additional representations for this item &ndash; other languages,
                  aliases, specialized purposes, used for particular purposes,
                  etc. These are relevant when the conditions of the expansion
                  do not fix to a single correct representation.
            contains:
              type: array
              items:
                $ref: "#/components/schemas/ValueSet_Expansion_Contains"
                description: Other codes and entries contained under this entry in the
                  hierarchy.
    ValueSet_Expansion_Parameter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Name of the input parameter to the $expand operation; may be a
                server&ndash;assigned name for additional default or other
                server&ndash;supplied parameters used to control the expansion
                process.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The value of the parameter.
            valueBoolean:
              type: boolean
              description: The value of the parameter.
            valueInteger:
              type: integer
              format: int32
              description: The value of the parameter.
            valueDecimal:
              type: number
              description: The value of the parameter.
            valueUri:
              type: string
              pattern: \\S*
              description: The value of the parameter.
            valueCode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The value of the parameter.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The value of the parameter.
          required:
            - name
    VerificationResult:
      allOf:
        - $ref: "#/components/schemas/DomainResource"
        - type: object
          properties:
            target:
              type: array
              items:
                $ref: "#/components/schemas/Reference"
                description: A resource that was validated.
            targetLocation:
              type: array
              items:
                type: string
                pattern: "[ \\r\\n\\t\\S]+"
                description: The fhirpath location(s) within the resource that was validated.
            need:
              $ref: "#/components/schemas/CodeableConcept"
              description: The frequency with which the target must be validated (none;
                initial; periodic).
            status:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: The validation status of the target (attested; validated; in
                process; requires revalidation; validation failed; revalidation
                failed).
            statusDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When the validation status was updated.
            validationType:
              $ref: "#/components/schemas/CodeableConcept"
              description: What the target is validated against (nothing; primary source;
                multiple sources).
            validationProcess:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: The primary process by which the target is validated (edit check;
                  value set; primary source; multiple sources; standalone; in
                  context).
            frequency:
              $ref: "#/components/schemas/Timing"
              description: Frequency of revalidation.
            lastPerformed:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: The date/time validation was last completed (including failed
                validations).
            nextScheduled:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date when target is next validated, if appropriate.
            failureAction:
              $ref: "#/components/schemas/CodeableConcept"
              description: The result if validation fails (fatal; warning; record only; none).
            primarySource:
              type: array
              items:
                $ref: "#/components/schemas/VerificationResult_PrimarySource"
                description: Information about the primary source(s) involved in validation.
            attestation:
              $ref: "#/components/schemas/VerificationResult_Attestation"
              description: Information about the entity attesting to information.
            validator:
              type: array
              items:
                $ref: "#/components/schemas/VerificationResult_Validator"
                description: Information about the entity validating information.
          required:
            - status
      example:
        resourceType: VerificationResult
        meta:
          tag:
            - code: ibm/minimal
        _status:
          extension:
            - url: http://hl7.org/fhir/StructureDefinition/data-absent-reason
              valueCode: unknown
    VerificationResult_Attestation:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            who:
              $ref: "#/components/schemas/Reference"
              description: The individual or organization attesting to information.
            onBehalfOf:
              $ref: "#/components/schemas/Reference"
              description: When the who is asserting on behalf of another (organization or
                individual).
            communicationMethod:
              $ref: "#/components/schemas/CodeableConcept"
              description: The method by which attested information was submitted/retrieved
                (manual; API; Push).
            date:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: The date the information was attested to.
            sourceIdentityCertificate:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A digital identity certificate associated with the attestation
                source.
            proxyIdentityCertificate:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A digital identity certificate associated with the proxy entity
                submitting attested information on behalf of the attestation
                source.
            proxySignature:
              $ref: "#/components/schemas/Signature"
              description: Signed assertion by the proxy entity indicating that they have the
                right to submit attested information on behalf of the
                attestation source.
            sourceSignature:
              $ref: "#/components/schemas/Signature"
              description: Signed assertion by the attestation source that they have attested
                to the information.
    VerificationResult_PrimarySource:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            who:
              $ref: "#/components/schemas/Reference"
              description: Reference to the primary source.
            type:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Type of primary source (License Board; Primary Education;
                  Continuing Education; Postal Service; Relationship owner;
                  Registration Authority; legal source; issuing source;
                  authoritative source).
            communicationMethod:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Method for communicating with the primary source (manual; API;
                  Push).
            validationStatus:
              $ref: "#/components/schemas/CodeableConcept"
              description: Status of the validation of the target against the primary source
                (successful; failed; unknown).
            validationDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: When the target was validated against the primary source.
            canPushUpdates:
              $ref: "#/components/schemas/CodeableConcept"
              description: Ability of the primary source to push updates/alerts (yes; no;
                undetermined).
            pushTypeAvailable:
              type: array
              items:
                $ref: "#/components/schemas/CodeableConcept"
                description: Type of alerts/updates the primary source can send (specific
                  requested changes; any changes; as defined by source).
    VerificationResult_Validator:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            organization:
              $ref: "#/components/schemas/Reference"
              description: Reference to the organization validating information.
            identityCertificate:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: A digital identity certificate associated with the validator.
            attestationSignature:
              $ref: "#/components/schemas/Signature"
              description: Signed assertion by the validator that they have validated the
                information.
          required:
            - organization
    Parameters_Parameter:
      allOf:
        - $ref: "#/components/schemas/BackboneElement"
        - type: object
          properties:
            name:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: The name of the parameter (reference to the operation definition).
            valueBase64Binary:
              type: string
              pattern: (\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+
              description: Conveys the content if the parameter is a data type.
            valueBoolean:
              type: boolean
              description: Conveys the content if the parameter is a data type.
            valueCanonical:
              type: string
              pattern: \\S*
              description: Conveys the content if the parameter is a data type.
            valueCode:
              type: string
              pattern: "[^\\s]+(\\s[^\\s]+)*"
              description: Conveys the content if the parameter is a data type.
            valueDate:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?
              description: Conveys the content if the parameter is a data type.
            valueDateTime:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?
              description: Conveys the content if the parameter is a data type.
            valueDecimal:
              type: number
              description: Conveys the content if the parameter is a data type.
            valueId:
              type: string
              pattern: "[A-Za-z0-9\\-\\.]{1,64}"
              description: Conveys the content if the parameter is a data type.
            valueInstant:
              type: string
              pattern: ([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))
              description: Conveys the content if the parameter is a data type.
            valueInteger:
              type: integer
              format: int32
              description: Conveys the content if the parameter is a data type.
            valueMarkdown:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Conveys the content if the parameter is a data type.
            valueOid:
              type: string
              pattern: urn:oid:[0-2](\\.(0|[1-9][0-9]*))+
              description: Conveys the content if the parameter is a data type.
            valuePositiveInt:
              type: integer
              format: int32
              description: Conveys the content if the parameter is a data type.
            valueString:
              type: string
              pattern: "[ \\r\\n\\t\\S]+"
              description: Conveys the content if the parameter is a data type.
            valueTime:
              type: string
              pattern: ([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?
              description: Conveys the content if the parameter is a data type.
            valueUnsignedInt:
              type: integer
              format: int32
              description: Conveys the content if the parameter is a data type.
            valueUri:
              type: string
              pattern: \\S*
              description: Conveys the content if the parameter is a data type.
            valueUrl:
              type: string
              pattern: \\S*
              description: Conveys the content if the parameter is a data type.
            valueUuid:
              type: string
              pattern: urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
              description: Conveys the content if the parameter is a data type.
            valueAddress:
              $ref: "#/components/schemas/Address"
              description: Conveys the content if the parameter is a data type.
            valueAge:
              $ref: "#/components/schemas/Age"
              description: Conveys the content if the parameter is a data type.
            valueAnnotation:
              $ref: "#/components/schemas/Annotation"
              description: Conveys the content if the parameter is a data type.
            valueAttachment:
              $ref: "#/components/schemas/Attachment"
              description: Conveys the content if the parameter is a data type.
            valueCodeableConcept:
              $ref: "#/components/schemas/CodeableConcept"
              description: Conveys the content if the parameter is a data type.
            valueCoding:
              $ref: "#/components/schemas/Coding"
              description: Conveys the content if the parameter is a data type.
            valueContactPoint:
              $ref: "#/components/schemas/ContactPoint"
              description: Conveys the content if the parameter is a data type.
            valueCount:
              $ref: "#/components/schemas/Count"
              description: Conveys the content if the parameter is a data type.
            valueDistance:
              $ref: "#/components/schemas/Distance"
              description: Conveys the content if the parameter is a data type.
            valueDuration:
              $ref: "#/components/schemas/Duration"
              description: Conveys the content if the parameter is a data type.
            valueHumanName:
              $ref: "#/components/schemas/HumanName"
              description: Conveys the content if the parameter is a data type.
            valueIdentifier:
              $ref: "#/components/schemas/Identifier"
              description: Conveys the content if the parameter is a data type.
            valueMoney:
              $ref: "#/components/schemas/Money"
              description: Conveys the content if the parameter is a data type.
            valuePeriod:
              $ref: "#/components/schemas/Period"
              description: Conveys the content if the parameter is a data type.
            valueQuantity:
              $ref: "#/components/schemas/Quantity"
              description: Conveys the content if the parameter is a data type.
            valueRange:
              $ref: "#/components/schemas/Range"
              description: Conveys the content if the parameter is a data type.
            valueRatio:
              $ref: "#/components/schemas/Ratio"
              description: Conveys the content if the parameter is a data type.
            valueReference:
              $ref: "#/components/schemas/Reference"
              description: Conveys the content if the parameter is a data type.
            valueSampledData:
              $ref: "#/components/schemas/SampledData"
              description: Conveys the content if the parameter is a data type.
            valueSignature:
              $ref: "#/components/schemas/Signature"
              description: Conveys the content if the parameter is a data type.
            valueTiming:
              $ref: "#/components/schemas/Timing"
              description: Conveys the content if the parameter is a data type.
            valueContactDetail:
              $ref: "#/components/schemas/ContactDetail"
              description: Conveys the content if the parameter is a data type.
            valueRelatedArtifact:
              $ref: "#/components/schemas/RelatedArtifact"
              description: Conveys the content if the parameter is a data type.
            valueUsageContext:
              $ref: "#/components/schemas/UsageContext"
              description: Conveys the content if the parameter is a data type.
            valueMeta:
              $ref: "#/components/schemas/Meta"
              description: Conveys the content if the parameter is a data type.
            resource:
              $ref: "#/components/schemas/Resource"
              description: If the parameter is a whole resource.
            part:
              type: array
              items:
                $ref: "#/components/schemas/Parameters_Parameter"
                description: A named part of a multi&ndash;part parameter.
          required:
            - name
    SubmissionHistoryList:
      type: array
      items:
        $ref: "#/components/schemas/SubmissionHistory"
    SubmissionHistory:
      type: object
      properties:
        submissionId:
          description: the ID for this submission
          type: integer
        timestamp:
          description: the timestamp for this report submission
          type: string
          format: date-time
        sender:
          description: the name of the sender account
          type: string
        httpStatus:
          description: response given to the sender upon submission
          type: integer
        id:
          description: the report uuid of this submission
          type: string
          format: uuid
        topic:
          description: the schema topic (e.g. COVID-19, Flu)
          type: string
        reportItemCount:
          description: total number of individual reports sent to the Hub (in a csv, the
            number of data lines sent)
          type: integer
        externalName:
          description: custom report name if one was specified by the sender
          type: string
        fileName:
          description: the filename for the delivered report
          type: string
        fileType:
          description: format in which the report was originally sent
          type: string
          enum:
            - INTERNAL
            - CSV
            - CSV_SINGLE
            - HL7
            - HL7_BATCH
            - FHIR
    DetailedSubmissionHistory:
      type: object
      properties:
        submissionId:
          description: the row number for this report's action log
          type: integer
        timestamp:
          description: the timestamp for this report submission
          type: string
          format: date-time
        sender:
          description: the name of the sender account
          type: string
        httpStatus:
          description: response given to the sender upon submission
          type: integer
        id:
          description: the uuid for this submission
          type: string
          format: uuid
        topic:
          description: the schema topic (e.g. COVID-19, Flu)
          type: string
        reportItemCount:
          description: total number of individual reports sent to the Hub (in a csv, the
            number of data lines sent)
          type: integer
        overallStatus:
          description: the step in the delivery process for a submission
          type: string
          enum:
            - Error
            - Received
            - Not Delivering
            - Waiting to Deliver
            - Partially Delivered
            - Delivered
        plannedCompletionAt:
          description: when this submission is expected to finish sending
          type: string
          format: date-time
        actualCompletionAt:
          description: marks the actual time this submission finished sending
          type: string
          format: date-time
        errorCount:
          description: total errors found during initial validation.  There may be
            multiple errors per item.
          type: integer
        warningCount:
          description: total warnings found during initial validation.  There may be
            multiple warnings per item.
          type: integer
        destinations:
          description: where the report is being sent to
          type: array
          items:
            $ref: "#/components/schemas/Destination"
        errors:
          description: a list of errors in the report
          type: array
          items:
            $ref: "#/components/schemas/ErrorWarningLog"
        warnings:
          description: a list of warnings in the report
          type: array
          items:
            $ref: "#/components/schemas/ErrorWarningLog"
        externalName:
          description: the input report's external name
          type: string
        destinationCount:
          description: total destinations recieving the report(s)
          type: integer
    Destination:
      type: object
      properties:
        organization:
          type: string
          description: the name of the organization reciving the report
        organization_id:
          type: string
          description: the organization id (i.e. {state abbreviation}-phd)
        service:
          type: string
          description: the service used for delivering the report
        itemCount:
          type: integer
          description: the number of items being sent to this destination
        itemCountBeforeQualityFiltering:
          type: integer
          description: the number of items available for this destination prior to quality
            filtering
        sending_at:
          type: string
          format: date-time
          description: The time at which the report will be sent
        filteredReportRows:
          type: array
          description: Information about the rows filtered from the report due to quality.
          items:
            type: string
        filteredReportItems:
          description: list of the filtering actions that resulted in items being removed
          type: array
          items:
            $ref: "#/components/schemas/FilteredReportItem"
        sentReports:
          description: reports that have been sent to this destination as part of the
            submission being looked at
          type: array
          items:
            $ref: "#/components/schemas/ReportLog"
        downloadedReports:
          description: reports for this destination that have been downloaded as part of
            the submission being looked at
          type: array
          items:
            $ref: "#/components/schemas/ReportLog"
    FilteredReportItem:
      type: object
      properties:
        filterType:
          description: the filter type being used
          type: string
          enum:
            - jurisdictionalFilter
            - qualityFilter
            - routingFilter
            - processingModeFilter
        filterName:
          description: the name of the filter function that removed the rows
          type: string
          enum:
            - filterByCounty
            - matches
            - doesNotMatch
            - orEquals
            - hasValidDataFor
            - hasAtLeastOneOf
            - atLeastOneHasValue
            - allowAll
            - allowNone
            - isValidCLIA
        filteredTrackingElement:
          description: the trackingElement value of the items removed
          type: string
        filterArgs:
          description: the arguments used in the filter function
          type: array
          items:
            type: string
        message:
          description: user-friendly explanation of the filtering action
          type: string
    ReportLog:
      type: object
      properties:
        reportId:
          description: the uuid for this report
          type: string
          format: uuid
        externalName:
          description: name of the hl7 file version of this report
          type: string
        createdAt:
          description: the time at which this report was sent/downloaded
          type: string
          format: date-time
        itemCount:
          description: number of items in this report
          type: integer
    ErrorWarningLog:
      type: object
      properties:
        scope:
          description: how wide-randing is this log?
          type: string
          enum:
            - parameter
            - report
            - item
        indices:
          description: for item scope, list of the index of each log that hit this
            particular error/warning
          type: array
          items:
            type: integer
        trackingIds:
          description: for item scope, list of tracking ids for matching logs
          type: array
          items:
            type: string
        field:
          description: field that triggered the error/warning
          type: string
        message:
          description: user-friendly explanation of the error/warning
          type: string
    Deliveries:
      type: array
      items:
        $ref: "#/components/schemas/Delivery"
    Delivery:
      type: object
      properties:
        deliveryId:
          description: the action_id from this report's action log entry
          type: integer
        sent:
          description: when this report was sent
          type: string
          format: date-time
        expires:
          description: expiration date for the report file
          type: string
          format: date-time
        receivingOrg:
          description: the name of the organization receiving the report
          type: string
        receivingOrgSvc:
          description: service used by the organization
          type: string
        reportId:
          description: the uuid for this report
          type: string
          format: uuid
        topic:
          description: the schema topic (e.g. COVID-19, Flu)
          type: string
        reportItemCount:
          description: number of tests in the report
          type: integer
        fileName:
          description: the filename for the delivered report
          type: string
        fileType:
          description: format in which the report was originally sent
          type: string
          enum:
            - INTERNAL
            - CSV
            - CSV_SINGLE
            - HL7
            - HL7_BATCH
            - FHIR
    FacilitiesList:
      type: array
      items:
        $ref: "#/components/schemas/DeliveryFacility"
    DeliveryFacility:
      type: object
      properties:
        reportId:
          description: the uuid for the referenced report
          type: string
          format: uuid
        facility:
          description: the full name of the facility
          type: string
        location:
          description: city and state of the facility
          type: string
        CLIA:
          description: The CLIA number (10-digit alphanumeric) of the facility
          type: string
        positive:
          description: the result (conclusion) of the test. 0 = negative (good usually)
          type: integer
        total:
          description: number of facilities included in the object
          type: integer
    History:
      type: object
      description: JSON response containing a list of paginated Submissions and the
        metadata required to point the next page of submissions.
      properties:
        metadata:
          description: metadata containing `next_cursor`
          type: string
        submissions:
          type: array
          items:
            $ref: "#/components/schemas/Submission"
    Submission:
      description: Individual Action ID result with data being populated from both
        `public.action` and `public.report_file` tables.
      type: object
      properties:
        created_at:
          description: Timestamp with timezone coming from the `created_at` row in the
            `public.action` table.
          type: string
        action_id:
          description: Action ID for the object coming from the `created_at` row in the
            `public.action` table.
          type: integer
        errorCount:
          description: total errors found during initial validation.  There may be
            multiple errors per item.
          type: integer
        warningCount:
          description: total warnings found during initial validation.  There may be
            multiple warnings per item.
          type: integer
    SettingMetadata:
      description: The metadata associated with an setting
      type: object
      properties:
        version:
          description: the version number of the object
          type: number
          readOnly: true
          example: 11
        createdAt:
          description: the time that the particular revision was created
          type: string
          format: date-time
          readOnly: true
        createdBy:
          description: the user who created the particular revision
          type: string
          readOnly: true
          example: jj@phd.gov
    Organization1:
      description: An organization connected to data hub
      type: object
      required:
        - name
        - description
        - jurisdiction
      properties:
        name:
          description: the unique id for the organization
          type: string
          example: az-phd
        description:
          description: the displayable description of the organization
          type: string
          example: Arizona PHD
        jurisdiction:
          type: string
          enum:
            - National
            - State
            - County
        stateCode:
          description: the two letter code for the organization
          type: string
          example: AZ
        countyName:
          description: the county name (must match FIPS name)
          type: string
          example: Pima
        meta:
          $ref: "#/components/schemas/SettingMetadata"
    Sender:
      description: An sender of reports to the data hub
      type: object
      required:
        - name
        - description
        - topic
        - schema
        - format
      properties:
        name:
          description: Unique name for the senders, includes the organization name
          type: string
          example: simple_report.default
        description:
          description: Display ready description of the sender
          type: string
        topic:
          description: Topic of for this sender. Must match the supported topics.
          type: string
          example: covid-19
        organizationName:
          description: Name of the organization that this sender belongs to
          type: string
          example: az-phd
          readOnly: true
        schema:
          description: the schema name for this sender
          example: az-phd-covid-19
          type: string
        format:
          description: the payload format
          type: string
          enum:
            - CSV
        meta:
          $ref: "#/components/schemas/SettingMetadata"
    Receiver:
      description: A receiver of reports from the data hub
      type: object
      required:
        - name
        - description
        - topic
        - jurisdictionalFilter
        - reportConfigurations
        - timing
      properties:
        name:
          description: The unique name for the receiver. Should include the organization
            name as a prefix.
          type: string
          example: az-phd.elr
        description:
          description: Display ready description of the receiver
          type: string
          example: Arizona PHD ELR feed
        topic:
          description: The topic of for this receiver. Must match the supported topics.
          type: string
          example: covid-19
        organizationName:
          description: The name of the organization that this receiver belongs to
          type: string
          example: az-phd
          readOnly: true
        jurisdictionalFilters:
          description: What items to include in the report.
          type: array
          required:
            - matchFields
          items:
            description: A single filter
            type: object
            properties:
              matchFields:
                description: What fields to match in the filter
                type: string
                enum:
                  - FACILITY_OR_PATIENT_ADDRESS
                  - FACILITY_ADDRESS
                  - FACILITY_NAME
                  - ABNORMAL_VALUE
              matchValues:
                description: What is the value to match against
                type: array
                items:
                  type: string
              doesNotMatch:
                description: Ensure that the result does not match
                type: boolean
                default: false
        translations:
          description: How the report is translated from the sender. A report can be sent
            in multiple ways.
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/CustomConfiguration"
              - $ref: "#/components/schemas/StandardHL7Configuration"
            discriminator:
              propertyName: type
        timing:
          description: When the report is sent if not immediately
          type: object
          required:
            - frequency
          properties:
            frequency:
              description: How often send a report
              type: string
              enum:
                - REAL_TIME
                - HOURLY
                - DAILY
            dailyAt:
              description: The UTC hour to send a daily batch
              type: number
        meta:
          $ref: "#/components/schemas/SettingMetadata"
    SettingRevisions:
      description: A receiver of reports from the data hub
      type: object
      required:
        - id
        - name
        - version
        - createdAt
        - createdBy
        - settingJson
      properties:
        id:
          description: Unique id for this setting revision
          type: integer
          example: 123
        name:
          description: Name for this setting. Unique for this organization.
          type: string
          example: test-elr
        version:
          description: Zero based revision number for this setting
          type: integer
          example: 0
        createdAt:
          description: timestamp for when this revision was created
          type: string
          format: date-time
          example: 2022-05-25T15:36:14.812Z
        createdBy:
          description: email address of the account creating this revision of the setting
          type: string
          format: email
          example: local@test.com
        settingJson:
          description: Json as a string for the content of the setting. Json schema varies
            by setting type and over revisions
          type: string
          example: '{"keys": null, "meta": null, "name": "test-elr", "topic": "full-elr",
            "format": "HL7", "version": null, "createdAt": null, "createdBy":
            null, "senderType": null, "customerStatus": "inactive",
            "processingType": "sync", "allowDuplicates": true,
            "organizationName": "ignore", "primarySubmissionMethod": null}'
    StandardHL7Configuration:
      description: A standard HL7 configuration
      type: object
      required:
        - type
        - includeAOE
        - useBatchHeaders
        - transport
      properties:
        type:
          description: The discriminator
          type: string
          example: STANDARD_HL7
        includeAOE:
          description: Include the AOE
          type: boolean
        useBatchHeaders:
          description: Use BHS and FHS header
          type: boolean
        useTestProcessingMode:
          description: Set a test process mode flag
          type: boolean
          default: false
        receivingApplicationName:
          description: The receiving application name (needed for HL7 formats)
          type: string
          default: null
        receivingApplicationOID:
          description: The receiving application OID
          type: string
          default: null
        receivingFacilityName:
          description: The receiving facility name
          type: string
          default: null
        receivingFacilityOID:
          description: The receiving facility name
          type: string
          default: null
        reportingFacilityName:
          description: The reporting facility name (if different from CDC PRIME)
          type: string
          default: null
        reportingFacilityId:
          description: The reporting facility id (if different from CDC PRIME's OID)
          type: string
          default: null
        reportingFacilityIdType:
          description: The reporting facility id type (if different from OID)
          type: string
          default: null
        suppressQstForAoe:
          description: Suppress QST component is AOE OBX segments
          type: boolean
          default: false
        suppressHl7Fields:
          description: A comma delimited list of HL7 fields to suppress
          type: string
          default: null
        suppressAoe:
          description: Suppress the AOE OBX results
          type: boolean
          default: false
        defaultAoeToUnknown:
          description: Default the AOE result to UNK
          type: boolean
          default: false
        useBlankInsteadOfUnknown:
          description: A comma delimited list of element names that should use blank
            instead of unknown
          type: string
          default: null
        truncateHDNamespaceIds:
          description: Truncate the HD fields to HD_TRUNCATION_LIMIT
          type: boolean
          default: false
        usePid14ForPatientEmail:
          description: Use the PID-14 field for patient email instead of the standard
            PID-13 field
          type: boolean
          default: false
        convertTimestampToDateTime:
          description: A comma delimited list of HL7 fields to convert to the
            yyyMMddHHmmss format
          type: string
          default: null
        phoneNumberFormatting:
          description: How to format phone numbers (XTN fields)
          type: string
          enum:
            - STANDARD
            - ONLY_DIGITS_IN_COMPONENT_ONE
            - AREA_LOCAL_IN_COMPONENT_ONE
          default: STANDARD
        nameFormat:
          description: The format to use for the file name generated by the translation
          type: string
          default: standard
        receivingOrganization:
          description: The name of the receiving organization in the message
          type: string
          default: null
        useOrderingFacilityName:
          description: The value to use for the ORC-21 (ordering facility name) field
          type: string
          enum:
            - STANDARD
            - NCES
            - ORGANIZATION_NAME
          default: STANDARD
        transport:
          oneOf:
            - $ref: "#/components/schemas/SFTPTransport"
            - $ref: "#/components/schemas/AS2Transport"
            - $ref: "#/components/schemas/BlobStoreTransport"
            - $ref: "#/components/schemas/NullTransport"
    CustomConfiguration:
      description: A custom configuration for a custom schema
      type: object
      required:
        - type
        - schemaName
        - format
        - transport
      properties:
        type:
          description: The discriminator
          type: string
          example: CUSTOM
        schemaName:
          description: The name of the custom schema
          type: string
        format:
          description: The format of the serializer
          type: string
          enum:
            - CSV
            - HL7
        nameFormat:
          description: The format to use for the file name generated by the translation
          type: string
          default: standard
        receivingOrganization:
          description: The name of the receiving organization in the message
          type: string
          default: null
        transport:
          description: The transport to use
          oneOf:
            - $ref: "#/components/schemas/SFTPTransport"
            - $ref: "#/components/schemas/AS2Transport"
            - $ref: "#/components/schemas/BlobStoreTransport"
            - $ref: "#/components/schemas/NullTransport"
    SFTPTransport:
      description: Describes a single SFTP connection in all of it variations
      type: object
      required:
        - type
        - host
        - port
        - filePath
      properties:
        type:
          description: The discriminator
          type: string
          example: SFTP
        host:
          description: Host name and domain
          type: string
          example: sftp.phd.gov
        port:
          description: The port to use
          type: number
          example: 22
        filePath:
          description: The file path to place the report
          type: string
          example: /in/test
    BlobStoreTransport:
      description: Moves results to a Azure Blob Store. Typically used for HHS Protect
        interfaces.
      type: object
      required:
        - type
        - storageName
        - containerName
      properties:
        type:
          description: The discriminator
          type: string
          example: BLOBSTORE
        storageName:
          description: This looks for an env var with this name. env var value is the
            connection string
          type: string
        containerName:
          description: This name of the Azure container
          type: string
          example: hhsprotect
    AS2Transport:
      description: Describes a single AS2 connection in all of it variations
      type: object
      required:
        - type
        - receiverUrl
        - receiverId
        - senderId
      properties:
        type:
          description: The discriminator
          type: string
          example: AS2
        receiverUrl:
          description: The URL to the AS2 end-point
          type: string
          example: https://as2.example.com/receiver.aspx
        receiverId:
          description: The AS2 id of the receiver. Usually, the same for all senders.
          type: string
          example: exampleAS2Id
        senderId:
          description: The AS2 id of the sender. Usually, assigned by receiver to PRIME.
          type: string
          example: primeAS2Id
        senderEmail:
          description: The email address to contact someone about the message
          type: string
          default: reportstream@cdc.gov
        mimeType:
          description: The MIME type of the message
          type: string
          default: application/hl7-v2
        contentDescription:
          description: A description of the content of the message. Usually, the same for
            all messages.
          type: string
          default: SARS-CoV-2 Electronic Lab Results
    NullTransport:
      description: A transport type that does not do anything
      type: object
      required:
        - type
      properties:
        type:
          description: The discriminator
          type: string
          example: null
        dummy:
          description: A dummy value
          type: string
    ReportFileMessage:
      type: object
      properties:
        reportId:
          type: string
          description: The report-id of the sender file
        schemaTopic:
          type: string
          description: The topic for this report's schema
        schemaName:
          type: string
          description: The name of this report's schema
        contentType:
          type: string
          description: The name of this report's schema
        content:
          type: string
          description: The name of this report's schema
        origin:
          type: object
          description: Information about the blob that this report comes from
          properties:
            bodyUrl:
              type: string
            sendingOrg:
              type: string
            sendingOrgClient:
              type: string
            receivingOrg:
              type: string
            receivingOrgSvc:
              type: string
            indices:
              type: array
              items:
                type: integer
            createdAt:
              type: string
      required:
        - reportId
        - schemaTopic
        - schemaName
        - contentType
        - content
    EmptyBody:
      type: string
    RequeueResponse:
      type: string
    Report:
      type: object
      required:
        - id
      properties:
        id:
          description: the id for the report assigned by the Hub
          type: string
        timestamp:
          description: the timestamp for this report submission
          type: string
          format: date-time
        topic:
          description: the topic configured for the client organization sender
          type: string
        reportItemCount:
          description: total number of individual reports sent to the Hub (in a csv, the
            number of data lines sent)
          type: integer
        destinations:
          description: where the report is being sent to
          type: array
          items:
            $ref: "#/components/schemas/Destination1"
        destinationCount:
          description: total destinations recieving the report(s)
          type: integer
        errorCount:
          description: total errors found during initial validation.  There may be
            multiple errors per item.
          type: integer
        warningCount:
          description: total warnings found during initial validation.  There may be
            multiple warnings per item.
          type: integer
        errors:
          description: a list of errors in the report
          type: array
          items:
            $ref: "#/components/schemas/Detail"
        warnings:
          description: a list of warnings in the report
          type: array
          items:
            $ref: "#/components/schemas/Detail"
    Detail:
      type: object
      properties:
        scope:
          type: string
          description: Does the error apply to one item
          enum:
            - Parameter
            - Report
            - Item
        id:
          type: string
          description: Depends on scope, either the item's id (message_id) or the report's
            id
        detail:
          type: string
          description: The details of the error
    Destination1:
      type: object
      properties:
        organization:
          type: string
          description: The name of the organization reciving the report
        organization_id:
          type: string
          description: The organization id (i.e. {state abbreviation}-phd)
        service:
          type: string
          description: The service used for delivering the report
        filteredReportRows:
          type: array
          description: Information about the rows filtered from the report due to quality.
          items:
            type: string
        sending_at:
          type: string
          format: date-time
          description: The time at which the report will be sent
        itemCount:
          type: integer
          description: The number of reports being sent to this destination
    Message:
      type: object
      properties:
        id:
          description: the primary key for this message object
          type: integer
        messageId:
          description: the full message id
          type: string
        sender:
          description: the name of the sender account
          type: string
        submittedDate:
          description: when the original report that contains the message was submitted to
            ReportStream
          type: string
        reportId:
          description: the uuid of the submitted report that a message belongs to
          type: string
        fileName:
          description: the name of the file of the submitted report that a message belongs
            to
          type: string
        fileUrl:
          description: the blobstore url of the file the message belongs to
          type: string
        errors:
          description: a list of errors in the report
          type: array
          items:
            $ref: "#/components/schemas/DetailedActionLog"
        warnings:
          description: a list of warnings in the report
          type: array
          items:
            $ref: "#/components/schemas/DetailedActionLog"
        receiverData:
          description: a list of the message's receivers
          type: array
          items:
            $ref: "#/components/schemas/MessageReceiver"
    MessageReceiver:
      type: object
      properties:
        reportId:
          description: the uuid of the receiver report that a message belongs to
          type: string
        receivingOrg:
          description: the name of the org receiving the message
          type: string
        receivingOrgSvc:
          description: the name of the receiver's service receiving the message
          type: string
        transportResult:
          description: the transport result between ReportStream and the receiving service
          type: string
        fileName:
          description: the name of the file the message belongs to
          type: string
        fileUrl:
          description: the blobstore url of the receiver file the message belongs to
          type: string
        createdAt:
          description: the time of which the file/report was sent or created
          type: string
          format: date-time
        qualityFilters:
          description: the quality filters of the report that the message may have been
            filtered out from
          type: array
          items:
            $ref: "#/components/schemas/MessageActionLog"
    MessageActionLog:
      type: object
      properties:
        trackingId:
          description: id for identifying the test this log is related to
          type: string
        detail:
          description: additional information for this log
          type: object
          properties:
            scope:
              type: string
              description: Does the error apply to one item
              enum:
                - Parameter
                - Report
                - Item
                - Translation
            message:
              description: user-friendly explanation of the filtering action
              type: string
    DetailedActionLog:
      type: object
      properties:
        scope:
          description: how wide-ranging is this log?
          type: string
          enum:
            - parameter
            - report
            - item
            - translation
        reportId:
          description: unique identifier for the report that owns this log
          type: string
        index:
          description: position in the report of the item that caused this log
          type: array
          items:
            type: integer
        trackingId:
          description: id for identifying the test this log is related to
          type: string
          items:
            type: string
        type:
          description: what kind of log is this? (e.g. filter, warning...)
          type: string
          enum:
            - info
            - warning
            - error
            - filter
        detail:
          description: additional information for this log
          type: object
          properties:
            scope:
              type: string
              description: Does the error apply to one item
              enum:
                - Parameter
                - Report
                - Item
                - Translation
            message:
              description: user-friendly explanation of the filtering action
              type: string
    DynamicTableRows:
      description: An ordered array with the table rows
      type: array
      items:
        type: object
        description: Dynamic JSON object with all columns of a table row
        example:
          FIPS: "01001"
          County: Autauga
          State: AL
    TableVersionArray:
      description: A table version information
      type: array
      items:
        $ref: "#/components/schemas/TableVersionInfo"
    TableVersionInfo:
      description: A table version information
      type: object
      properties:
        tableName:
          type: string
        tableVersion:
          type: string
        isActive:
          type: boolean
        createdBy:
          type: string
        createdAt:
          type: string
    ErrorMsg:
      description: The error message
      type: object
      properties:
        error:
          type: string
    DeliveryApiSearch:
      type: object
      properties:
        sort:
          description: The sorting to apply to the results, defaults to sorting by
            created_at, DESC
          type: object
          properties:
            direction:
              description: The order to apply the sort property
              type: string
              enum:
                - DESC
                - ASC
            property:
              description: The property to sort by
              type: string
              enum:
                - ordering_provider
                - ordering_facility
                - submitter
                - report_id
                - created_at
                - expiration_date
                - number_of_tests
                - sort_id
        pagination:
          type: object
          description: The pagination to apply to the search
          properties:
            page:
              type: integer
              description: Which page of results to fetch
            limit:
              type: integer
              description: The number of results to return per page
        filters:
          type: array
          items:
            type: object
            properties:
              filterName:
                description: The name of the filter to apply to the results
                type: string
                enum:
                  - SINCE
                  - UNTIL
              value:
                description: >
                  The value for the filter to apply; depending on the

                  > filter type the value will be parsed to the data type that
                  underlying filter expects

                  > i.e. the SINCE filter will parse it to an LocalDateTime
                type: string
    SubmitterApiSearch:
      type: object
      properties:
        sort:
          description: The sorting to apply to the results, defaults to sorting by
            created_at, DESC
          type: object
          properties:
            direction:
              description: The order to apply the sort property
              type: string
              enum:
                - DESC
                - ASC
            property:
              description: The property to sort by
              type: string
              enum:
                - id
                - name
                - first_report_date
                - test_result_count
                - type
        pagination:
          type: object
          description: The pagination to apply to the search
          properties:
            page:
              type: integer
              description: Which page of results to fetch
            limit:
              type: integer
              description: The number of results to return per page
        filters:
          type: array
          items:
            type: object
            properties:
              filterName:
                description: The name of the filter to apply to the results
                type: string
                enum:
                  - SINCE
                  - UNTIL
              value:
                description: >
                  The value for the filter to apply; depending on the

                  > filter type the value will be parsed to the data type that
                  underlying filter expects

                  > i.e. the SINCE filter will parse it to an LocalDateTime
                type: string
    DeliveryApiSearchResults:
      type: object
      description: Results from running a search for submitters to a specific receiver
      properties:
        meta:
          type: object
          properties:
            type:
              type: string
              enum:
                - submitter
            totalCount:
              type: integer
              description: The total of number of results before applying the filters
            totalFilteredCount:
              type: integer
              description: The total number of results after applying the filters
            totalPages:
              type: integer
              description: The number of pages for the results
            nextPage:
              type: integer
              description: the next page of results
            previousPage:
              type: integer
              description: the previous page of results
        data:
          type: array
          items:
            type: object
            properties:
              orderingProvider:
                type: string
                description: The ordering provider in the report
              orderingFacility:
                type: string
                description: The ordering facility in the report
              submitter:
                type: string
                description: The sender of the data that was in the report
              createdAt:
                type: string
                format: date-time
                description: When the report was sent
              expirationDate:
                type: string
                format: date-time
                description: When the report will no longer be available
              testResultCount:
                type: string
                description: The total number of reports sent by the submitter
              reportId:
                type: string
                format: uuid
                description: The ID for the sent report
    SubmitterApiSearchResults:
      type: object
      description: Results from running a search for submitters to a specific receiver
      properties:
        meta:
          type: object
          properties:
            type:
              type: string
              enum:
                - submitter
            totalCount:
              type: integer
              description: The total of number of results before applying the filters
            totalFilteredCount:
              type: integer
              description: The total number of results after applying the filters
            totalPages:
              type: integer
              description: The number of pages for the results
            nextPage:
              type: integer
              description: the next page of results
            previousPage:
              type: integer
              description: the previous page of results
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: The id of the submitter
              name:
                type: string
                description: The name of the submitter
              firstReportDate:
                type: string
                format: date-time
                description: The date the first of the first report sent by the submitter
              testResultCount:
                type: string
                description: The total number of reports sent by the submitter
              type:
                type: string
                description: The submitter type
                enum:
                  - SUBMITTER
                  - PROVIDER
                  - FACILITY
              location:
                type: string
                description: The location for the submitter
    CheckReceiverResponse:
      description: A json object with a result and message field.
      type: object
      required:
        - result
        - message
      properties:
        result:
          type: string
          description: "'success' or 'fail' for connecting to receiver using these settings"
          example: success
        message:
          type: string
          description: Multi-line string with messages to debug issue. Will include \\n
            and \\t characters
          example: "ignore.EVERY_5_MINS: SFTP Transport: SFTPTransportType(host=sftp,
            port=22, filePath=./upload,
            credentialName=DEFAULT-SFTP)\\n\\tignore.EVERY_5_MINS: sftp: No root
            cause\\njava.net.UnknownHostException"
    ApiKeysResponse:
      description: Fetch or modify API Keys
      type: object
      properties:
        orgName:
          description: The name of the organization
          type: string
          example: simple_report
        keys:
          description: The list of keys for the organization
          type: array
          items:
            $ref: "#/components/schemas/JwkSet"
    Jwk:
      type: object
      properties:
        kty:
          type: string
        use:
          type: string
        keyOps:
          type: string
        alg:
          type: string
        kid:
          type: string
        x5u:
          type: string
        x5c:
          type: array
          items:
            type: string
        x5t:
          type: string
        n:
          type: string
        e:
          type: string
        d:
          type: string
        crv:
          type: string
        p:
          type: string
        q:
          type: string
        dp:
          type: string
        dq:
          type: string
        qi:
          type: string
        x:
          type: string
        y:
          type: string
        k:
          type: string
    JwkSet:
      type: object
      properties:
        scope:
          type: string
        keys:
          type: array
          items:
            $ref: "#/components/schemas/Jwk"
    ListSendFailures:
      description: An organization connected to data hub
      type: object
      required:
        - name
        - description
        - jurisdiction
      properties:
        actionId:
          description: the unique id for the action
          type: integer
          example: 287
        reportId:
          description: the uuid for this report
          type: string
          format: uuid
          example: d05d17f7-acaa-4f0e-bda1-135dbd81d477
        receiver:
          description: Org destination name of the receiver that failed
          type: string
          example: ignore.HL7
        fileName:
          description: Filename for the data that's prepared for forwarding but failing
          type: string
          example: covid-19-d05d17f7-acaa-4f0e-bda1-135dbd81d477-20220601224923.hl7
        failedAt:
          description: the time that the particular error happened
          type: string
          format: date-time
          example: 2022-06-12T22:22:53.833Z
        actionParams:
          description: The original action that failed had a url. These are the cgi params.
          type: string
          example: report&SEND&d05d17f7-acaa-4f0e-bda1-135dbd81d477&false&2022-06-12T22:22:52.412762Z
        actionResult:
          description: The long error message generated when the upload failed.
          type: string
          example: "FAILED Sftp upload of inputReportId
            d05d17f7-acaa-4f0e-bda1-135dbd81d477 to SFTPTransportType(host=sftp,
            port=22, filePath=./upload, credentialName=DEFAULT-SFTP) (orgService
            = ignore.HL7_BATCH_OFFSET_TIME_UTC), Exception: No content to sftp
            for report d05d17f7-acaa-4f0e-bda1-135dbd81d477, All retries
            failed.  Manual Intervention Required.  Send Error report for:
            d05d17f7-acaa-4f0e-bda1-135dbd81d477 to
            ignore.HL7_BATCH_OFFSET_TIME_UTC"
        bodyUrl:
          description: The body portion of the original action url. Contains the location
            of the file that failed to forward
          type: string
          example: http://azurite:10000/devstoreaccount1/reports/ready%2Fignore.HL7_BATCH_OFFSET_TIME_UTC%2Fcovid-19-d05d17f7-acaa-4f0e-bda1-135dbd81d477-20220601224923.hl7
        reportFileReceiver:
          description: The parsed receiver. It should be the same as receiver field above
          type: string
          example: ignore.HL7_BATCH_OFFSET_TIME_UTC
    ListResends:
      description: An organization connected to data hub
      type: object
      required:
        - actionId
        - actionName
        - description
        - createdAt
        - httpStatus
        - actionResult
      properties:
        actionId:
          description: the unique id for the action
          type: integer
          example: 287
        actionName:
          description: For this selector it's always "resend"
          type: string
          example: resend
        createdAt:
          description: The time at which this action was created
          type: string
          format: time-date
          example: 2022-07-01T18:52:06.919Z
        httpStatus:
          description: The http result code from this action running
          type: integer
          example: 200
        actionParams:
          description: Parameters originally passed to this action. Formatted Json
            including Headers and QueryParameters
          type: string
        actionResult:
          description: Result for this action.
          type: string
          format: application/json
          example: >-
            OK: Will resend all (5) items in
            be6ad9cd-180c-4496-aa82-e0016ee75674

            be6ad9cd-180c-4496-aa82-e0016ee75674 has been queued to resend
            immediately to ignore.HL7_BATCH_PPK
        username:
          description: Login email of account initiating request
          type: string
          format: email
          example: bob@example.com
        sender_ip:
          description: IP address of account initiating request
          type: string
          example: 127.0.0.1
        actionResponse:
          description: Not currently used, may be in the future
          type: string
          example: "null"
        contentLength:
          description: Not currently used, always zero
          type: integer
          example: 0
        sendingOrg:
          description: not currently used
          type: string
          example: "null"
        sendingOrgClient:
          description: not currently used
          type: string
          example: "null"
        externalName:
          description: not currently used
          type: string
          example: "null"
    ReceiversConnStatusResponse:
      type: object
      description: An organization connected to data hub
      properties:
        receiverConnectionCheckResultId:
          description: Internal primary key. Useful for react to use as a unique key
          type: integer
          example: 1639
        organizationId:
          description: Organization ID - primary key in Settings
          type: integer
          example: 37
        receiverId:
          description: Receiver ID - primary key in Settings
          type: integer
          example: 202
        connectionCheckResult:
          description: Protocol level or java exception result May be multiline
          type: string
          example: "**** az-phd.elr-secondary:  no transport defined."
        connectionCheckSuccessful:
          description: If the connection and transmission was successful or not
          type: boolean
          example: true
        connectionCheckStartedAt:
          description: Timestamp of when the check started
          type: string
          format: date-time
          example: 2022-07-01T18:52:06.918Z
        connectionCheckCompletedAt:
          description: Timestamp of when the check ended
          type: string
          format: date-time
          example: 2022-07-01T18:52:06.919Z
        organizationName:
          description: Name string associated with the organizationId field pulled from
            Settings
          type: string
          example: az-phd
        receiverName:
          description: Name string associated with the receiverId field pulled from Settings
          type: string
          example: elr-secondary
  securitySchemes:
    ServerToServer:
      $ref: components/security_schemes.yaml#/ServerToServer
    OAuth2:
      $ref: components/security_schemes.yaml#/OAuth2
    PreviewOAuth2:
      $ref: components/security_schemes.yaml#/PreviewOAuth2
  parameters:
    _lastUpdatedParam:
      name: _lastUpdated
      description: When the resource version last changed
      in: query
      required: false
      schema:
        type: string
    _securityParam:
      name: _security
      description: Security Labels applied to this resource
      in: query
      required: false
      schema:
        type: string
    _tagParam:
      name: _tag
      description: Tags applied to this resource
      in: query
      required: false
      schema:
        type: string
    _idParam:
      name: _id
      description: Logical id of this artifact
      in: query
      required: false
      schema:
        type: string
    _sourceParam:
      name: _source
      description: Identifies where the resource comes from
      in: query
      required: false
      schema:
        type: string
    _profileParam:
      name: _profile
      description: Profiles this resource claims to conform to
      in: query
      required: false
      schema:
        type: string
    _sortParam:
      name: _sort
      description: |-
        Sort the returned data using one of three options: \r
        \r
        * -_lastUpdated: [Default] Decreasing time - most recent changes first\r
        * _lastUpdated: Increasing time - oldest changes first\r
        * none: Increasing id order - oldest changes first\r\n
      in: query
      required: false
      schema:
        type: string
        enum:
          - -_lastUpdated
          - _lastUpdated
          - none
    _sinceParam:
      name: _since
      description: Resources updated after this period will be included in the response.
      in: query
      required: false
      schema:
        type: string
    _beforeParam:
      name: _before
      description: Return changes before a known timestamp
      in: query
      required: false
      schema:
        type: string
    _countParam:
      name: _count
      description: Specifies a maximum number of results that are required
      in: query
      required: false
      schema:
        type: integer
        default: 100
    _typeParam:
      name: _type
      description: Limit which resource types are returned
      in: query
      required: false
      schema:
        type: string
    _outputFormatParam:
      name: _outputFormat
      description: The format for the requested bulk data files to be generated
      in: query
      required: false
      schema:
        type: string
    idParam:
      name: id
      description: logical identifier
      in: path
      required: true
      schema:
        type: string
  requestBodies:
    Account:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Account"
      required: true
    ActivityDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ActivityDefinition"
      required: true
    AdministrableProductDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/AdministrableProductDefinition"
      required: true
    AdverseEvent:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/AdverseEvent"
      required: true
    AllergyIntolerance:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/AllergyIntolerance"
      required: true
    Appointment:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Appointment"
      required: true
    AppointmentResponse:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/AppointmentResponse"
      required: true
    AuditEvent:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/AuditEvent"
      required: true
    Basic:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Basic"
      required: true
    BiologicallyDerivedProduct:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/BiologicallyDerivedProduct"
      required: true
    BodyStructure:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/BodyStructure"
      required: true
    CapabilityStatement:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/CapabilityStatement"
      required: true
    CarePlan:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/CarePlan"
      required: true
    CareTeam:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/CareTeam"
      required: true
    CatalogEntry:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/CatalogEntry"
      required: true
    ChargeItem:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ChargeItem"
      required: true
    ChargeItemDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ChargeItemDefinition"
      required: true
    Citation:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Citation"
      required: true
    Claim:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Claim"
      required: true
    ClaimResponse:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ClaimResponse"
      required: true
    ClinicalImpression:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ClinicalImpression"
      required: true
    ClinicalUseDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ClinicalUseDefinition"
      required: true
    CodeSystem:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/CodeSystem"
      required: true
    Communication:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Communication"
      required: true
    CommunicationRequest:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/CommunicationRequest"
      required: true
    CompartmentDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/CompartmentDefinition"
      required: true
    Composition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Composition"
      required: true
    ConceptMap:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ConceptMap"
      required: true
    Condition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Condition"
      required: true
    Consent:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Consent"
      required: true
    Contract:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Contract"
      required: true
    Coverage:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Coverage"
      required: true
    CoverageEligibilityRequest:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/CoverageEligibilityRequest"
      required: true
    CoverageEligibilityResponse:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/CoverageEligibilityResponse"
      required: true
    DetectedIssue:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/DetectedIssue"
      required: true
    Device:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Device"
      required: true
    RiskAssessment:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/RiskAssessment"
      required: true
    Group:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Group"
      required: true
    Provenance:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Provenance"
      required: true
    Invoice:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Invoice"
      required: true
    DiagnosticReport:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/DiagnosticReport"
      required: true
    ExplanationOfBenefit:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ExplanationOfBenefit"
      required: true
    DocumentManifest:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/DocumentManifest"
      required: true
    Specimen:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Specimen"
      required: true
    List:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/List"
      required: true
    DocumentReference:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/DocumentReference"
      required: true
    Media:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Media"
      required: true
    Flag:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Flag"
      required: true
    QuestionnaireResponse:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/QuestionnaireResponse"
      required: true
    ServiceRequest:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ServiceRequest"
      required: true
    DeviceUseStatement:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/DeviceUseStatement"
      required: true
    SupplyRequest:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/SupplyRequest"
      required: true
    RequestGroup:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/RequestGroup"
      required: true
    Schedule:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Schedule"
      required: true
    Observation:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Observation"
      required: true
    MedicationAdministration:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/MedicationAdministration"
      required: true
    DeviceRequest:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/DeviceRequest"
      required: true
    MessageHeader:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/MessageHeader"
      required: true
    DeviceDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/DeviceDefinition"
      required: true
    DeviceMetric:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/DeviceMetric"
      required: true
    Encounter:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Encounter"
      required: true
    NutritionOrder:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/NutritionOrder"
      required: true
    Procedure:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Procedure"
      required: true
    MedicationRequest:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/MedicationRequest"
      required: true
    VisionPrescription:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/VisionPrescription"
      required: true
    Endpoint:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Endpoint"
      required: true
    EnrollmentRequest:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/EnrollmentRequest"
      required: true
    EnrollmentResponse:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/EnrollmentResponse"
      required: true
    EpisodeOfCare:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/EpisodeOfCare"
      required: true
    EventDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/EventDefinition"
      required: true
    Evidence:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Evidence"
      required: true
    EvidenceReport:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/EvidenceReport"
      required: true
    EvidenceVariable:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/EvidenceVariable"
      required: true
    ExampleScenario:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ExampleScenario"
      required: true
    FamilyMemberHistory:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/FamilyMemberHistory"
      required: true
    Goal:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Goal"
      required: true
    GraphDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/GraphDefinition"
      required: true
    GuidanceResponse:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/GuidanceResponse"
      required: true
    HealthcareService:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/HealthcareService"
      required: true
    ImagingStudy:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ImagingStudy"
      required: true
    Immunization:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Immunization"
      required: true
    ImmunizationEvaluation:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ImmunizationEvaluation"
      required: true
    ImmunizationRecommendation:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ImmunizationRecommendation"
      required: true
    ImplementationGuide:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ImplementationGuide"
      required: true
    Ingredient:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Ingredient"
      required: true
    InsurancePlan:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/InsurancePlan"
      required: true
    Library:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Library"
      required: true
    Linkage:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Linkage"
      required: true
    Location:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Location"
      required: true
    ManufacturedItemDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ManufacturedItemDefinition"
      required: true
    Measure:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Measure"
      required: true
    MeasureReport:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/MeasureReport"
      required: true
    Medication:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Medication"
      required: true
    MedicationDispense:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/MedicationDispense"
      required: true
    MedicationKnowledge:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/MedicationKnowledge"
      required: true
    MedicationStatement:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/MedicationStatement"
      required: true
    MedicinalProductDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/MedicinalProductDefinition"
      required: true
    MessageDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/MessageDefinition"
      required: true
    MolecularSequence:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/MolecularSequence"
      required: true
    NamingSystem:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/NamingSystem"
      required: true
    NutritionProduct:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/NutritionProduct"
      required: true
    ObservationDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ObservationDefinition"
      required: true
    OperationDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/OperationDefinition"
      required: true
    OperationOutcome:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/OperationOutcome"
      required: true
    Organization:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Organization"
      required: true
    OrganizationAffiliation:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/OrganizationAffiliation"
      required: true
    PackagedProductDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/PackagedProductDefinition"
      required: true
    Patient:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Patient"
      required: true
    ResearchSubject:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ResearchSubject"
      required: true
    RelatedPerson:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/RelatedPerson"
      required: true
    Person:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Person"
      required: true
    SupplyDelivery:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/SupplyDelivery"
      required: true
    PaymentNotice:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/PaymentNotice"
      required: true
    PaymentReconciliation:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/PaymentReconciliation"
      required: true
    PlanDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/PlanDefinition"
      required: true
    Practitioner:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Practitioner"
      required: true
    ResearchStudy:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ResearchStudy"
      required: true
    PractitionerRole:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/PractitionerRole"
      required: true
    Questionnaire:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Questionnaire"
      required: true
    RegulatedAuthorization:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/RegulatedAuthorization"
      required: true
    ResearchDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ResearchDefinition"
      required: true
    ResearchElementDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ResearchElementDefinition"
      required: true
    SearchParameter:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/SearchParameter"
      required: true
    Slot:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Slot"
      required: true
    SpecimenDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/SpecimenDefinition"
      required: true
    StructureDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/StructureDefinition"
      required: true
    StructureMap:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/StructureMap"
      required: true
    Subscription:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Subscription"
      required: true
    SubscriptionStatus:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/SubscriptionStatus"
      required: true
    SubscriptionTopic:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/SubscriptionTopic"
      required: true
    Substance:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Substance"
      required: true
    SubstanceDefinition:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/SubstanceDefinition"
      required: true
    Task:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/Task"
      required: true
    TerminologyCapabilities:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/TerminologyCapabilities"
      required: true
    TestReport:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/TestReport"
      required: true
    TestScript:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/TestScript"
      required: true
    ValueSet:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/ValueSet"
      required: true
    VerificationResult:
      content:
        application/fhir+json:
          schema:
            $ref: "#/components/schemas/VerificationResult"
      required: true
