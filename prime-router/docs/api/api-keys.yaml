paths:
  /settings/organizations/{organizationName}/public-keys/{scope}/{kid}:
    delete:
      description: Deletes a key
      security:
        - OAuth2: [ org_admin, system_admin ]
      parameters:
        - in: path
          schema:
            type: string
          required: true
          name: organizationName
          description: The name of the organization
        - in: path
          schema:
            type: string
          required: true
          name: scope
          description: The scope the key to be deleted is associated with
        - in: path
          schema:
            type: string
          required: true
          name: kid
          description: The unique identifier of the key to be deleted
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /settings/organizations/{organizationName}/public-keys:
    get:
      description: Retrieves all of the API public keys for the organization
      security:
        - OAuth2: [org_admin, system_admin]
      parameters:
        - in: path
          schema:
            type: string
          required: true
          name: organizationName
          description: The name of the organization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysResponse'
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
        '404':
          description: Not Found
    post:
      description: Adds a key for a specific scope.
      security:
        - OAuth2: [ system_admin ]
      parameters:
        - in: path
          required: true
          name: organizationName
          description: The name of the organization storing this key
          schema:
            type: string
        - in: query
          name: scope
          required: true
          description: The scope for this key (currently only orgName.*.report)
          schema:
            type: string
        - in: query
          name: kid
          required: true
          description: The key id identifying the public key; must be unique for the keys already added for the scope
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '400':
          description: Bad Request. Returned if the scope is not valid, the kid already exists for the scope or the POST body was empty


components:
  schemas:
    ApiKeysResponse:
      description: Fetch or modify API Keys
      type: object
      properties:
        orgName:
          description: The name of the organization
          type: string
          example: simple_report
        keys:
          description: The list of keys for the organization
          type: array
          items:
            $ref: '#/components/schemas/JwkSet'

    Jwk:
      type: object
      properties:
        kty:
          type: string
        use:
          type: string
        keyOps:
          type: string
        alg:
          type: string
        kid:
          type: string
        x5u:
          type: string
        x5c:
          type: array
          items:
            type: string
        x5t:
          type: string
        "n":
          type: string
        e:
          type: string
        d:
          type: string
        crv:
          type: string
        p:
          type: string
        q:
          type: string
        dp:
          type: string
        dq:
          type: string
        qi:
          type: string
        x:
          type: string
        "y":
          type: string
        k:
          type: string
          
    JwkSet:
      type: object
      properties:
        scope:
          type: string
        keys:
          type: array
          items:
            $ref: '#/components/schemas/Jwk'