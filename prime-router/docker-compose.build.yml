# Build environment
services:
  builder:
    depends_on:
      - postgresql
    build:
      context: .
      dockerfile: Dockerfile.build
    environment:
      DB_PASSWORD: $POSTGRES_PASSWORD
      DB_URL: $POSTGRES_URL
      DB_USER: $POSTGRES_USER
      FUNCTIONS_CORE_TOOLS_TELEMETRY_OPTOUT: 1
      POSTGRES_URL:
      # cf: docker-compose.yml: this is the hostname of the prime_dev service as defined there
      PRIME_RS_API_ENDPOINT_HOST:
    volumes:
      - type: bind
        source: ./
        target: /src
    working_dir: /src
    networks:
      - prime-router_build

  # NOTE: this is part of this docker compose file and not the
  # "development infrastructure" docker compose file because we want to just
  # spin up these two items in the GitHub build (and not everything else);
  # if that changes, we'll move this service into the "main" docker compose file
  # There is also no adminer or any other Admin UI that is part of this
  # build docker compose as we do not want to dictate that.
  # You can connect using psql, or pgAdmin, or ... just point at 5432 on your local host
  postgresql:
    build:
      context: ../.environment/docker/docker-compose/
      dockerfile: Dockerfile.postgres
    restart: always
    environment:
      POSTGRES_DB:
      POSTGRES_PASSWORD:
      POSTGRES_USER:
    ports:
      - 5432:5432
    volumes:
      - vol_postgresql_data:/var/lib/postgresql/data
    networks:
      - prime-router_build

networks:
  prime-router_build:

volumes:
  vol_postgresql_data:
