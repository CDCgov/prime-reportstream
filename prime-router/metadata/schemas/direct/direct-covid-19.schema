---
name: direct-covid-19
description: Direct Submission to ReportStream COVID-19 flat file
topic: covid-19
trackingElement: specimen_id
basedOn: covid-19
elements:

  - name: sender_id
    cardinality: ONE
    csvFields: [{ name: senderId}]

  - name: processing_mode_code
    csvFields: [{name: processingModeCode}]

  - name: ordered_test_code
    documentation: eg, 94531-1
    csvFields: [{ name: testOrdered}]

  - name: ordered_test_name
    documentation: Should be the name that matches to Test Ordered LOINC Long Name, in LIVD table
    csvFields: [{ name: testName}]

  - name: test_coding_system
    documentation: Custom.  Eg, "LN"
    type: TEXT
    csvFields: [{ name: testCodingSystem}]

  - name: test_result
    documentation:  eg, 260373001
    csvFields: [{ name: testResult }]

  - name: test_result_status
    default: F
    mapper: ifPresent(previous_message_id, C)

  - name: placer_order_id
    mapper: use(message_id)

  - name: filler_order_id
    mapper: use(message_id)

  - name: test_result_text
    documentation: eg, "DETECTED".  Custom.  ReportStream uses testResult code, not this text value.
    type: TEXT
    csvFields: [{ name: testResultText }]

  - name: test_performed_code
    documentation: eg, 94558-4
    csvFields: [{ name: testPerformed }]
    
  - name: test_result_coding_system
    documentation: eg, SCT.   Custom
    type: TEXT
    csvFields: [{ name: testResultCodingSystem }]

  - name: test_result_date
    documentation: eg, 20210111
    csvFields: [{ name: testResultDate}]

  - name: date_result_released
    documentation: eg, 20210112
    csvFields: [{ name: testReportDate}]

  - name: order_test_date
    documentation: eg, 20210108
    csvFields: [{ name: testOrderedDate}]

  - name: specimen_collection_date_time
    cardinality: ONE
    documentation: eg, 20210113
    csvFields: [{ name: specimenCollectedDate}]
    mapper: use(specimen_collection_date_time, order_test_date)

  - name: test_kit_name_id
    documentation: Must match LIVD column M, "Test Kit Name ID"
    csvFields: [{ name: deviceIdentifier}]

  - name: equipment_model_name
    documentation: Required.  Must match LIVD column B, "Model". eg,  "BD Veritor System for Rapid Detection of SARS-CoV-2 & Flu A+B"
    cardinality: ONE
    csvFields: [{ name: deviceName}]

  - name: specimen_id
    documentation: A unique id, such as a UUID. Note - Need to override the mapper in covid-19.schema file.
    mapper: use(specimen_id)
    csvFields: [{ name: specimenId}]

  - name: equipment_instance_id
    documentation: Barcode or QR code.  Unique within one manufacturer.
    csvFields: [{ name: serialNumber}]

  - name: message_id
    documentation: ReportStream copies value from the specimenId if none is provided by the sender.
    mapper: use(specimen_id)
    csvFields: [{ name: testId}]

  - name: previous_message_id
    csvFields: [{name: correctedTestId}]

  - name: patient_age
    csvFields: [{ name: patientAge}]

  # Using the HHS guidance instead of the FHIR UCUM codes (see https://www.hl7.org/fhir/valueset-age-units.html)
  # In particular, using 'yr' for year instead of 'a'
  - name: patient_age_units
    type: CODE
    pii: false
    cardinality: ZERO_OR_ONE
    valueSet: hhs_age_units
    csvFields: [{ name: patientAgeUnits}]

  - name: patient_dob
    csvFields: [{ name: patientDob}]

  - name: patient_race
    csvFields: [{ name: patientRace}]

  - name: patient_race_text
    documentation: Custom.    ReportStream uses patientRace code, not this text value.
    type: TEXT
    csvFields: [{ name: patientRaceText}]

  - name: patient_ethnicity
    documentation:  Internally, ReportStream uses hl70189 (H,N,U), but should use HHS values. (2135-2, 2186-5, UNK, ASKU). A mapping is done here, but better is to switch all of RS to HHS standard.
    altValues:
      - code: H
        display: 2135-2
      - code: N
        display: 2186-5
      - code: U
        display: UNK
      - code: U
        display: ASKU
    csvFields: [{ name: patientEthnicity, format: $alt}]

  - name: patient_ethnicity_text
    documentation:  Custom. ReportStream uses the patientEthnicity code, not this text value.
    type: TEXT
    csvFields: [{ name: patientEthnicityText}]

  - name: patient_gender
    csvFields: [{ name: patientSex}]

  - name: patient_zip_code 
    csvFields: [{ name: patientZip}]

  - name: patient_county
    csvFields: [{ name: patientCounty}]

  - name: ordering_provider_id
    documentation:  eg, "1265050918"
    csvFields: [{ name: orderingProviderNpi}]

  - name: ordering_provider_last_name
    csvFields: [{ name: orderingProviderLname}]

  - name: ordering_provider_first_name
    csvFields: [{ name: orderingProviderFname}]

  - name: ordering_provider_zip_code
    csvFields: [{ name: orderingProviderZip}]

  - name: testing_lab_clia
    documentation: Expecting a CLIA number here.  eg, "10D2218834"
    csvFields: [{ name: performingFacility}]

  - name: testing_lab_name
    csvFields: [{ name: performingFacilityName}]

  - name: testing_lab_street
    csvFields: [{ name: performingFacilityStreet}]

  - name: testing_lab_street2
    csvFields: [{ name: performingFacilityStreet2}]

  - name: testing_lab_city
    csvFields: [{ name: performingFacilityCity}]

  - name: testing_lab_state
    csvFields: [{ name: performingFacilityState}]

  - name: testing_lab_zip_code
    csvFields: [{ name: performingFacilityZip}]

  - name: testing_lab_county
    csvFields: [{ name: performingFacilityCounty}]

  - name: testing_lab_phone_number
    csvFields: [{ name: performingFacilityPhone}]

  - name: specimen_type
    csvFields: [{ name: specimenSource}]

  - name: patient_last_name
    cardinality: ZERO_OR_ONE
    documentation:  Not required, but generally data will not flow to states if last/first name provided.
    csvFields: [{ name: patientNameLast}]

  - name: patient_first_name
    csvFields: [{ name: patientNameFirst}]

  - name: patient_middle_name
    csvFields: [{ name: patientNameMiddle}]

  - name: patient_id
    csvFields: [{ name: patientUniqueId}]

  - name: patient_id_type
    default: PI

  - name: patient_id_hash
    # Custom.   Needs to go into covid-19. Mimic waters here.
    type: TEXT
    mapper: hash(patient_id)
    csvFields: [{ name: patientUniqueIdHash}]

  - name: patient_street
    csvFields: [{ name: patientHomeAddress}]

  - name: patient_street2
    csvFields: [{ name: patientHomeAddress2}]

  - name: patient_city
    csvFields: [{ name: patientCity}]

  - name: patient_state
    documentation: Extremely important field for routing data to states.
    csvFields: [{ name: patientState}]

  - name: patient_phone_number
    csvFields: [{ name: patientPhone}]

  - name: patient_phone_number_area_code
    documentation:  Custom. Not currently used. ReportStream assumes area code is in patientPhone
    type: TEXT
    csvFields: [{ name: patientPhoneArea}]

  - name: ordering_provider_street
    csvFields: [{ name: orderingProviderAddress}]

  - name: ordering_provider_street2
    csvFields: [{ name: orderingProviderAddress2}]

  - name: ordering_provider_city
    csvFields: [{ name: orderingProviderCity}]

  - name: ordering_provider_state
    csvFields: [{ name: orderingProviderState}]

  - name: ordering_provider_phone_number
    csvFields: [{ name: orderingProviderPhone}]

  - name: ordering_provider_phone_number_area_code
    documentation: Custom.  Not currently used. ReportStream assumes area code is in orderingProviderPhone
    type: TEXT
    csvFields: [{ name: orderingProviderPhoneArea}]

  - name: first_test
    type: CODE
    valueSet: covid-19/yesno
    documentation: Override the base hl70136 valueset with a custom one, to handle slightly different syntax
    csvFields: [{ name: firstTest, format: $display}]

  - name: previous_test_type
    documentation:  Custom field. Note, value matched LIVD column "F", "Test Performed LOINC Code"
    type: TEXT
    csvFields: [{ name: previousTestType}]

  - name: previous_test_date
    documentation: Custom field
    type: DATE
    csvFields: [{ name: previousTestDate}]

  - name: previous_test_result
    documentation: Custom field.  Example - 260415000
    type: CODE
    valueSet: covid-19/test_result
    csvFields: [{ name: previousTestResult}]

  - name: employed_in_healthcare
    type: CODE
    valueSet: covid-19/yesno
    documentation: Override the base hl70136 valueset with a custom one, to handle slightly different syntax
    csvFields: [{ name: healthcareEmployee, format: $display}]

  - name: healthcare_employee_type
    documentation: Custom.  eg, 6816002
    type: CODE
    valueSet: occupations
    csvFields: [{ name: healthcareEmployeeType}]

  - name: symptomatic_for_disease
    type: CODE
    valueSet: covid-19/yesno
    documentation: Override the base hl70136 valueset with a custom one, to handle slightly different syntax
    csvFields: [{ name: symptomatic, format: $display}]

  - name: symptoms_list
    documentation:  Custom.  Just a simple text string for now. Format is symptomCode1^date1;symptomCode2^date2; ...
    type: TEXT
    csvFields: [{ name: symptomsList}]

  - name: hospitalized
    type: CODE
    valueSet: covid-19/yesno
    documentation: Override the base hl70136 valueset with a custom one, to handle slightly different syntax
    csvFields: [{ name: hospitalized, format: $display}]

  - name: hospitalized_code
    documentation:  Custom.  eg, 840539006, same valueset as testResult
    csvFields: [{ name: hospitalizedCode}]
    type: CODE
    valueSet: covid-19/test_result

  - name: icu
    type: CODE
    valueSet: covid-19/yesno
    documentation: Override the base hl70136 valueset with a custom one, to handle slightly different syntax
    csvFields: [{ name: symptomsIcu, format: $display}]

  - name: resident_congregate_setting
    type: CODE
    valueSet: covid-19/yesno
    documentation: Override the base hl70136 valueset with a custom one, to handle slightly different syntax
    csvFields: [{ name: congregateResident, format: $display}]

  - name: site_of_care
    documentation: Custom field
    type: CODE
    valueSet: site_of_care
    csvFields: [{ name: congregateResidentType}]

  - name: pregnant
    csvFields: [{ name: pregnant}]

  - name: pregnant_text
    documentation: Custom.  ReportStream uses the 'pregnant' code, not this text value.
    type: TEXT
    csvFields: [{ name: pregnantText}]

  - name: patient_email
    csvFields: [{ name: patientEmail}]

  - name: reporting_facility_name
    mapper: use(testing_lab_name)

  - name: reporting_facility_clia
    mapper: use(testing_lab_clia)

  - name: ordering_facility_name
    csvFields: [{ name: orderingFacilityName}]

  - name: ordering_facility_street
    csvFields: [{ name: orderingFacilityStreet}]

  - name: ordering_facility_street2
    csvFields: [{ name: orderingFacilityStreet2}]

  - name: ordering_facility_city
    csvFields: [{ name: orderingFacilityCity}]

  - name: ordering_facility_state
    cardinality:  ZERO_OR_ONE
    documentation:  Note that many states expect this field to be available, or ReportStream is not able to route data to them.  Please provide if possible in order for us to route to as many states as possible.
    csvFields: [{ name: orderingFacilityState}]

  - name: ordering_facility_zip_code
    csvFields: [{ name: orderingFacilityZip}]

  - name: ordering_facility_county
    csvFields: [{ name: orderingFacilityCounty}]

  - name: ordering_facility_phone_number
    csvFields: [{ name: orderingFacilityPhone}]

  - name: ordering_facility_email
    csvFields: [{ name: orderingFacilityEmail}]

  # These fields are calculated
  - name: test_authorized_for_otc
  - name: test_authorized_for_home
  - name: test_authorized_for_unproctored
