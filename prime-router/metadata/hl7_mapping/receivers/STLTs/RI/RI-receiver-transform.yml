hl7Class: ca.uhn.hl7v2.model.v251.message.ORU_R01

extends: ../../../ORU_R01/ORU_R01-base
elements:
  # MSH 3-1
  - name: ri-sending-application-namespace-id
    value: [ '"CDC PRIME - Atlanta, Georgia (Dekalb)"' ]
    hl7Spec: [ MSH-3-1 ]

  # MSH 3-2
  - name: ri-sending-application-universal-id
    value: [ '"2.16.840.1.114222.4.1.237821"' ]
    hl7Spec: [ MSH-3-2 ]

  # MSH 3-3
  - name: ri-sending-application-universal-id-type
    value: [ '"ISO"' ]
    hl7Spec: [ MSH-3-3 ]

  # MSH 5
  - name: ri-receiving-application
    value: [ '"RIDOH"' ]
    hl7Spec: [ MSH-5 ]

  # MSH 6
  - name: ri-receiving-facility
    value: [ '"RIDOH"' ]
    hl7Spec: [ MSH-6 ]

  # PID 5-7
  - name: ri-patient-name_use
    condition: true
    resource: 'Bundle'
    value: [ '""' ]
    hl7Spec: [ '/PATIENT_RESULT/PATIENT/PID-5-7' ]

  # PID 22-1
  - name: ri-patient-ethnicity_identifier-code
    value:
      - 'Bundle.entry.resource.ofType(Patient).extension(%`rsext-ethnic-group`).value.coding.where(extension(%`rsext-code-index-name`).value = "identifier").code'
      - 'Bundle.entry.resource.ofType(Patient).extension(%`rsext-ethnic-group`).value.coding[0].code'
    hl7Spec: [ '/PATIENT_RESULT/PATIENT/PID-22-1' ]
    valueSet:
      values:
        H: 2135-2
        N: 2186-5

  # PID 22-3
  - name: ri-patient-ethnicity_identifier-system
    condition: true
    resource: 'Bundle'
    value: [ '"CDCREC"' ]
    hl7Spec: [ '/PATIENT_RESULT/PATIENT/PID-22-3' ]

  # PID 22-7
  - name: ri-patient-ethnicity_identifier-version
    condition: true
    resource: 'Bundle'
    value: [ '"3.1.0"' ]
    hl7Spec: [ '/PATIENT_RESULT/PATIENT/PID-22-7' ]

  # ORC 12-1
  - name: ri-order-ordering-provider_xcn-id-number
    condition: true
    resource: 'Bundle'
    value: [ '""' ]
    hl7Spec: [ '/PATIENT_RESULT/ORDER_OBSERVATION*/ORC-12-1' ]

  # OBR 16-1
  - name: ri-ordering-provider_xcn-id-number
    condition: true
    resource: 'Bundle'
    value: [ '""' ]
    hl7Spec: [ '/PATIENT_RESULT/ORDER_OBSERVATION*/OBR-16-1' ]

  - name: observation-result-with-aoe
    # Grab only the AOE observations from ServiceRequest.supportingInfo NOT associated with a specimen
    resource: '%resource.result.resolve() | %service.supportingInfo.resolve().where(specimen.exists().not()) | %service.supportingInfo.resolve().where(meta.tag.code = "AOE")'
