elements:
  - name: specimen-set-id
    value: [ '"1"' ]
    hl7Spec: [ '%{hl7SpecimenFieldPath}-1' ]

  - name: specimen-identifier-placer
    resource: '%resource.identifier.where(type.empty())'
    condition: '%resource.exists()'
    constants:
      entityIdFieldPath: '%{hl7SpecimenFieldPath}-2-1'
    schema: datatype/ei-entity-identifier
    resourceIndex: entityIdIndex

  - name: specimen-identifier-filler
    resource: '%resource.identifier.where(type.coding.code = "FGN")'
    condition: '%resource.exists()'
    constants:
      entityIdFieldPath: '%{hl7SpecimenFieldPath}-2-2'
    schema: datatype/ei-entity-identifier
    resourceIndex: entityIdIndex

  #  If there's only one identifier and system is empty get identifier from performer org
  - name: specimen-organization-identifier
    condition: '%specimen.identifier.count() = 1 and %specimen.identifier.system.empty()'
    resource: '%performerOrganization'
    constants:
      organizationIdFieldPath: '%{hl7SpecimenFieldPath}-2-1'
      identifier: '%specimen.identifier[0].value'
    schema: organization-identifier

  #  If there's only one identifier and system is empty get identifier from performer org
  - name: specimen-organization-identifier-2
    condition: '%specimen.identifier.count() = 1 and %specimen.identifier.system.empty()'
    resource: '%performerOrganization'
    constants:
      organizationIdFieldPath: '%{hl7SpecimenFieldPath}-2-2'
      identifier: '%specimen.identifier[0].value'
    schema: organization-identifier

  - name: specimen-type
    resource: '%resource.type'
    constants:
      cweFieldPath: '%{hl7SpecimenFieldPath}-4'
    schema: datatype/ce-coded-with-exceptions

  - name: specimen-type-modifier
    resource: '%resource.extension(%`rsext-specimen-type-modifier`).value'
    condition: '%resource.exists()'
    constants:
      cweFieldPath: '%{hl7SpecimenFieldPath}-5'
    schema: datatype/ce-coded-with-exceptions

  - name: specimen-additives
    resource: '%resource.container.additive[0]'
    condition: '%resource.exists()'
    constants:
      cweFieldPath: '%{hl7SpecimenFieldPath}-6'
    schema: datatype/ce-coded-with-exceptions

  - name: specimen-collection-method
    resource: '%resource.collection.method'
    condition: '%resource.exists()'
    constants:
      cweFieldPath: '%{hl7SpecimenFieldPath}-7'
    schema: datatype/ce-coded-with-exceptions

  - name: specimen-source-site
    resource: '%resource.collection.bodySite'
    condition: '%resource.exists()'
    constants:
      cweFieldPath: '%{hl7SpecimenFieldPath}-8'
    schema: datatype/ce-coded-with-exceptions

  - name: specimen-source-site-modifier
    resource: '%resource.collection.extension(%`rsext-specimen-source-site-modifier`).value'
    condition: '%resource.exists()'
    constants:
      cweFieldPath: '%{hl7SpecimenFieldPath}-9'
    schema: datatype/ce-coded-with-exceptions

  - name: specimen-role
    value: [ '""' ]
    hl7Spec: [ '%{hl7SpecimenFieldPath}-11' ]

  - name: specimen-description
    resource: '%resource.note.where(extension(%`rsext-hl7v2Name`).exists().not())'
    value: [ '%resource.text' ]
    hl7Spec: [ '%{hl7SpecimenFieldPath}-14' ]

  - name: specimen-collection-time
    condition: '%resource.collection.collected.exists() and %resource.collection.collected is dateTime'
    value: [ '%resource.collection.collected' ]
    hl7Spec: [ '%{hl7SpecimenFieldPath}-17-1' ]

  - name: specimen-observation-date-time-start
    condition: '%resource.collection.collected.exists() and %resource.collection.collected is Period'
    value: [ '%resource.collection.collected.start' ]
    hl7Spec: [ '%{hl7SpecimenFieldPath}-17-1' ]

  # Alternative to getting specimen collection time from DiagnosticReport instead
  - name: specimen-collection-time-diagnostic
    condition: '%resource.collection.collected.exists().not()'
    value: [ '%diagnostic.effective' ]
    hl7Spec: [ '%{hl7SpecimenFieldPath}-17-1' ]

  - name: specimen-observation-date-time-end
    condition: '%resource.collection.collected.exists() and %resource.collection.collected is Period'
    value: [ '%resource.collection.collected.end' ]
    hl7Spec: [ '%{hl7SpecimenFieldPath}-17-2' ]

  - name: specimen-received-time
    condition: '%resource.receivedTime.exists() and %resource.receivedTime is dateTime'
    value: [ '%resource.receivedTime' ]
    hl7Spec: [ '%{hl7SpecimenFieldPath}-18' ]

  - name: specimen-reject-reason
    value: [ '""' ]
    hl7Spec: [ '%{hl7SpecimenFieldPath}-21' ]

  - name: specimen-condition
    resource: '%resource.condition'
    condition: '%resource.exists()'
    constants:
      cweFieldPath: '%{hl7SpecimenFieldPath}-24'
    schema: datatype/ce-coded-with-exceptions

  - name: specimen-number-of-containers
    resource: '%resource.container.specimenQuantity'
    condition: '%resource.exists()'
    value: [ '%resource.value' ]
    hl7Spec: [ '%{hl7SpecimenFieldPath}-26' ]

  - name: specimen-container-type
    resource: '%resource.container.type'
    constants:
      cweFieldPath: '%{hl7SpecimenFieldPath}-27'
    schema: datatype/ce-coded-with-exceptions

  - name: specimen-observation-result-with-aoe
    resource: '%service.supportingInfo.resolve().where(specimen.id = %specimen.id and meta.tag.code != "AOE")'
    schema: observation-result
    resourceIndex: specimenObservationIndex
    constants:
      hl7ObservationPath: '/PATIENT_RESULT/ORDER_OBSERVATION(%{orderIndex})/SPECIMEN(%{specimenIndex})/SPECIMEN_OBSERVATION'
      hl7OBXField: '/PATIENT_RESULT/ORDER_OBSERVATION(%{orderIndex})/SPECIMEN(%{specimenIndex})/SPECIMEN_OBSERVATION(%{specimenObservationIndex})/OBX'
      observation: '%service.supportingInfo.resolve().where(specimen.id = %specimen.id)[%specimenObservationIndex]'
      resultIndex: '%specimenObservationIndex'