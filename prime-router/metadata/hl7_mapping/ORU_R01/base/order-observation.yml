name: ORU-R01-order-observation
constants:
  hl7Order: /PATIENT_RESULT/ORDER_OBSERVATION(%{orderIndex})
  hl7ObservationNotes: /PATIENT_RESULT/ORDER_OBSERVATION(%{orderIndex})/OBSERVATION
elements:
  - name: order-segment
    # Only create the segment if we have data for it
    condition: '%resource.basedOn.resolve().extension(%`rsext-order-control`).exists()'
    schema: order

  - name: observation-request
    # Condition from ORU_RO1 covers this schema as well
    schema: observation-request

  - name: order-note
    resource: '%resource.basedOn.resolve().note.text.split(''\n'')'
    condition: 'Bundle.entry.resource.ofType(DiagnosticReport)[%orderIndex].basedOn.resolve().note.exists()'
    schema: note
    resourceIndex: noteIndex
    constants:
      hl7NotePath: '%{hl7Order}'

  - name: specimen
    resource: '%resource.specimen.resolve()'
    condition: '%resource.exists()'
    schema: specimen

  - name: timing-segment
    resource: '%resource.basedOn.resolve()'
    # Only create the segment if we have data for it
    condition: >
      %resource.extension(%`rsext-start-of-service`).exists() or
      %resource.extension(%`rsext-end-of-service`).exists() or
      %resource.extension(%`rsext-service-priority`).exists()
    schema: timing-quantity

  - name: observation
    # resource is the collection of Observations within the DiagnosticReport
    resource: '%resource.result'
    schema: observation
    resourceIndex: observationIndex