constants:
  diagnostic: 'Bundle.entry.resource.ofType(DiagnosticReport)[%orderIndex]'
  service: 'Bundle.entry.resource.ofType(DiagnosticReport)[%orderIndex].basedOn.resolve()'
  
elements:
  - name: order-observation
    schema: order-observation

  - name: timing-quantity
    resource: '%service'
    condition: >
      %resource.occurrence.repeat.bounds.start.exists() or
      %resource.occurrence.repeat.bounds.end.exists() or
      %resource.priority.exists() or
      %resource.extension(%`rsext-service-priority`).exists()
    schema: timing-quantity

  - name: observation
    schema: observation

  - name: specimen
    schema: specimen