#!/bin/bash
#
# DEPRECATED: This script has been replaced by a Gradle task.  Run
#   ./gradlew primeCLI --args='<args>'
#
# This script runs the CLI of the project.
#
# It handles four different configurations in this order of preference
#  1. Where a fat jar (a jar with all dependencies) is present in the working directory
#  2. Where a fat jar is present in a 'target' subdirectory
#  3. Where a slim jar is present in the working directory and a 'azure-functions/prime-data-hub-router/lib' exists
#  4. Where a slim jar is present in a 'target' subdirectory and the lib sub directory is also present
#
# This script should work on both a Mac and the Dev Docker container

version=0.2-SNAPSHOT
fat_jar_name=prime-router-$version-all.jar
lib_dir=build/libs

# find the jar
if [ -f $fat_jar_name ]; then
  jar=$fat_jar_name
elif [ -f $lib_dir/$fat_jar_name ]; then
  jar=$lib_dir/$fat_jar_name

# If the jar was not found then try to build it
elif [ -r ./gradlew ]; then
    bash ./gradlew fatjar
    if [ $? -eq 0 ]; then
        jar=$lib_dir/$fat_jar_name
    else
        echo "Could not find $fat_jar_name"
        exit 1
    fi
fi

java -Dfile.encoding=UTF8 -Dorg.slf4j.simpleLogger.defaultLogLevel=warn -jar $jar "$@"
