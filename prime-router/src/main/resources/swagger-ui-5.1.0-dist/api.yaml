openapi: 3.0.1
info:
  title: Prime ReportStream
  description: A router of public health data from senders to receivers
  contact:
    name: USDS at Centers for Disease Control and Prevention
    url: https://reportstream.cdc.gov
    email: reportstream@cdc.gov
  version: 0.2.0-oas3
servers:
- url: http://localhost:7071
  description: Local Server (Local Development Use)
- url: https://staging.reportstream.cdc.gov
  description: Staging Server
- url: https://reportstream.cdc.gov
  description: Production Server
paths:
  /settings/organizations/{organizationName}/public-keys/{scope}/{kid}:
    delete:
      tags:
      - Public Key Management
      summary: Delete API key
      description: "Delete API key given organization name, scope, and kid"
      operationId: delete
      parameters:
      - name: organizationName
        in: path
        description: the organization whose key is to be deleted.
        required: true
        schema:
          type: string
      - name: scope
        in: path
        description: the scope of the key to be deleted.
        required: true
        schema:
          type: string
      - name: kid
        in: path
        description: the id of the key to be deleted.
        required: true
        schema:
          type: string
      responses:
        "401":
          description: Unauthorized operation
          content:
            application/json:
              schema:
                type: string
        "400":
          description: "Bad Request, e.g. request scope must be simple_report.*.report"
          content:
            application/json:
              schema:
                type: string
        "404":
          description: "Not Found, e.g. no such organization, or no key id found"
          content:
            application/json:
              schema:
                type: string
        "200":
          description: API key deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpResponseMessage'
              examples:
                Example response for API key deletion:
                  summary: Example response when key deleted successfully
                  description: Example response for API key deletion
                  value:
                    orgName: simple_report
                    keys:
                    - scope: simple_report.*.report
                      keys: []
      security:
      - primeSecurity: []
  /settings/organizations/{organizationName}/public-keys:
    get:
      tags:
      - Public Key Management
      summary: Retrieve API keys (deprecated use v1 version)
      description: Retrieve API key(s) for the given organization
      operationId: get
      parameters:
      - name: organizationName
        in: path
        description: the organization whose keys are retrieved
        required: true
        schema:
          type: string
      responses:
        "200":
          description: API keys returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysResponse'
              examples:
                Example response for API key retrieval:
                  summary: Example response when key retrieved successfully
                  description: Example response for API key retrieval
                  value:
                    data:
                    - scope: simple_report.*.report
                      keys:
                      - kty: RSA
                        kid: simple_report
                        "n": jgM1afKc5oBw_jq_B4C0oqKbqFTvAAt-FGnZZJ8hczsZmTIr4L2orV49zdaRQOve7Q0KwUOzWPAHpv9WYjDOyvf8ea-IgngM0EQAjcXuxlDaD7UvGurQmiATOTvpDQkjhaMQyTyfD8_6p8kjY3hcQw2dByoFziZ-ofRgYI5jGvtgSRDc_obIs2u5G0wrhlh2sGRUF0mI9pqE8P8bd7TCeUpLJU2E3wz4LSbkbmL-u_JMRfSRzxh0c2baLcwJT9CtzWufNWeto9hITrgVddX7xdjVNq3uyeQvypeq9ZX9IhfiHTQTt4uZ9FKQUF9VP2mk4GRsCjnkNCRpi6LhP_d0Sw
                        e: AQAB
                    meta:
                      type: PublicKey
                      totalCount: 1
        "404":
          description: "Not found, e.g. No such organization: simple_X_report"
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
      deprecated: true
    post:
      tags:
      - Public Key Management
      summary: Create (POST) an API key for the organization
      description: Create API key for the given organization
      operationId: post
      parameters:
      - name: organizationName
        in: path
        description: the organization where a key is to be created.
        required: true
        schema:
          type: string
      - name: scope
        in: query
        description: the scope of the key to be created.
        schema:
          type: string
      - name: kid
        in: query
        description: the id of the key to be created.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
            examples:
              Example request body for API key creation:
                summary: Example request body for API key creation
                description: Example request body for API key creation
                value: |2

                  -----BEGIN PUBLIC KEY-----
                  MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjgM1afKc5oBw/jq/B4C0
                  oqKbqFTvAAt+FGnZZJ8hczsZmTIr4L2orV49zdaRQOve7Q0KwUOzWPAHpv9WYjDO
                  yvf8ea+IgngM0EQAjcXuxlDaD7UvGurQmiATOTvpDQkjhaMQyTyfD8/6p8kjY3hc
                  Qw2dByoFziZ+ofRgYI5jGvtgSRDc/obIs2u5G0wrhlh2sGRUF0mI9pqE8P8bd7TC
                  eUpLJU2E3wz4LSbkbmL+u/JMRfSRzxh0c2baLcwJT9CtzWufNWeto9hITrgVddX7
                  xdjVNq3uyeQvypeq9ZX9IhfiHTQTt4uZ9FKQUF9VP2mk4GRsCjnkNCRpi6LhP/d0
                  SwIDAQAB
                  -----END PUBLIC KEY-----
      responses:
        "200":
          description: API key created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpResponseMessage'
              examples:
                Example response for API key creation:
                  summary: Example response when key created successfully
                  description: Example response for API key creation
                  value:
                    orgName: simple_report
                    keys:
                    - scope: simple_report.*.report
                      keys:
                      - kty: RSA
                        kid: simple_report
                        "n": jgM1afKc5oBw_jq_B4C0oqKbqFTvAAt-FGnZZJ8hczsZmTIr4L2orV49zdaRQOve7Q0KwUOzWPAHpv9WYjDOyvf8ea-IgngM0EQAjcXuxlDaD7UvGurQmiATOTvpDQkjhaMQyTyfD8_6p8kjY3hcQw2dByoFziZ-ofRgYI5jGvtgSRDc_obIs2u5G0wrhlh2sGRUF0mI9pqE8P8bd7TCeUpLJU2E3wz4LSbkbmL-u_JMRfSRzxh0c2baLcwJT9CtzWufNWeto9hITrgVddX7xdjVNq3uyeQvypeq9ZX9IhfiHTQTt4uZ9FKQUF9VP2mk4GRsCjnkNCRpi6LhP_d0Sw
                        e: AQAB
        "400":
          description: "Bad Request, e.g. kid must be unique for the requested scope"
          content:
            application/json:
              schema:
                type: string
        "404":
          description: "Not Found, e.g. No such organization simple_report_noop"
          content:
            application/json:
              schema:
                type: string
        "401":
          description: Unauthorized operation
          content:
            application/json:
              schema:
                type: string
  /v1/settings/organizations/{organizationName}/public-keys:
    get:
      tags:
      - Public Key Management
      summary: "Retrieve API keys for the organization (v1), return API keys when\
        \ successful"
      description: Retrieve API key(s) for the given organization
      operationId: getV1
      parameters:
      - name: organizationName
        in: path
        description: the organization whose keys are retrieved
        required: true
        schema:
          type: string
      responses:
        "200":
          description: API keys returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysResponse'
              examples:
                Example response for API key retrieval:
                  summary: Example response when key retrieved successfully
                  description: Example response for API key retrieval
                  value:
                    data:
                    - scope: simple_report.*.report
                      keys:
                      - kty: RSA
                        kid: simple_report
                        "n": jgM1afKc5oBw_jq_B4C0oqKbqFTvAAt-FGnZZJ8hczsZmTIr4L2orV49zdaRQOve7Q0KwUOzWPAHpv9WYjDOyvf8ea-IgngM0EQAjcXuxlDaD7UvGurQmiATOTvpDQkjhaMQyTyfD8_6p8kjY3hcQw2dByoFziZ-ofRgYI5jGvtgSRDc_obIs2u5G0wrhlh2sGRUF0mI9pqE8P8bd7TCeUpLJU2E3wz4LSbkbmL-u_JMRfSRzxh0c2baLcwJT9CtzWufNWeto9hITrgVddX7xdjVNq3uyeQvypeq9ZX9IhfiHTQTt4uZ9FKQUF9VP2mk4GRsCjnkNCRpi6LhP_d0Sw
                        e: AQAB
                    meta:
                      type: PublicKey
                      totalCount: 1
        "404":
          description: "Not found, e.g. No such organization: simple_X_report"
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    HttpResponseMessage:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        body:
          type: object
        status:
          $ref: '#/components/schemas/HttpStatusType'
    HttpStatusType:
      type: object
    ApiKeysResponse:
      type: object
      properties:
        orgName:
          type: string
        keys:
          type: array
          items:
            $ref: '#/components/schemas/JwkSet'
    Jwk:
      type: object
      properties:
        kty:
          type: string
        use:
          type: string
        keyOps:
          type: string
        alg:
          type: string
        kid:
          type: string
        x5u:
          type: string
        x5c:
          type: array
          items:
            type: string
        x5t:
          type: string
        "n":
          type: string
        e:
          type: string
        d:
          type: string
        crv:
          type: string
        p:
          type: string
        q:
          type: string
        dp:
          type: string
        dq:
          type: string
        qi:
          type: string
        x:
          type: string
        "y":
          type: string
        k:
          type: string
    JwkSet:
      type: object
      properties:
        scope:
          type: string
        keys:
          type: array
          items:
            $ref: '#/components/schemas/Jwk'
    HttpRequestMessageString:
      type: object
      properties:
        httpMethod:
          type: string
          enum:
          - GET
          - HEAD
          - POST
          - PUT
          - DELETE
          - CONNECT
          - OPTIONS
          - TRACE
          - PATCH
        body:
          type: string
        queryParameters:
          type: object
          additionalProperties:
            type: string
        headers:
          type: object
          additionalProperties:
            type: string
        uri:
          type: string
          format: uri
  securitySchemes:
    primeSecurity:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://hhs-prime.okta.com/oauth/authorize
          tokenUrl: https://hhs-prime.okta.com/oauth/token
          scopes:
            org_admin: Grants write access to single org
            prime_admin: Grants access to admin operations
            user: Grants read access
