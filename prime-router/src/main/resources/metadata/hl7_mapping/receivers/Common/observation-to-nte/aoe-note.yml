constants:
  commentCondition: '%resource.code.coding.code.exists() and %resource.code.text.exists()'

elements:
  - name: note-id
    value: [ '%noteIndex + 1' ]
    hl7Spec: [ '%{hl7NotePath}/NTE(%{noteIndex})-1' ]

  - name: note-source
    value: [ '%resource.extension(%`rsext-note-source`).value' ]
    hl7Spec: [ '%{hl7NotePath}/NTE(%{noteIndex})-2' ]

  - name: aoe-note-source
    condition: '%resource.extension(%`rsext-note-source`).value.exists().not()'
    value:
      - '"L"'
    hl7Spec: [ '%{hl7NotePath}/NTE(%{noteIndex})-2' ]

  - name: aoe-note-comment-datetime
    condition: '%resource.value.exists() and %resource.value is dateTime and %commentCondition'
    value: [ '%resource.code.coding.code + " " + %resource.code.text + ": " + %resource.value.toString()' ]
    hl7Spec: [ '%{hl7NotePath}/NTE(%{noteIndex})-3' ]

  - name: aoe-note-comment-string
    condition: '%resource.value.exists() and %resource.value is string and %commentCondition'
    value: [ '%resource.code.coding.code + " " + %resource.code.text + ": " + %resource.value' ]
    hl7Spec: [ '%{hl7NotePath}/NTE(%{noteIndex})-3' ]

  - name: aoe-note-comment-cwe
    condition: '%resource.value.exists() and %resource.value is CodeableConcept and %commentCondition'
    value: [ '%resource.code.coding.code 
    + " " + %resource.code.text 
    + ": " + %resource.value.coding.display 
    + " " + %resource.value.coding.code
    + " " + %resource.value.coding.system.getCodingSystemMapping()' ]
    hl7Spec: [ '%{hl7NotePath}/NTE(%{noteIndex})-3' ]

  - name: note-comment
    condition: '%context.author.exists().not() or (%context.author.exists() and %context.author.is(string).not())'
    resource: '%resource.text.union(%resource.extension(%`rsext-note-comment`).tail().value)'
    resourceIndex: stIndex
    constants:
      stField: '%{hl7NotePath}/NTE(%{noteIndex})-3(%{stIndex})'
    schema: classpath:/metadata/hl7_mapping/datatypes/annotation/ST.yml

  # This doesn't handle the extension since it should only happen with FHIR senders, and those should only have one
  # comment per note
  - name: note-comment-author-string
    condition: '%resource.author.exists() and %resource.author.is(string)'
    value: [ '%resource.text + " Authored by: " + %resource.author' ]
    hl7Spec: [ '%{hl7NotePath}/NTE(%{noteIndex})-3' ]

  - name: note-comment-type-identifier
    resource: '%resource.extension(%`rsext-note-type`).value'
    constants:
      cweField: '%{hl7NotePath}/NTE(%{noteIndex})-4'
    schema: classpath:/metadata/hl7_mapping/datatypes/codeableConcept/CWE.yml

  - name: note-author
    condition: '%context.author.exists() and %context.author.is(Reference)'
    resource: '%resource.author.resolve()'
    schema: classpath:/metadata/hl7_mapping/resources/Practitioner/XCN.yml
    constants:
      hl7XCNField: '%{hl7NotePath}/NTE(%{noteIndex})-5'
      contactIndex: '0'