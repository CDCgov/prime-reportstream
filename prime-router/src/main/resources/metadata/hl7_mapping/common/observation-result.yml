elements:
  - name: result-set-id
    value: [ '%resultIndex + 1' ]
    hl7Spec: [ '%{hl7OBXField}-1' ]

  - name: result-value-type-st
    condition: '%resource.value.exists() and %resource.value.is(string)'
    value: [ '"ST"' ]
    hl7Spec: [ '%{hl7OBXField}-2' ]

  - name: result-value-type-dt
    condition: '%resource.value.exists() and %resource.value.is(dateTime)'
    value: [ '"DT"' ]
    hl7Spec: [ '%{hl7OBXField}-2' ]

  - name: result-value-type-ce
    resource: '%resource.value'
    condition: false
    # This element remains here for usage in receiver-transforms
    value: [ '"CE"' ]
    hl7Spec: [ '%{hl7OBXField}-2' ]

  - name: result-value-type-cwe
    resource: '%resource.value'
    condition: '%resource.exists() and %resource.is(CodeableConcept)'
    # Note that for v.2.5 and earlier, CWE is not officially in-spec, but is widely used. If a receiver requires
    # CE, that should be handled via receiver transform
    value: [ '"CWE"' ]
    hl7Spec: [ '%{hl7OBXField}-2' ]

  - name: result-value-type-sn
    condition: '%resource.value.exists() and %resource.value.is(Ratio)'
    value: [ '"SN"' ]
    hl7Spec: [ '%{hl7OBXField}-2' ]

  - name: result-value-type-nm
    condition: >
      %resource.value.exists() and 
      %resource.value.is(Quantity) and
      %resource.value.where(extension(%`rsext-cwe-quantity`)).exists().not()
    value: [ '"NM"' ]
    hl7Spec: [ '%{hl7OBXField}-2' ]

  - name: result-value-type-na
    condition: >
      %resource.value.exists() and 
      %resource.value.is(Quantity) and
      %resource.value.where(extension(%`rsext-cwe-quantity`)).exists()
    value: [ '"NA"' ]
    hl7Spec: [ '%{hl7OBXField}-2' ]

  - name: observation-identifier-code
    resource: '%resource.code'
    constants:
      cweFieldPath: '%{hl7OBXField}-3'
    schema: classpath:/metadata/hl7_mapping/common/datatype/ce-coded-with-exceptions.yml

  - name: observation-value-sub-id
    value: [ '%resource.extension(%`rsext-sub-id`).value' ]
    hl7Spec: [ '%{hl7OBXField}-4' ]

  - name: observation-value-st
    condition: '%resource.value.exists() and %resource.value is string'
    value: [ '%resource.value' ]
    hl7Spec: [ '%{hl7OBXField}-5' ]

  - name: observation-value-dateTime
    condition: '%context.value.exists() and %context.value is dateTime'
    resource: '%resource.value'
    constants:
      dtmFieldPath: '%{hl7OBXField}-5'
    schema: classpath:/metadata/hl7_mapping/datatypes/dateTime/DTMorDT.yml

  - name: observation-value-cwe
    resource: '%resource.value'
    condition: '%resource.exists() and %resource is CodeableConcept'
    constants:
      cweFieldPath: '%{hl7OBXField}-5'
    schema: classpath:/metadata/hl7_mapping/common/datatype/ce-coded-with-exceptions.yml

  - name: observation-value-quantity
    condition: '%resource.value.exists() and %resource.value is Quantity'
    value: [ '%resource.value.value' ]
    hl7Spec: [ '%{hl7OBXField}-5' ]

  - name: observation-value-numeric
    resource: '%resource.value'
    condition: '%resource.exists() and %resource is Ratio'
    schema: classpath:/metadata/hl7_mapping/common/datatype/sn-structured-numeric.yml

  - name: observation-units-identifier
    condition: >
      %context.where(extension(%`rsext-units`)).exists() and
      %context.value.where(extension(%`rsext-cwe-quantity`)).exists().not()
    resource: '%resource.extension(%`rsext-units`).value'
    constants:
      cweFieldPath: '%{hl7OBXField}-6'
    schema: classpath:/metadata/hl7_mapping/common/datatype/ce-coded-with-exceptions.yml

  - name: observation-units-identifier
    condition: >
      %context.value.exists() and
      %context.value.is(Quantity) and
      %context.value.where(extension(%`rsext-cwe-quantity`)).exists() and
      %context.value.extension(%`rsext-cwe-quantity`).value.where(extension(%`rsext-hl7v2Name`).value = "units").exists()
    resource: '%resource.value.extension(%`rsext-cwe-quantity`).value'
    constants:
      cweField: '%{hl7OBXField}-6'
    schema: classpath:/metadata/hl7_mapping/datatypes/codeableConcept/CWE.yml

  - name: observation-reference-range
    value: [ '%resource.referenceRange.text' ]
    hl7Spec: [ '%{hl7OBXField}-7' ]

  - name: observation-abnormal-flag
    resource: '%resource.interpretation'
    constants:
      cweFieldPath: '%{hl7OBXField}-8'
    schema: classpath:/metadata/hl7_mapping/common/datatype/ce-coded-with-exceptions.yml

  - name: observation-result-status
    value: [ '%resource.status' ]
    condition: '%resource.dataAbsentReason.exists().not() or %resource.dataAbsentReason.coding.where(extension(%`rsext-code-index-name`).value = "identifier").code = "unknown"'
    hl7Spec: [ '%{hl7OBXField}-11' ]
    valueSet:
      values:
        registered: I
        preliminary: P
        final: F
        corrected: C
        amended: C
        entered-in-error: W

  - name: observation-result-status-cancelled
    value: [ "'X'" ]
    condition: '%resource.dataAbsentReason.coding.where(extension(%`rsext-code-index-name`).value = "identifier").exists() and %resource.dataAbsentReason.coding.where(extension(%`rsext-code-index-name`).value = "identifier").code = "cannot-be-obtained"'
    hl7Spec: [ '%{hl7OBXField}-11' ]

  - name: observation-result-status-not-asked
    value: [ "'N'" ]
    condition: '%resource.dataAbsentReason.coding.where(extension(%`rsext-code-index-name`).value = "alternate identifier").exists() and %resource.dataAbsentReason.coding.where(extension(%`rsext-code-index-name`).value = "alternate identifier").code = "not-asked"'
    hl7Spec: [ '%{hl7OBXField}-11' ]


  - name: observation-date-time
    resource: '%resource.effective'
    constants:
      dtmFieldPath: '%{hl7OBXField}-14'
    schema: classpath:/metadata/hl7_mapping/datatypes/dateTime/DTMorDT.yml

  - name: observation-producer-id
    resource: '%resource.extension(%`rsext-producer-id`).value'
    constants:
      ceFieldPath: '%{hl7OBXField}-15'
    schema: classpath:/metadata/hl7_mapping/common/datatype/ce-coded-element.yml

  - name: observation-producer-id-identifier
    resource: '%resource.extension(%`rsext-producer-id`).value.resolve()'
    value: [ '%resource.identifier[0].value' ]
    hl7Spec: [ '%{hl7OBXField}-15-1' ]

  - name: observation-producer-id-text
    resource: '%resource.extension(%`rsext-producer-id`).value.resolve()'
    value: [ '%resource.name' ]
    hl7Spec: [ '%{hl7OBXField}-15-2' ]

  - name: observation-producer-id-system
    resource: '%resource.extension(%`rsext-producer-id`).value.resolve().identifier.extension(%`rsext-coding-system`).value'
    value: [ '%resource.coding.code' ]
    hl7Spec: [ '%{hl7OBXField}-15-3' ]

  - name: responsible-observer
    resource: '%resource.performer.resolve().practitioner.resolve()'
    condition: '%resource.identifier.type.coding.code="responsibleObserver"'
    constants:
      hl7XCNField: '%{hl7OBXField}-16'
    schema: classpath:/metadata/hl7_mapping/common/datatype/xcn-contact.yml
    resourceIndex: contactIndex

  - name: observation-method
    resource: '%resource.method'
    schema: classpath:/metadata/hl7_mapping/common/datatype/ce-coded-with-exceptions.yml
    constants:
      cweFieldPath: '%{hl7OBXField}-17'

  - name: equipment-instance-identifier
    resource: '%resource.device.resolve().identifier'
    schema: classpath:/metadata/hl7_mapping/common/datatype/ei-entity-identifier.yml
    constants:
      entityIdFieldPath: '%{hl7OBXField}-18'

  - name: analysis-date-time
    resource: '%resource.issued'
    constants:
      dtmFieldPath: '%{hl7OBXField}-19'
    schema: classpath:/metadata/hl7_mapping/datatypes/dateTime/DTMorDT.yml

  - name: performing-organization-name-pracrole
    condition: >
      %observation.performer.resolve().ofType(PractitionerRole).exists() and 
      (%observation.performer.resolve().ofType(PractitionerRole).practitioner.exists() or
       %observation.performer.resolve().ofType(PractitionerRole).practitioner.identifier.type.coding.code="MDIR")
    resource: '%resource.performer.resolve().ofType(PractitionerRole).organization.resolve()'
    schema: classpath:/metadata/hl7_mapping/common/datatype/xon-organization.yml
    constants:
      hl7OrgField: '%{hl7OBXField}-23'

  - name: performing-organization-name-non-pracrole
    condition: '%observation.performer.resolve().ofType(Organization).exists()'
    resource: '%resource.performer.resolve().ofType(Organization)'
    schema: classpath:/metadata/hl7_mapping/common/datatype/xon-organization.yml
    constants:
      hl7OrgField: '%{hl7OBXField}-23'

  - name: performing-organization-address-pracrole
    condition: >
      %observation.performer.resolve().ofType(PractitionerRole).exists() and 
      (%observation.performer.resolve().ofType(PractitionerRole).practitioner.exists() or
       %observation.performer.resolve().ofType(PractitionerRole).practitioner.identifier.type.coding.code="MDIR")
    resource: '%resource.performer.resolve().ofType(PractitionerRole).organization.resolve().address'
    constants:
      hl7AddressField: '%{hl7OBXField}-24'
    schema: classpath:/metadata/hl7_mapping/common/datatype/xad-extended-address.yml
    resourceIndex: contactIndex

  - name: performing-organization-address-non-pracrole
    condition: '%observation.performer.resolve().ofType(Organization).exists()'
    resource: '%resource.performer.resolve().ofType(Organization).address'
    constants:
      hl7AddressField: '%{hl7OBXField}-24'
    schema: classpath:/metadata/hl7_mapping/common/datatype/xad-extended-address.yml
    resourceIndex: contactIndex

  # This is technically incorrect as this should be using the PractitionerRole instead
  # It works because the HL7 -> FHIR mapping sets the same value on the practitioner
  # It cannot be changed at this time because this is the shape of the FHIR that SR sends in
  - name: performing-organization-director
    resource: '%resource.performer.resolve().practitioner.resolve()'
    condition: '%resource.identifier.type.coding.code="MDIR"'
    constants:
      hl7XCNField: '%{hl7OBXField}-25'
    schema: classpath:/metadata/hl7_mapping/common/datatype/xcn-contact.yml
    resourceIndex: contactIndex

  - name: observation-aoe-identifier
    condition: '%resource.meta.tag.code="AOE"'
    value: [ '"QST"' ]
    hl7Spec: [ '%{hl7OBXField}-29' ]


  - name: observation-note
    condition: '%context.note.exists()'
    resource: '%resource.note'
    schema: classpath:/metadata/hl7_mapping/datatypes/annotation/NTE.yml
    resourceIndex: noteIndex
    constants:
      hl7NotePath: '%{hl7SegmentGroup}'