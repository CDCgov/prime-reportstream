name: FULL_ELR_E2E
externalName: Ignore FULL_ELR_E2E
organizationName: ignore
topic: full-elr
customerStatus: active
qualityFilter:
  - "Bundle.entry.resource.ofType(MessageHeader).id.exists()"
  - "Bundle.entry.resource.ofType(Patient).name.family.exists()"
  - "Bundle.entry.resource.ofType(Patient).name.given.count() > 0"
  - "Bundle.entry.resource.ofType(Patient).birthDate.exists()"
  - "Bundle.entry.resource.ofType(Specimen).type.exists()"
  - "(Bundle.entry.resource.ofType(Patient).address.line.exists() or Bundle.entry.resource.ofType(Patient).address.postalCode.exists() or Bundle.entry.resource.ofType(Patient).telecom.exists())"
  - "((Bundle.entry.resource.ofType(Specimen).collection.collectedPeriod.exists() or Bundle.entry.resource.ofType(Specimen).collection.collected.exists()) or Bundle.entry.resource.ofType(ServiceRequest).occurrence.exists() or Bundle.entry.resource.ofType(Observation).effective.exists())"
processingModeFilter:
  - "Bundle.entry.resource.ofType(MessageHeader).meta.tag.where(system = 'http://terminology.hl7.org/CodeSystem/v2-0103').code.exists() and Bundle.entry.resource.ofType(MessageHeader).meta.tag.where(system = 'http://terminology.hl7.org/CodeSystem/v2-0103').code = 'P'"
jurisdictionalFilter: [ "(Bundle.entry.resource.ofType(ServiceRequest)[0].requester.resolve().organization.resolve().address.state.exists() and Bundle.entry.resource.ofType(ServiceRequest)[0].requester.resolve().organization.resolve().address.state = 'IG') or (Bundle.entry.resource.ofType(Patient).address.state.exists() and Bundle.entry.resource.ofType(Patient).address.state = 'IG')" ]
timing:
  operation: NONE
  numberPerDay: 1440 # Every minute
  initialTime: 00:00
translation: !<HL7>
  schemaName: "classpath:/metadata/hl7_mapping/ORU_R01/ORU_R01-base.yml"
  useTestProcessingMode: false
  useBatchHeaders: false
  type: "HL7"
  receivingApplicationName: "IG-ELR"
  receivingFacilityName: "IG"
transport:
  type: SFTP
  host: sftp
  port: 22
  filePath: ./upload
  credentialName: DEFAULT-SFTP