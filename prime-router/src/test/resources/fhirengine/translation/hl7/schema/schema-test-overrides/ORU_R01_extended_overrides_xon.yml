hl7Class: ca.uhn.hl7v2.model.v251.message.ORU_R01
extends: 'classpath:/fhirengine/translation/hl7/schema/schema-test-overrides/ORU_R01.yml'
constants:
  otherConstant: '"overriddenOtherConstant"'
elements:

  - name: message-header-8
    value: ['%otherConstant']
    hl7Spec: ['MSH-8']

  - name: message-header-10
    value: [ '%baseConstant' ]
    hl7Spec: [ 'MSH-10' ]

  - name: message-header-11
    value: ['"override"']
    hl7Spec: ['MSH-11']

  - name: override-message-header-14
    value: [ '"not14"' ]
    hl7Spec: [ 'MSH-14' ]

  - name: software-2
    value: [ '"not1"' ]
    hl7Spec: [ 'SFT-2' ]

  - name: software-3
    constants:
      fieldThree: '4'

  - name: software-5
    value: [ '%sftConstant' ]
    hl7Spec: [ 'SFT-5' ]

  # This exercises a base extending overriding the schema for a nested schema. In this case,
  # software-1 is defined in sft.yml and the schema is getting overridden
  - name: software-1
    resource: '%resource.event'
    schema: 'classpath:/fhirengine/translation/hl7/schema/schema-test-overrides/ORU_R01/xon2.yml'

  # This exercises adding a new element that would be "part" of xon which is also getting overridden
  # to a new schema
  - name: xon-10
    resource: 'Bundle.entry.resource.ofType(MessageHeader)'
    value: ['%resource.event.system']
    hl7Spec: ['SFT-1-10']