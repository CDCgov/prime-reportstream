# Builder
FROM cgr.dev/chainguard/wolfi-base:latest@sha256:898e4f30d920607c58acc01eabdfc9ac0725fb83b780d695542b3c3a3d265e48 AS builder

ENV PG_VERSION=16.6
ENV PG_SRC_DIR=/usr/local/src/postgresql

RUN apk add --no-cache \
    icu-dev \
    build-base \
    clang \
    gcc \
    git \
    make \
    perl \
    readline-dev \
    zlib-dev \
    openssl-dev \
    wget \
    curl \
    flex \
    bison


WORKDIR /usr/local/src
RUN wget -q https://ftp.postgresql.org/pub/source/v${PG_VERSION}/postgresql-${PG_VERSION}.tar.gz && \
    tar -xf postgresql-${PG_VERSION}.tar.gz && \
    mv postgresql-${PG_VERSION} ${PG_SRC_DIR} && \
    cd ${PG_SRC_DIR} && \
    CFLAGS="-std=gnu11" ./configure --prefix=/usr/local/postgres --with-openssl --with-readline && \
    make -j$(nproc) && \
    make install

# Runtime
FROM cgr.dev/chainguard/wolfi-base:latest@sha256:898e4f30d920607c58acc01eabdfc9ac0725fb83b780d695542b3c3a3d265e48

RUN apk add --no-cache \
    bash \
    su-exec \
    shadow \
    ca-certificates \
    openssl \
    tzdata \ 
    icu \
    readline

COPY --from=builder /usr/local/postgres /usr/local/postgres

ENV PATH="/usr/local/postgres/bin:$PATH"
ENV PGDATA="/var/lib/postgresql/data"

RUN addgroup -S postgres && adduser -S postgres -G postgres && \
    mkdir -p ${PGDATA} && chown -R postgres:postgres ${PGDATA}

# Copy initialization script
COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

USER postgres

EXPOSE 5432

ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
