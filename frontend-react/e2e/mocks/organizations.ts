export const MOCK_GET_RECEIVERS_AK = [
    {
        name: "full-elr-test",
        organizationName: "ak-phd",
        topic: "full-elr",
        customerStatus: "active",
        translation: {
            schemaName:
                "classpath:/metadata/hl7_mapping/receivers/STLTs/AK/AK-receiver-transform.yml",
            useTestProcessingMode: false,
            useBatchHeaders: true,
            receivingApplicationName: null,
            receivingApplicationOID: null,
            receivingFacilityName: null,
            receivingFacilityOID: null,
            messageProfileId: null,
            replaceValue: {
                "PID-22-3": "CDCREC",
            },
            replaceValueAwithB: {},
            reportingFacilityName: null,
            reportingFacilityId: null,
            reportingFacilityIdType: null,
            suppressQstForAoe: false,
            suppressHl7Fields: "PID-5-7, ORC-12-1, OBR-16-1",
            suppressAoe: false,
            defaultAoeToUnknown: false,
            replaceUnicodeWithAscii: false,
            useBlankInsteadOfUnknown: null,
            truncateHDNamespaceIds: false,
            truncateHl7Fields: null,
            usePid14ForPatientEmail: false,
            convertTimestampToDateTime: null,
            cliaForOutOfStateTesting: null,
            cliaForSender: {},
            phoneNumberFormatting: "STANDARD",
            suppressNonNPI: false,
            processingModeCode: null,
            replaceDiiWithOid: null,
            applyOTCDefault: false,
            useOrderingFacilityName: "STANDARD",
            valueSetOverrides: {},
            nameFormat: "STANDARD",
            receivingOrganization: null,
            convertPositiveDateTimeOffsetToNegative: false,
            stripInvalidCharsRegex: null,
            convertDateTimesToReceiverLocalTime: false,
            useHighPrecisionHeaderDateTimeFormat: false,
            type: "HL7",
            truncationConfig: {
                truncateHDNamespaceIds: false,
                truncateHl7Fields: [],
                customLengthHl7Fields: {},
            },
        },
        jurisdictionalFilter: [
            "(%performerState.exists() and %performerState = 'AK') or (%patientState.exists() and %patientState = 'AK')",
        ],
        qualityFilter: [
            "%messageId.exists()",
            "%patient.birthDate.exists()",
            "%patient.name.family.exists()",
            "%patient.name.given.count() > 0",
            "%specimen.type.exists()",
            "(%patient.address.line.exists() or %patient.address.postalCode.exists() or %patient.telecom.exists())",
            "((%specimen.collection.collectedPeriod.exists() or %specimen.collection.collected.exists()) or %serviceRequest.occurrence.exists() or %observation.effective.exists())",
        ],
        routingFilter: [
            "Bundle.entry.resource.ofType(Organization).where(identifier.value in ('05D2201580')).exists()",
        ],
        processingModeFilter: [
            "Bundle.entry.resource.ofType(MessageHeader).extension('https://reportstream.cdc.gov/fhir/StructureDefinition/sender-id').exists().not() or Bundle.entry.resource.ofType(MessageHeader).extension('https://reportstream.cdc.gov/fhir/StructureDefinition/sender-id').value != 'hcintegrations'",
        ],
        reverseTheQualityFilter: false,
        deidentify: false,
        deidentifiedValue: "",
        timing: {
            operation: "MERGE",
            numberPerDay: 1440,
            initialTime: "00:00",
            timeZone: "EASTERN",
            maxReportCount: 100,
            whenEmpty: {
                action: "NONE",
                onlyOncePerDay: false,
            },
        },
        description: "",
        transport: {
            host: "sftp-west.inductivehealth.com",
            port: "22",
            filePath: "/incoming/full_elr/staging",
            credentialName: null,
            type: "SFTP",
        },
        version: 8,
        createdBy: "michael.kalish@focusconsulting.io",
        createdAt: "2024-03-05T16:03:09.781Z",
        conditionFilter: [],
        mappedConditionFilter: [],
        externalName: null,
        enrichmentSchemaNames: [],
        timeZone: null,
        dateTimeFormat: "OFFSET",
    },
    {
        name: "elr",
        organizationName: "ak-phd",
        topic: "covid-19",
        customerStatus: "active",
        translation: {
            schemaName: "covid-19",
            useTestProcessingMode: false,
            useBatchHeaders: true,
            receivingApplicationName: null,
            receivingApplicationOID: null,
            receivingFacilityName: null,
            receivingFacilityOID: null,
            messageProfileId: null,
            replaceValue: {
                "PID-22-3": "CDCREC",
            },
            replaceValueAwithB: {},
            reportingFacilityName: null,
            reportingFacilityId: null,
            reportingFacilityIdType: null,
            suppressQstForAoe: false,
            suppressHl7Fields: "PID-5-7, ORC-12-1, OBR-16-1",
            suppressAoe: false,
            defaultAoeToUnknown: false,
            replaceUnicodeWithAscii: false,
            useBlankInsteadOfUnknown: null,
            truncateHDNamespaceIds: false,
            truncateHl7Fields: null,
            usePid14ForPatientEmail: false,
            convertTimestampToDateTime: null,
            cliaForOutOfStateTesting: null,
            cliaForSender: {},
            phoneNumberFormatting: "STANDARD",
            suppressNonNPI: false,
            processingModeCode: null,
            replaceDiiWithOid: null,
            applyOTCDefault: false,
            useOrderingFacilityName: "STANDARD",
            valueSetOverrides: {},
            nameFormat: "STANDARD",
            receivingOrganization: null,
            convertPositiveDateTimeOffsetToNegative: false,
            stripInvalidCharsRegex: null,
            convertDateTimesToReceiverLocalTime: false,
            useHighPrecisionHeaderDateTimeFormat: false,
            type: "HL7",
            truncationConfig: {
                truncateHDNamespaceIds: false,
                truncateHl7Fields: [],
                customLengthHl7Fields: {},
            },
        },
        jurisdictionalFilter: [
            "orEquals(ordering_facility_state, AK, patient_state, AK)",
        ],
        qualityFilter: ["doesNotMatch(sender_id, simple_report.*)"],
        routingFilter: [],
        processingModeFilter: ["matches(processing_mode_code,T,D,P)"],
        reverseTheQualityFilter: false,
        deidentify: false,
        deidentifiedValue: "",
        timing: {
            operation: "MERGE",
            numberPerDay: 1440,
            initialTime: "00:00",
            timeZone: "EASTERN",
            maxReportCount: 100,
            whenEmpty: {
                action: "NONE",
                onlyOncePerDay: false,
            },
        },
        description: "",
        transport: null,
        version: 16,
        createdBy: "james.gilmore@agile6.com",
        createdAt: "2024-04-11T21:39:30.454Z",
        conditionFilter: [],
        mappedConditionFilter: [],
        externalName: null,
        enrichmentSchemaNames: [],
        timeZone: null,
        dateTimeFormat: "OFFSET",
    },
];

export const MOCK_GET_RECEIVERS_IGNORE = [
    {
        name: "FULL_ELR",
        organizationName: "ignore",
        topic: "full-elr",
        customerStatus: "active",
        translation: {
            schemaName:
                "classpath:/metadata/hl7_mapping/receivers/STLTs/CO/CO.yml",
            useTestProcessingMode: false,
            useBatchHeaders: true,
            receivingApplicationName: "CA-ELR",
            receivingApplicationOID: null,
            receivingFacilityName: "CA",
            receivingFacilityOID: null,
            messageProfileId: null,
            replaceValue: {},
            replaceValueAwithB: {},
            reportingFacilityName: null,
            reportingFacilityId: null,
            reportingFacilityIdType: null,
            suppressQstForAoe: false,
            suppressHl7Fields: null,
            suppressAoe: false,
            defaultAoeToUnknown: false,
            replaceUnicodeWithAscii: false,
            useBlankInsteadOfUnknown: null,
            truncateHDNamespaceIds: false,
            truncateHl7Fields: null,
            usePid14ForPatientEmail: false,
            convertTimestampToDateTime: null,
            cliaForOutOfStateTesting: null,
            cliaForSender: {},
            phoneNumberFormatting: "STANDARD",
            suppressNonNPI: false,
            processingModeCode: null,
            replaceDiiWithOid: null,
            applyOTCDefault: false,
            useOrderingFacilityName: "STANDARD",
            valueSetOverrides: {},
            nameFormat: "standard",
            receivingOrganization: null,
            convertPositiveDateTimeOffsetToNegative: false,
            stripInvalidCharsRegex: null,
            convertDateTimesToReceiverLocalTime: false,
            useHighPrecisionHeaderDateTimeFormat: false,
            type: "HL7",
            truncationConfig: {
                truncateHDNamespaceIds: false,
                truncateHl7Fields: [],
                customLengthHl7Fields: {},
            },
        },
        jurisdictionalFilter: [
            "(%performerState.exists() and %performerState = 'IG') or (%patientState.exists() and %patientState = 'IG')",
        ],
        qualityFilter: [
            "%messageId.exists()",
            "%patient.birthDate.exists()",
            "%patient.name.family.exists()",
            "%patient.name.given.count() > 0",
            "%specimen.type.exists()",
            "(%patient.address.line.exists() or %patient.address.postalCode.exists() or %patient.telecom.exists())",
            "((%specimen.collection.collectedPeriod.exists() or %specimen.collection.collected.exists()) or %serviceRequest.occurrence.exists() or %observation.effective.exists())",
        ],
        routingFilter: [],
        processingModeFilter: [
            "Bundle.entry.resource.ofType(MessageHeader).extension('https://reportstream.cdc.gov/fhir/StructureDefinition/sender-id').exists().not() or Bundle.entry.resource.ofType(MessageHeader).extension('https://reportstream.cdc.gov/fhir/StructureDefinition/sender-id').value != 'hcintegrations'",
        ],
        reverseTheQualityFilter: false,
        deidentify: false,
        deidentifiedValue: "",
        timing: {
            operation: "MERGE",
            numberPerDay: 1440,
            initialTime: "00:00",
            timeZone: "EASTERN",
            maxReportCount: 100,
            whenEmpty: {
                action: "NONE",
                onlyOncePerDay: false,
            },
        },
        description: "",
        transport: {
            host: "172.17.6.20",
            port: "22",
            filePath: "./upload",
            credentialName: null,
            type: "SFTP",
        },
        version: 13,
        createdBy: "michael.kalish@focusconsulting.io",
        createdAt: "2024-02-27T21:52:41.537Z",
        conditionFilter: [],
        mappedConditionFilter: [],
        externalName: "Ignore FULL_ELR",
        enrichmentSchemaNames: [],
        timeZone: null,
        dateTimeFormat: "OFFSET",
    },
    {
        name: "ELR_ELIMS",
        organizationName: "ignore",
        topic: "elr-elims",
        customerStatus: "active",
        translation: {
            schemaName:
                "classpath:/metadata/hl7_mapping/ORU_R01/ORU_R01-base.yml",
            useTestProcessingMode: false,
            useBatchHeaders: true,
            receivingApplicationName: null,
            receivingApplicationOID: null,
            receivingFacilityName: null,
            receivingFacilityOID: null,
            messageProfileId: null,
            replaceValue: {},
            replaceValueAwithB: {},
            reportingFacilityName: null,
            reportingFacilityId: null,
            reportingFacilityIdType: null,
            suppressQstForAoe: false,
            suppressHl7Fields: null,
            suppressAoe: false,
            defaultAoeToUnknown: false,
            replaceUnicodeWithAscii: false,
            useBlankInsteadOfUnknown: null,
            truncateHDNamespaceIds: false,
            truncateHl7Fields: null,
            usePid14ForPatientEmail: false,
            convertTimestampToDateTime: null,
            cliaForOutOfStateTesting: null,
            cliaForSender: {},
            phoneNumberFormatting: "STANDARD",
            suppressNonNPI: false,
            processingModeCode: null,
            replaceDiiWithOid: null,
            applyOTCDefault: false,
            useOrderingFacilityName: "STANDARD",
            valueSetOverrides: {},
            nameFormat: "standard",
            receivingOrganization: null,
            convertPositiveDateTimeOffsetToNegative: false,
            stripInvalidCharsRegex: null,
            convertDateTimesToReceiverLocalTime: false,
            useHighPrecisionHeaderDateTimeFormat: false,
            type: "HL7",
            truncationConfig: {
                truncateHDNamespaceIds: false,
                truncateHl7Fields: [],
                customLengthHl7Fields: {},
            },
        },
        jurisdictionalFilter: [
            "(%performerState.exists() and %performerState = 'IG') or (%patientState.exists() and %patientState = 'IG')",
        ],
        qualityFilter: ["true"],
        routingFilter: [],
        processingModeFilter: [],
        reverseTheQualityFilter: false,
        deidentify: false,
        deidentifiedValue: "",
        timing: {
            operation: "MERGE",
            numberPerDay: 1440,
            initialTime: "00:00",
            timeZone: "EASTERN",
            maxReportCount: 100,
            whenEmpty: {
                action: "NONE",
                onlyOncePerDay: false,
            },
        },
        description: "",
        transport: {
            host: "172.17.6.20",
            port: "22",
            filePath: "./upload",
            credentialName: null,
            type: "SFTP",
        },
        version: 3,
        createdBy: "jimfuqian@navapbc.com",
        createdAt: "2024-01-19T01:44:40.928Z",
        conditionFilter: [],
        mappedConditionFilter: [],
        externalName: "ELIMS Ignore Receiver",
        enrichmentSchemaNames: [],
        timeZone: null,
        dateTimeFormat: "OFFSET",
    },
];

export const MOCK_GET_ORGANIZATION_SETTINGS_LIST = [
    {
        name: "waters",
        description: "Test Sender from Waters",
        jurisdiction: "FEDERAL",
        filters: [],
        featureFlags: [],
        keys: [],
    },
    {
        name: "ignore",
        description: "FOR TESTING ONLY",
        jurisdiction: "FEDERAL",
        filters: [
            {
                topic: "covid-19",
                jurisdictionalFilter: ["matches(ordering_facility_state, IG)"],
                qualityFilter: null,
                routingFilter: null,
                processingModeFilter: null,
                conditionFilter: null,
                mappedConditionFilter: null,
            },
            {
                topic: "monkeypox",
                jurisdictionalFilter: ["matches(ordering_facility_state, IG)"],
                qualityFilter: null,
                routingFilter: null,
                processingModeFilter: null,
                conditionFilter: null,
                mappedConditionFilter: null,
            },
            {
                topic: "full-elr",
                jurisdictionalFilter: [
                    "(%performerState.exists() and %performerState = 'IG') or (%patientState.exists() and %patientState = 'IG')",
                ],
                qualityFilter: [
                    "(%hl7MessageType.exists() and %hl7MessageType = 'R01')",
                ],
                routingFilter: null,
                processingModeFilter: null,
                conditionFilter: null,
                mappedConditionFilter: null,
            },
        ],
        featureFlags: [],
        keys: [],
    },
    {
        name: "historytest",
        description: "FOR TESTING SUBMISSION HISTORY",
        jurisdiction: "FEDERAL",
        filters: [],
        featureFlags: [],
        keys: [],
    },
    {
        name: "simple_report",
        description: "PRIME's POC testing app",
        jurisdiction: "FEDERAL",
        filters: [],
        featureFlags: [],
        keys: [],
    },
    {
        name: "hcintegrations",
        description: "Healthcare Integrations",
        jurisdiction: "FEDERAL",
        filters: [],
        featureFlags: [],
        keys: [],
    },
    {
        name: "oh-doh",
        description: "Ohio Department of Health",
        jurisdiction: "STATE",
        stateCode: "OH",
        filters: [],
        featureFlags: [],
        keys: [],
    },
    {
        name: "hi-phd",
        description: "Hawaii Public Health Department",
        jurisdiction: "STATE",
        stateCode: "HI",
        filters: [],
        featureFlags: [],
        keys: [],
    },
    {
        name: "ak-phd",
        description: "Alaska Public Health Department",
        jurisdiction: "STATE",
        stateCode: "AK",
        filters: [],
        featureFlags: [],
        keys: [],
    },
    {
        name: "md-phd",
        description: "TEST Maryland Public Health Department",
        jurisdiction: "STATE",
        stateCode: "MD",
        filters: [
            {
                topic: "covid-19",
                jurisdictionalFilter: [
                    "orEquals(ordering_facility_state, MD, patient_state, MD)",
                ],
                qualityFilter: null,
                routingFilter: null,
                processingModeFilter: null,
                conditionFilter: null,
                mappedConditionFilter: null,
            },
            {
                topic: "full-elr",
                jurisdictionalFilter: [
                    "(%performerState.exists() and %performerState = 'MD') or (%patientState.exists() and %patientState = 'MD')",
                ],
                qualityFilter: null,
                routingFilter: null,
                processingModeFilter: null,
                conditionFilter: null,
                mappedConditionFilter: null,
            },
        ],
        featureFlags: [],
        keys: [],
    },
    {
        name: "development",
        description: "FOR DEVELOPMENT PURPOSES ONLY",
        jurisdiction: "FEDERAL",
        filters: [],
        featureFlags: [],
        keys: [],
    },
];
